// THIS FILE WAS AUTO-GENERATED BY https://github.com/kjk/w/cmd/gengo
package w

import (
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

var (
	libadvapi32 *windows.LazyDLL

	regOpenKeyExW                *windows.LazyProc
	regSetValueExW               *windows.LazyProc
	regCloseKey                  *windows.LazyProc
	regDeleteKeyExW              *windows.LazyProc
	regSetKeySecurity            *windows.LazyProc
	regCreateKeyExW              *windows.LazyProc
	regQueryValueExW             *windows.LazyProc
	impersonateSelf              *windows.LazyProc
	initializeAcl                *windows.LazyProc
	initializeSecurityDescriptor *windows.LazyProc
	initializeSid                *windows.LazyProc
	setSecurityDescriptorDacl    *windows.LazyProc
)

func init() {
	libadvapi32 = windows.NewLazySystemDLL("advapi32.dll")
	regOpenKeyExW = libadvapi32.NewProc("RegOpenKeyExW")
	regSetValueExW = libadvapi32.NewProc("RegSetValueExW")
	regCloseKey = libadvapi32.NewProc("RegCloseKey")
	regDeleteKeyExW = libadvapi32.NewProc("RegDeleteKeyExW")
	regSetKeySecurity = libadvapi32.NewProc("RegSetKeySecurity")
	regCreateKeyExW = libadvapi32.NewProc("RegCreateKeyExW")
	regQueryValueExW = libadvapi32.NewProc("RegQueryValueExW")
	impersonateSelf = libadvapi32.NewProc("ImpersonateSelf")
	initializeAcl = libadvapi32.NewProc("InitializeAcl")
	initializeSecurityDescriptor = libadvapi32.NewProc("InitializeSecurityDescriptor")
	initializeSid = libadvapi32.NewProc("InitializeSid")
	setSecurityDescriptorDacl = libadvapi32.NewProc("SetSecurityDescriptorDacl")
}

func RegOpenKeyExWSys(hKey HKEY, lpSubKey *uint16, ulOptions uint32, samDesired uint32, phkResult *HKEY) uint32 {
	ret, _, _ := syscall.Syscall6(regOpenKeyExW.Addr(), 5,
		uintptr(hKey),
		uintptr(unsafe.Pointer(lpSubKey)),
		uintptr(ulOptions),
		uintptr(samDesired),
		uintptr(unsafe.Pointer(phkResult)),
		0,
	)
	return uint32(ret)
}

func RegSetValueExWSys(hKey HKEY, lpValueName *uint16, Reserved uint32, dwType uint32, lpData *uint8, cbData uint32) uint32 {
	ret, _, _ := syscall.Syscall6(regSetValueExW.Addr(), 6,
		uintptr(hKey),
		uintptr(unsafe.Pointer(lpValueName)),
		uintptr(Reserved),
		uintptr(dwType),
		uintptr(unsafe.Pointer(lpData)),
		uintptr(cbData),
	)
	return uint32(ret)
}

func RegCloseKeySys(hKey HKEY) uint32 {
	ret, _, _ := syscall.Syscall(regCloseKey.Addr(), 1,
		uintptr(hKey),
		0,
		0,
	)
	return uint32(ret)
}

func RegDeleteKeyExWSys(hKey HKEY, lpSubKey *uint16, samDesired uint32, Reserved uint32) uint32 {
	ret, _, _ := syscall.Syscall6(regDeleteKeyExW.Addr(), 4,
		uintptr(hKey),
		uintptr(unsafe.Pointer(lpSubKey)),
		uintptr(samDesired),
		uintptr(Reserved),
		0,
		0,
	)
	return uint32(ret)
}

func RegSetKeySecuritySys(hKey HKEY, SecurityInformation uint32, pSecurityDescriptor *SECURITY_DESCRIPTOR) uint32 {
	ret, _, _ := syscall.Syscall(regSetKeySecurity.Addr(), 3,
		uintptr(hKey),
		uintptr(SecurityInformation),
		uintptr(unsafe.Pointer(pSecurityDescriptor)),
	)
	return uint32(ret)
}

func RegCreateKeyExWSys(hKey HKEY, lpSubKey *uint16, Reserved uint32, lpClass *WCHAR, dwOptions uint32, samDesired uint32, lpSecurityAttributes *SECURITY_ATTRIBUTES, phkResult *HKEY, lpdwDisposition *uint32) uint32 {
	ret, _, _ := syscall.Syscall9(regCreateKeyExW.Addr(), 9,
		uintptr(hKey),
		uintptr(unsafe.Pointer(lpSubKey)),
		uintptr(Reserved),
		uintptr(unsafe.Pointer(lpClass)),
		uintptr(dwOptions),
		uintptr(samDesired),
		uintptr(unsafe.Pointer(lpSecurityAttributes)),
		uintptr(unsafe.Pointer(phkResult)),
		uintptr(unsafe.Pointer(lpdwDisposition)),
	)
	return uint32(ret)
}

func RegQueryValueExWSys(hKey HKEY, lpValueName *uint16, lpReserved *uint32, lpType *uint32, lpData *uint8, lpcbData *uint32) uint32 {
	ret, _, _ := syscall.Syscall6(regQueryValueExW.Addr(), 6,
		uintptr(hKey),
		uintptr(unsafe.Pointer(lpValueName)),
		uintptr(unsafe.Pointer(lpReserved)),
		uintptr(unsafe.Pointer(lpType)),
		uintptr(unsafe.Pointer(lpData)),
		uintptr(unsafe.Pointer(lpcbData)),
	)
	return uint32(ret)
}

func ImpersonateSelfSys(ImpersonationLevel uint32) int32 {
	ret, _, _ := syscall.Syscall(impersonateSelf.Addr(), 1,
		uintptr(ImpersonationLevel),
		0,
		0,
	)
	return int32(ret)
}

func InitializeAclSys(pAcl *ACL, nAclLength uint32, dwAclRevision uint32) int32 {
	ret, _, _ := syscall.Syscall(initializeAcl.Addr(), 3,
		uintptr(unsafe.Pointer(pAcl)),
		uintptr(nAclLength),
		uintptr(dwAclRevision),
	)
	return int32(ret)
}

func InitializeSecurityDescriptorSys(pSecurityDescriptor *SECURITY_DESCRIPTOR, dwRevision uint32) int32 {
	ret, _, _ := syscall.Syscall(initializeSecurityDescriptor.Addr(), 2,
		uintptr(unsafe.Pointer(pSecurityDescriptor)),
		uintptr(dwRevision),
		0,
	)
	return int32(ret)
}

func InitializeSidSys(Sid unsafe.Pointer, pIdentifierAuthority *SID_IDENTIFIER_AUTHORITY, nSubAuthorityCount uint8) int32 {
	ret, _, _ := syscall.Syscall(initializeSid.Addr(), 3,
		uintptr(Sid),
		uintptr(unsafe.Pointer(pIdentifierAuthority)),
		uintptr(nSubAuthorityCount),
	)
	return int32(ret)
}

func SetSecurityDescriptorDaclSys(pSecurityDescriptor *SECURITY_DESCRIPTOR, bDaclPresent int32, pDacl *ACL, bDaclDefaulted int32) int32 {
	ret, _, _ := syscall.Syscall6(setSecurityDescriptorDacl.Addr(), 4,
		uintptr(unsafe.Pointer(pSecurityDescriptor)),
		uintptr(bDaclPresent),
		uintptr(unsafe.Pointer(pDacl)),
		uintptr(bDaclDefaulted),
		0,
		0,
	)
	return int32(ret)
}
