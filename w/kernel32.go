// THIS FILE WAS AUTO-GENERATED BY https://github.com/kjk/winapigen
package w

import (
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

var (
	libkernel32 *windows.LazyDLL

	multiByteToWideChar     *windows.LazyProc
	getTempPathW            *windows.LazyProc
	getVolumeInformationW   *windows.LazyProc
	getDriveTypeW           *windows.LazyProc
	getLogicalDriveStringsW *windows.LazyProc
	getLastError            *windows.LazyProc
	formatMessageW          *windows.LazyProc
	getDiskFreeSpaceExW     *windows.LazyProc
)

func init() {
	libkernel32 = windows.NewLazySystemDLL("kernel32.dll")
	multiByteToWideChar = libkernel32.NewProc("MultiByteToWideChar")
	getTempPathW = libkernel32.NewProc("GetTempPathW")
	getVolumeInformationW = libkernel32.NewProc("GetVolumeInformationW")
	getDriveTypeW = libkernel32.NewProc("GetDriveTypeW")
	getLogicalDriveStringsW = libkernel32.NewProc("GetLogicalDriveStringsW")
	getLastError = libkernel32.NewProc("GetLastError")
	formatMessageW = libkernel32.NewProc("FormatMessageW")
	getDiskFreeSpaceExW = libkernel32.NewProc("GetDiskFreeSpaceExW")
}

const (
	MB_PRECOMPOSED       = 0x00000001
	MB_COMPOSITE         = 0x00000002
	MB_USEGLYPHCHARS     = 0x00000004
	MB_ERR_INVALID_CHARS = 0x00000008
)

const (
	FILE_CASE_SENSITIVE_SEARCH        = 0x00000001
	FILE_CASE_PRESERVED_NAMES         = 0x00000002
	FILE_UNICODE_ON_DISK              = 0x00000004
	FILE_PERSISTENT_ACLS              = 0x00000008
	FILE_FILE_COMPRESSION             = 0x00000010
	FILE_VOLUME_QUOTAS                = 0x00000020
	FILE_SUPPORTS_SPARSE_FILES        = 0x00000040
	FILE_SUPPORTS_REPARSE_POINTS      = 0x00000080
	FILE_SUPPORTS_REMOTE_STORAGE      = 0x00000100
	FILE_VOLUME_IS_COMPRESSED         = 0x00008000
	FILE_SUPPORTS_OBJECT_IDS          = 0x00010000
	FILE_SUPPORTS_ENCRYPTION          = 0x00020000
	FILE_NAMED_STREAMS                = 0x00040000
	FILE_READ_ONLY_VOLUME             = 0x00080000
	FILE_SEQUENTIAL_WRITE_ONCE        = 0x00100000
	FILE_SUPPORTS_TRANSACTIONS        = 0x00200000
	FILE_SUPPORTS_HARD_LINKS          = 0x00400000
	FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 0x00800000
	FILE_SUPPORTS_OPEN_BY_FILE_ID     = 0x01000000
	FILE_SUPPORTS_USN_JOURNAL         = 0x02000000
	FILE_SUPPORTS_INTEGRITY_STREAMS   = 0x04000000
)

const (
	DRIVE_UNKNOWN     = 0
	DRIVE_NO_ROOT_DIR = 1
	DRIVE_REMOVABLE   = 2
	DRIVE_FIXED       = 3
	DRIVE_REMOTE      = 4
	DRIVE_CDROM       = 5
	DRIVE_RAMDISK     = 6
)

const (
	FORMAT_MESSAGE_ALLOCATE_BUFFER = 0x00000100
	FORMAT_MESSAGE_IGNORE_INSERTS  = 0x00000200
	FORMAT_MESSAGE_FROM_STRING     = 0x00000400
	FORMAT_MESSAGE_FROM_HMODULE    = 0x00000800
	FORMAT_MESSAGE_FROM_SYSTEM     = 0x00001000
	FORMAT_MESSAGE_ARGUMENT_ARRAY  = 0x00002000
	FORMAT_MESSAGE_MAX_WIDTH_MASK  = 0x000000FF
)

func MultiByteToWideCharSys(CodePage uint32, dwFlags uint32, lpMultiByteStr *byte, cbMultiByte int32, lpWideCharStr LPWSTR, cchWideChar int32) int32 {
	ret, _, _ := syscall.Syscall6(multiByteToWideChar.Addr(), 6,
		uintptr(CodePage),
		uintptr(dwFlags),
		uintptr(unsafe.Pointer(lpMultiByteStr)),
		uintptr(cbMultiByte),
		uintptr(unsafe.Pointer(lpWideCharStr)),
		uintptr(cchWideChar),
	)
	return int32(ret)
}

func GetTempPathWSys(nBufferLength uint32, lpBuffer *WCHAR) uint32 {
	ret, _, _ := syscall.Syscall(getTempPathW.Addr(), 2,
		uintptr(nBufferLength),
		uintptr(unsafe.Pointer(lpBuffer)),
		0,
	)
	return uint32(ret)
}

func GetVolumeInformationWSys(lpRootPathName *uint16, lpVolumeNameBuffer *WCHAR, nVolumeNameSize uint32, lpVolumeSerialNumber *uint32, lpMaximumComponentLength *uint32, lpFileSystemFlags *uint32, lpFileSystemNameBuffer *WCHAR, nFileSystemNameSize uint32) int32 {
	ret, _, _ := syscall.Syscall9(getVolumeInformationW.Addr(), 8,
		uintptr(unsafe.Pointer(lpRootPathName)),
		uintptr(unsafe.Pointer(lpVolumeNameBuffer)),
		uintptr(nVolumeNameSize),
		uintptr(unsafe.Pointer(lpVolumeSerialNumber)),
		uintptr(unsafe.Pointer(lpMaximumComponentLength)),
		uintptr(unsafe.Pointer(lpFileSystemFlags)),
		uintptr(unsafe.Pointer(lpFileSystemNameBuffer)),
		uintptr(nFileSystemNameSize),
		0,
	)
	return int32(ret)
}

func GetDriveTypeWSys(lpRootPathName *uint16) uint32 {
	ret, _, _ := syscall.Syscall(getDriveTypeW.Addr(), 1,
		uintptr(unsafe.Pointer(lpRootPathName)),
		0,
		0,
	)
	return uint32(ret)
}

func GetLogicalDriveStringsWSys(nBufferLength uint32, lpBuffer *WCHAR) uint32 {
	ret, _, _ := syscall.Syscall(getLogicalDriveStringsW.Addr(), 2,
		uintptr(nBufferLength),
		uintptr(unsafe.Pointer(lpBuffer)),
		0,
	)
	return uint32(ret)
}

func GetLastErrorSys() uint32 {
	ret, _, _ := syscall.Syscall(getLastError.Addr(), 0,
		0,
		0,
		0,
	)
	return uint32(ret)
}

func FormatMessageWSys(dwFlags uint32, lpSource unsafe.Pointer, dwMessageId uint32, dwLanguageId uint32, lpBuffer *WCHAR, nSize uint32, Arguments *unsafe.Pointer) uint32 {
	ret, _, _ := syscall.Syscall9(formatMessageW.Addr(), 7,
		uintptr(dwFlags),
		uintptr(lpSource),
		uintptr(dwMessageId),
		uintptr(dwLanguageId),
		uintptr(unsafe.Pointer(lpBuffer)),
		uintptr(nSize),
		uintptr(unsafe.Pointer(Arguments)),
		0,
		0,
	)
	return uint32(ret)
}

func GetDiskFreeSpaceExWSys(lpDirectoryName *uint16, lpFreeBytesAvailable *ULARGE_INTEGER, lpTotalNumberOfBytes *ULARGE_INTEGER, lpTotalNumberOfFreeBytes *ULARGE_INTEGER) int32 {
	ret, _, _ := syscall.Syscall6(getDiskFreeSpaceExW.Addr(), 4,
		uintptr(unsafe.Pointer(lpDirectoryName)),
		uintptr(unsafe.Pointer(lpFreeBytesAvailable)),
		uintptr(unsafe.Pointer(lpTotalNumberOfBytes)),
		uintptr(unsafe.Pointer(lpTotalNumberOfFreeBytes)),
		0,
		0,
	)
	return int32(ret)
}
