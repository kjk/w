// THIS FILE WAS AUTO-GENERATED BY https://github.com/kjk/w/cmd/gengo
package w

import (
	"syscall"
	"unsafe"
)

const (
	CSIDL_DESKTOP                 = 0x0000
	CSIDL_INTERNET                = 0x0001
	CSIDL_PROGRAMS                = 0x0002
	CSIDL_CONTROLS                = 0x0003
	CSIDL_PRINTERS                = 0x0004
	CSIDL_MYDOCUMENTS             = 0x0005
	CSIDL_FAVORITES               = 0x0006
	CSIDL_STARTUP                 = 0x0007
	CSIDL_RECENT                  = 0x0008
	CSIDL_SENDTO                  = 0x0009
	CSIDL_BITBUCKET               = 0x000a
	CSIDL_STARTMENU               = 0x000b
	CSIDL_MYMUSIC                 = 0x000d
	CSIDL_MYVIDEO                 = 0x000e
	CSIDL_DESKTOPDIRECTORY        = 0x0010
	CSIDL_DRIVES                  = 0x0011
	CSIDL_NETWORK                 = 0x0012
	CSIDL_NETHOOD                 = 0x0013
	CSIDL_FONTS                   = 0x0014
	CSIDL_TEMPLATES               = 0x0015
	CSIDL_COMMON_STARTMENU        = 0x0016
	CSIDL_COMMON_PROGRAMS         = 0X0017
	CSIDL_COMMON_STARTUP          = 0x0018
	CSIDL_COMMON_DESKTOPDIRECTORY = 0x0019
	CSIDL_APPDATA                 = 0x001a
	CSIDL_PRINTHOOD               = 0x001b
	CSIDL_LOCAL_APPDATA           = 0x001c
	CSIDL_ALTSTARTUP              = 0x001d
	CSIDL_COMMON_ALTSTARTUP       = 0x001e
	CSIDL_COMMON_FAVORITES        = 0x001f
	CSIDL_INTERNET_CACHE          = 0x0020
	CSIDL_COOKIES                 = 0x0021
	CSIDL_HISTORY                 = 0x0022
	CSIDL_COMMON_APPDATA          = 0x0023
	CSIDL_WINDOWS                 = 0x0024
	CSIDL_SYSTEM                  = 0x0025
	CSIDL_PROGRAM_FILES           = 0x0026
	CSIDL_MYPICTURES              = 0x0027
	CSIDL_PROFILE                 = 0x0028
	CSIDL_SYSTEMX86               = 0x0029
	CSIDL_PROGRAM_FILESX86        = 0x002a
	CSIDL_PROGRAM_FILES_COMMON    = 0x002b
	CSIDL_PROGRAM_FILES_COMMONX86 = 0x002c
	CSIDL_COMMON_TEMPLATES        = 0x002d
	CSIDL_COMMON_DOCUMENTS        = 0x002e
	CSIDL_COMMON_ADMINTOOLS       = 0x002f
	CSIDL_ADMINTOOLS              = 0x0030
	CSIDL_CONNECTIONS             = 0x0031
	CSIDL_COMMON_MUSIC            = 0x0035
	CSIDL_COMMON_PICTURES         = 0x0036
	CSIDL_COMMON_VIDEO            = 0x0037
	CSIDL_RESOURCES               = 0x0038
	CSIDL_RESOURCES_LOCALIZED     = 0x0039
	CSIDL_COMMON_OEM_LINKS        = 0x003a
	CSIDL_CDBURN_AREA             = 0x003b
	CSIDL_COMPUTERSNEARME         = 0x003d
	CSIDL_FLAG_CREATE             = 0x8000
	CSIDL_FLAG_DONT_VERIFY        = 0x4000
	CSIDL_FLAG_DONT_UNEXPAND      = 0x2000
	CSIDL_FLAG_NO_ALIAS           = 0x1000
	CSIDL_FLAG_PER_USER_INIT      = 0x0800
)

type SHITEMID struct {
	Cb   uint16
	AbID [1]uint8
}

type ITEMIDLIST struct {
	Mkid SHITEMID
}

const (
	SPI_GETBEEP                     = 0x0001
	SPI_SETBEEP                     = 0x0002
	SPI_GETMOUSE                    = 0x0003
	SPI_SETMOUSE                    = 0x0004
	SPI_GETBORDER                   = 0x0005
	SPI_SETBORDER                   = 0x0006
	SPI_GETKEYBOARDSPEED            = 0x000A
	SPI_SETKEYBOARDSPEED            = 0x000B
	SPI_LANGDRIVER                  = 0x000C
	SPI_ICONHORIZONTALSPACING       = 0x000D
	SPI_GETSCREENSAVETIMEOUT        = 0x000E
	SPI_SETSCREENSAVETIMEOUT        = 0x000F
	SPI_GETSCREENSAVEACTIVE         = 0x0010
	SPI_SETSCREENSAVEACTIVE         = 0x0011
	SPI_GETGRIDGRANULARITY          = 0x0012
	SPI_SETGRIDGRANULARITY          = 0x0013
	SPI_SETDESKWALLPAPER            = 0x0014
	SPI_SETDESKPATTERN              = 0x0015
	SPI_GETKEYBOARDDELAY            = 0x0016
	SPI_SETKEYBOARDDELAY            = 0x0017
	SPI_ICONVERTICALSPACING         = 0x0018
	SPI_GETICONTITLEWRAP            = 0x0019
	SPI_SETICONTITLEWRAP            = 0x001A
	SPI_GETMENUDROPALIGNMENT        = 0x001B
	SPI_SETMENUDROPALIGNMENT        = 0x001C
	SPI_SETDOUBLECLKWIDTH           = 0x001D
	SPI_SETDOUBLECLKHEIGHT          = 0x001E
	SPI_GETICONTITLELOGFONT         = 0x001F
	SPI_SETDOUBLECLICKTIME          = 0x0020
	SPI_SETMOUSEBUTTONSWAP          = 0x0021
	SPI_SETICONTITLELOGFONT         = 0x0022
	SPI_GETFASTTASKSWITCH           = 0x0023
	SPI_SETFASTTASKSWITCH           = 0x0024
	SPI_SETDRAGFULLWINDOWS          = 0x0025
	SPI_GETDRAGFULLWINDOWS          = 0x0026
	SPI_GETNONCLIENTMETRICS         = 0x0029
	SPI_SETNONCLIENTMETRICS         = 0x002A
	SPI_GETMINIMIZEDMETRICS         = 0x002B
	SPI_SETMINIMIZEDMETRICS         = 0x002C
	SPI_GETICONMETRICS              = 0x002D
	SPI_SETICONMETRICS              = 0x002E
	SPI_SETWORKAREA                 = 0x002F
	SPI_GETWORKAREA                 = 0x0030
	SPI_SETPENWINDOWS               = 0x0031
	SPI_GETHIGHCONTRAST             = 0x0042
	SPI_SETHIGHCONTRAST             = 0x0043
	SPI_GETKEYBOARDPREF             = 0x0044
	SPI_SETKEYBOARDPREF             = 0x0045
	SPI_GETSCREENREADER             = 0x0046
	SPI_SETSCREENREADER             = 0x0047
	SPI_GETANIMATION                = 0x0048
	SPI_SETANIMATION                = 0x0049
	SPI_GETFONTSMOOTHING            = 0x004A
	SPI_SETFONTSMOOTHING            = 0x004B
	SPI_SETDRAGWIDTH                = 0x004C
	SPI_SETDRAGHEIGHT               = 0x004D
	SPI_SETHANDHELD                 = 0x004E
	SPI_GETLOWPOWERTIMEOUT          = 0x004F
	SPI_GETPOWEROFFTIMEOUT          = 0x0050
	SPI_SETLOWPOWERTIMEOUT          = 0x0051
	SPI_SETPOWEROFFTIMEOUT          = 0x0052
	SPI_GETLOWPOWERACTIVE           = 0x0053
	SPI_GETPOWEROFFACTIVE           = 0x0054
	SPI_SETLOWPOWERACTIVE           = 0x0055
	SPI_SETPOWEROFFACTIVE           = 0x0056
	SPI_SETCURSORS                  = 0x0057
	SPI_SETICONS                    = 0x0058
	SPI_GETDEFAULTINPUTLANG         = 0x0059
	SPI_SETDEFAULTINPUTLANG         = 0x005A
	SPI_SETLANGTOGGLE               = 0x005B
	SPI_GETWINDOWSEXTENSION         = 0x005C
	SPI_SETMOUSETRAILS              = 0x005D
	SPI_GETMOUSETRAILS              = 0x005E
	SPI_SETSCREENSAVERRUNNING       = 0x0061
	SPI_GETFILTERKEYS               = 0x0032
	SPI_SETFILTERKEYS               = 0x0033
	SPI_GETTOGGLEKEYS               = 0x0034
	SPI_SETTOGGLEKEYS               = 0x0035
	SPI_GETMOUSEKEYS                = 0x0036
	SPI_SETMOUSEKEYS                = 0x0037
	SPI_GETSHOWSOUNDS               = 0x0038
	SPI_SETSHOWSOUNDS               = 0x0039
	SPI_GETSTICKYKEYS               = 0x003A
	SPI_SETSTICKYKEYS               = 0x003B
	SPI_GETACCESSTIMEOUT            = 0x003C
	SPI_SETACCESSTIMEOUT            = 0x003D
	SPI_GETSERIALKEYS               = 0x003E
	SPI_SETSERIALKEYS               = 0x003F
	SPI_GETSOUNDSENTRY              = 0x0040
	SPI_SETSOUNDSENTRY              = 0x0041
	SPI_GETSNAPTODEFBUTTON          = 0x005F
	SPI_SETSNAPTODEFBUTTON          = 0x0060
	SPI_GETMOUSEHOVERWIDTH          = 0x0062
	SPI_SETMOUSEHOVERWIDTH          = 0x0063
	SPI_GETMOUSEHOVERHEIGHT         = 0x0064
	SPI_SETMOUSEHOVERHEIGHT         = 0x0065
	SPI_GETMOUSEHOVERTIME           = 0x0066
	SPI_SETMOUSEHOVERTIME           = 0x0067
	SPI_GETWHEELSCROLLLINES         = 0x0068
	SPI_SETWHEELSCROLLLINES         = 0x0069
	SPI_GETMENUSHOWDELAY            = 0x006A
	SPI_SETMENUSHOWDELAY            = 0x006B
	SPI_GETWHEELSCROLLCHARS         = 0x006C
	SPI_SETWHEELSCROLLCHARS         = 0x006D
	SPI_GETSHOWIMEUI                = 0x006E
	SPI_SETSHOWIMEUI                = 0x006F
	SPI_GETMOUSESPEED               = 0x0070
	SPI_SETMOUSESPEED               = 0x0071
	SPI_GETSCREENSAVERRUNNING       = 0x0072
	SPI_GETDESKWALLPAPER            = 0x0073
	SPI_GETAUDIODESCRIPTION         = 0x0074
	SPI_SETAUDIODESCRIPTION         = 0x0075
	SPI_GETSCREENSAVESECURE         = 0x0076
	SPI_SETSCREENSAVESECURE         = 0x0077
	SPI_GETACTIVEWINDOWTRACKING     = 0x1000
	SPI_SETACTIVEWINDOWTRACKING     = 0x1001
	SPI_GETMENUANIMATION            = 0x1002
	SPI_SETMENUANIMATION            = 0x1003
	SPI_GETCOMBOBOXANIMATION        = 0x1004
	SPI_SETCOMBOBOXANIMATION        = 0x1005
	SPI_GETLISTBOXSMOOTHSCROLLING   = 0x1006
	SPI_SETLISTBOXSMOOTHSCROLLING   = 0x1007
	SPI_GETGRADIENTCAPTIONS         = 0x1008
	SPI_SETGRADIENTCAPTIONS         = 0x1009
	SPI_GETKEYBOARDCUES             = 0x100A
	SPI_SETKEYBOARDCUES             = 0x100B
	SPI_GETACTIVEWNDTRKZORDER       = 0x100C
	SPI_SETACTIVEWNDTRKZORDER       = 0x100D
	SPI_GETHOTTRACKING              = 0x100E
	SPI_SETHOTTRACKING              = 0x100F
	SPI_GETMENUFADE                 = 0x1012
	SPI_SETMENUFADE                 = 0x1013
	SPI_GETSELECTIONFADE            = 0x1014
	SPI_SETSELECTIONFADE            = 0x1015
	SPI_GETTOOLTIPANIMATION         = 0x1016
	SPI_SETTOOLTIPANIMATION         = 0x1017
	SPI_GETTOOLTIPFADE              = 0x1018
	SPI_SETTOOLTIPFADE              = 0x1019
	SPI_GETCURSORSHADOW             = 0x101A
	SPI_SETCURSORSHADOW             = 0x101B
	SPI_GETMOUSESONAR               = 0x101C
	SPI_SETMOUSESONAR               = 0x101D
	SPI_GETMOUSECLICKLOCK           = 0x101E
	SPI_SETMOUSECLICKLOCK           = 0x101F
	SPI_GETMOUSEVANISH              = 0x1020
	SPI_SETMOUSEVANISH              = 0x1021
	SPI_GETFLATMENU                 = 0x1022
	SPI_SETFLATMENU                 = 0x1023
	SPI_GETDROPSHADOW               = 0x1024
	SPI_SETDROPSHADOW               = 0x1025
	SPI_GETBLOCKSENDINPUTRESETS     = 0x1026
	SPI_SETBLOCKSENDINPUTRESETS     = 0x1027
	SPI_GETUIEFFECTS                = 0x103E
	SPI_SETUIEFFECTS                = 0x103F
	SPI_GETDISABLEOVERLAPPEDCONTENT = 0x1040
	SPI_SETDISABLEOVERLAPPEDCONTENT = 0x1041
	SPI_GETCLIENTAREAANIMATION      = 0x1042
	SPI_SETCLIENTAREAANIMATION      = 0x1043
	SPI_GETCLEARTYPE                = 0x1048
	SPI_SETCLEARTYPE                = 0x1049
	SPI_GETSPEECHRECOGNITION        = 0x104A
	SPI_SETSPEECHRECOGNITION        = 0x104B
	SPI_GETFOREGROUNDLOCKTIMEOUT    = 0x2000
	SPI_SETFOREGROUNDLOCKTIMEOUT    = 0x2001
	SPI_GETACTIVEWNDTRKTIMEOUT      = 0x2002
	SPI_SETACTIVEWNDTRKTIMEOUT      = 0x2003
	SPI_GETFOREGROUNDFLASHCOUNT     = 0x2004
	SPI_SETFOREGROUNDFLASHCOUNT     = 0x2005
	SPI_GETCARETWIDTH               = 0x2006
	SPI_SETCARETWIDTH               = 0x2007
	SPI_GETMOUSECLICKLOCKTIME       = 0x2008
	SPI_SETMOUSECLICKLOCKTIME       = 0x2009
	SPI_GETFONTSMOOTHINGTYPE        = 0x200A
	SPI_SETFONTSMOOTHINGTYPE        = 0x200B
	SPI_GETFONTSMOOTHINGCONTRAST    = 0x200C
	SPI_SETFONTSMOOTHINGCONTRAST    = 0x200D
	SPI_GETFOCUSBORDERWIDTH         = 0x200E
	SPI_SETFOCUSBORDERWIDTH         = 0x200F
	SPI_GETFOCUSBORDERHEIGHT        = 0x2010
	SPI_SETFOCUSBORDERHEIGHT        = 0x2011
	SPI_GETFONTSMOOTHINGORIENTATION = 0x2012
	SPI_SETFONTSMOOTHINGORIENTATION = 0x2013
	SPI_GETMINIMUMHITRADIUS         = 0x2014
	SPI_SETMINIMUMHITRADIUS         = 0x2015
	SPI_GETMESSAGEDURATION          = 0x2016
	SPI_SETMESSAGEDURATION          = 0x2017
)

const (
	SPIF_UPDATEINIFILE    = 0x0001
	SPIF_SENDWININICHANGE = 0x0002
)

const (
	SLGP_SHORTPATH        = 0x1
	SLGP_UNCPRIORITY      = 0x2
	SLGP_RAWPATH          = 0x4
	SLGP_RELATIVEPRIORITY = 0x8
)

const (
	SLR_NO_UI                     = 0x1
	SLR_ANY_MATCH                 = 0x2
	SLR_UPDATE                    = 0x4
	SLR_NOUPDATE                  = 0x8
	SLR_NOSEARCH                  = 0x10
	SLR_NOTRACK                   = 0x20
	SLR_NOLINKINFO                = 0x40
	SLR_INVOKE_MSI                = 0x80
	SLR_NO_UI_WITH_MSG_PUMP       = 0x101
	SLR_OFFER_DELETE_WITHOUT_FILE = 0x200
	SLR_KNOWNFOLDER               = 0x400
	SLR_MACHINE_IN_LOCAL_TARGET   = 0x800
	SLR_UPDATE_MACHINE_AND_SID    = 0x1000
)

var IID_IShellLinkW = IID{0x000214F9, 0x0000, 0x0000, [8]byte{0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46}}

type IShellLinkWVtbl struct {
	// IUnknown
	QueryInterface uintptr
	AddRef         uintptr
	Release        uintptr

	// IShellLinkW
	GetPath             uintptr
	GetIDList           uintptr
	SetIDList           uintptr
	GetDescription      uintptr
	SetDescription      uintptr
	GetWorkingDirectory uintptr
	SetWorkingDirectory uintptr
	GetArguments        uintptr
	SetArguments        uintptr
	GetHotkey           uintptr
	SetHotkey           uintptr
	GetShowCmd          uintptr
	SetShowCmd          uintptr
	GetIconLocation     uintptr
	SetIconLocation     uintptr
	SetRelativePath     uintptr
	Resolve             uintptr
	SetPath             uintptr
}

type IShellLinkW struct {
	Vtbl *IShellLinkWVtbl
}

// methods for IUnknown

func (i *IShellLinkW) QueryInterface(riid *GUID, ppvObject *unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.QueryInterface, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(riid)),
		uintptr(unsafe.Pointer(ppvObject)),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) AddRef() uint32 {
	ret, _, _ := syscall.Syscall(i.Vtbl.AddRef, 1,
		uintptr(unsafe.Pointer(i)),
		0,
		0,
	)
	return uint32(ret)
}

func (i *IShellLinkW) Release() uint32 {
	ret, _, _ := syscall.Syscall(i.Vtbl.Release, 1,
		uintptr(unsafe.Pointer(i)),
		0,
		0,
	)
	return uint32(ret)
}

// methods for IShellLinkW

func (i *IShellLinkW) GetPath(pszFile LPWSTR, cch int32, pfd *WIN32_FIND_DATAW, fFlags uint32) HRESULT {
	ret, _, _ := syscall.Syscall6(i.Vtbl.GetPath, 5,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszFile)),
		uintptr(cch),
		uintptr(unsafe.Pointer(pfd)),
		uintptr(fFlags),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetIDList(ppidl **ITEMIDLIST) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetIDList, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(ppidl)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetIDList(pidl *ITEMIDLIST) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetIDList, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pidl)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetDescription(pszName LPWSTR, cch int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetDescription, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszName)),
		uintptr(cch),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetDescription(pszName LPCWSTR) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetDescription, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszName)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetWorkingDirectory(pszDir LPWSTR, cch int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetWorkingDirectory, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszDir)),
		uintptr(cch),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetWorkingDirectory(pszDir LPCWSTR) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetWorkingDirectory, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszDir)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetArguments(pszArgs LPWSTR, cch int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetArguments, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszArgs)),
		uintptr(cch),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetArguments(pszArgs LPCWSTR) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetArguments, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszArgs)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetHotkey(pwHotkey *uint16) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetHotkey, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pwHotkey)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetHotkey(wHotkey uint16) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetHotkey, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(wHotkey),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetShowCmd(piShowCmd *int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.GetShowCmd, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(piShowCmd)),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetShowCmd(iShowCmd int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetShowCmd, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(iShowCmd),
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) GetIconLocation(pszIconPath LPWSTR, cch int32, piIcon *int32) HRESULT {
	ret, _, _ := syscall.Syscall6(i.Vtbl.GetIconLocation, 4,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszIconPath)),
		uintptr(cch),
		uintptr(unsafe.Pointer(piIcon)),
		0,
		0,
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetIconLocation(pszIconPath LPCWSTR, iIcon int32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetIconLocation, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszIconPath)),
		uintptr(iIcon),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetRelativePath(pszPathRel LPCWSTR, dwReserved uint32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetRelativePath, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszPathRel)),
		uintptr(dwReserved),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) Resolve(hwnd HWND, fFlags uint32) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.Resolve, 3,
		uintptr(unsafe.Pointer(i)),
		uintptr(hwnd),
		uintptr(fFlags),
	)
	return HRESULT(ret)
}

func (i *IShellLinkW) SetPath(pszFile LPCWSTR) HRESULT {
	ret, _, _ := syscall.Syscall(i.Vtbl.SetPath, 2,
		uintptr(unsafe.Pointer(i)),
		uintptr(unsafe.Pointer(pszFile)),
		0,
	)
	return HRESULT(ret)
}
