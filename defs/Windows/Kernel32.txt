include Headers\windows.h.txt
include Headers\processes.h.txt
include Headers\native.h.txt
include Headers\gdi.h.txt
include Headers\ioctl.h.txt
include Headers\registry.h.txt
include WindowsStore\Packaging\Packaging.h.txt

dll Kernel32.dll callingConvention=STDCALL errorFunc=GetLastError onlineHelp=MSDN
sourceModule Advapi32.dll include=Windows\Advapi32.xml
func RegCloseKey

func RegCreateKeyExA

func RegCreateKeyExW

func RegDeleteKeyExA

func RegDeleteKeyExW

func RegDeleteTreeA

func RegDeleteTreeW

func RegDeleteValueA

func RegDeleteValueW

func RegDisablePredefinedCacheEx

func RegEnumKeyExA

func RegEnumKeyExW

func RegEnumValueA

func RegEnumValueW

func RegFlushKey

func RegGetValueA

func RegGetValueW

func RegLoadKeyA

func RegLoadKeyW

func RegLoadMUIStringA

func RegLoadMUIStringW

func RegNotifyChangeKeyValue

func RegOpenCurrentUser

func RegOpenKeyExA

func RegOpenKeyExW

func RegOpenUserClassesRoot

func RegQueryInfoKeyA

func RegQueryInfoKeyW

func RegQueryValueExA

func RegQueryValueExW

func RegRestoreKeyA

func RegRestoreKeyW

func RegSaveKeyExA

func RegSaveKeyExW

func RegSetValueExA

func RegSetValueExW

func RegUnLoadKeyA

func RegUnLoadKeyW

func RegGetKeySecurity

func RegSetKeySecurity

func CreateProcessAsUserA

func CreateProcessAsUserW

sourceModule Lz32.dll include=Windows\Lz32.xml
func CopyLZFile

func GetExpandedNameA

func GetExpandedNameW

func LZClose

func LZCloseFile

func LZCopy

func LZCreateFileW

func LZDone

func LZInit

func LZOpenFileA

func LZOpenFileW

func LZRead

func LZSeek

func LZStart

category "Diagnostics/Debugging and Error Handling/Basic Debugging"
category "System Services/Dynamic-Link Libraries"
category "Diagnostics/Tool Help Library"
category "Diagnostics/Debugging and Error Handling/Application Recovery and Restart"
category "System Services/Windows System Information/Registry/Initialization File (INI)"
category "Data Access and Storage/Local File Systems/File Management"
category "Data Access and Storage/Local File Systems/File Management/File System Redirector"
category "System Services/Memory Management/General Memory"
category "System Services/Memory Management/Data Execution Prevention"
category "System Services/Memory Management/File Mapping"
category "System Services/Memory Management/Address Windowing Extensions (AWE)"
category "System Services/Memory Management/Heaps"
category "System Services/Memory Management/Virtual Memory"
category "System Services/Memory Management/Global and Local"
category "System Services/Memory Management/Bad Memory"
category "System Services/Memory Management/Obsolete"
category "System Services/Processes and Threads/Process"
category "System Services/Processes and Threads/Thread"
category "System Services/Processes and Threads/Extended Attribute"
category "System Services/Processes and Threads/WOW64"
category "System Services/Processes and Threads/Job Object"
category "System Services/Processes and Threads/Thread Pool"
category "System Services/Processes and Threads/Fiber"
category "System Services/Processes and Threads/NUMA Support"
category "System Services/Processes and Threads/Processor"
category "System Services/Processes and Threads/User-Mode Scheduling"
category "System Services/Processes and Threads/Obsolete"
category "Application Installation and Servicing/Isolated Applications and Side-by-side Assemblies/Side-by-side Assemblies"
category "Windows Application UI Development/Data Exchange/Dynamic Data Exchange (DDE)/Atoms"
category "Devices/Communications Resources"
category "Windows Environment Development/Consoles"
category "Devices/Device Management"
category "Diagnostics/Debugging and Error Handling/Error Handling"
category "System Services/Windows System Information/Handles and Objects"
category "System Services/Interprocess Communications/Mailslots"
category "Windows Application UI Development/Internationalization for Windows Applications/Globalization Services/National Language Support"
category "System Services/Power Management"
category "Windows Application UI Development/Menus and Other Resources/Resources"
category "Windows Application UI Development/Menus and Other Resources/Strings"
category "Diagnostics/Debugging and Error Handling/Structured Exception Handling"
category "System Services/Synchronization/Asynchronous"
category "System Services/Synchronization/Condition variable and SRW lock"
category "System Services/Synchronization/Critical Section"
category "System Services/Synchronization/Event"
category "System Services/Synchronization/One-time Initialization"
category "System Services/Synchronization/Interlocked"
category "System Services/Synchronization/Mutex"
category "System Services/Synchronization/Private Namespace"
category "System Services/Synchronization/Semaphore"
category "System Services/Synchronization/Singly-linked List"
category "System Services/Synchronization/Synchronization Barrier"
category "System Services/Synchronization/Timer-queue Timer"
category "System Services/Synchronization/Wait"
category "System Services/Synchronization/Waitable-timer"
category "System Services/Windows System Information/System Information"
category "Data Access and Storage/Backup/Backup"
category "System Services/Remote Desktop Services"
category "System Services/Windows System Information/Time"
category "Windows Application UI Development/Windows and Messages/Timers"
category "Windows Application UI Development/Internationalization for Windows Applications/Unicode and Character Sets"
category "Windows Application UI Development/Menus and Other Resources/Version Information"
category "Diagnostics/Windows Error Reporting"
category "Data Access and Storage/Local File Systems/Directory Management"
category "Data Access and Storage/Local File Systems/Disk Management"
category "Data Access and Storage/Local File Systems/Volume Management"
category "System Services/Interprocess Communications/Pipes"
category "Diagnostics/Hardware Counter Profiling (HCP)"
category "Undocumented (UnDoc'd)" onlineHelp=UnDoc'd-kernel32
category "Additional Resources/System"
category "Additional Resources/System/Delay-Loaded DLLs"
category "Additional Resources/System/Pointers"
category "Windows Data Types/Large Integer"
category "Security and Identity/Authorization/Basic Access Control"
category "Security and Identity/Authorization/Low-level Access Control"
category "Application Installation and Servicing/Windows Store/Package Query"
category "Diagnostics/Process Status API (PSAPI)"
category "Windows Application UI Development/Internationalization for Windows Applications/Multilingual User Interface"
category "Diagnostics/Debugging and Error Handling/Intel AVX"
category "System Services/Processes and Threads/Process"
errorDecode errorFunc=GetLastError
arch 32
union [IMAGE_THUNK_DATA_u] display=union
  ForwarderString DWORD
  Function DWORD
  Ordinal DWORD
  AddressOfData DWORD

arch off
arch 64
union [IMAGE_THUNK_DATA_u] display=union
  ForwarderString ULONGLONG
  Function ULONGLONG
  Ordinal ULONGLONG
  AddressOfData ULONGLONG

arch off
alias PKNONVOLATILE_CONTEXT_POINTERS LPVOID

alias LPCONTEXT LPVOID

alias PCONTEXT_EX LPVOID

pointer PCONTEXT_EX* PCONTEXT_EX

alias LPCOMSTAT LPVOID

alias LPLDT_ENTRY LPVOID

alias PWOW64_LDT_ENTRY LPVOID

alias HLOCAL HANDLE

alias APPLICATION_RECOVERY_CALLBACK LPVOID

pointer APPLICATION_RECOVERY_CALLBACK* APPLICATION_RECOVERY_CALLBACK

alias LPPROGRESS_ROUTINE LPVOID

alias LPOVERLAPPED_COMPLETION_ROUTINE LPVOID

alias PSECURE_MEMORY_CACHE_CALLBACK LPVOID

alias PTP_CALLBACK_INSTANCE LPVOID

alias PTP_IO LPVOID

alias PTP_POOL LPVOID

alias PTP_CLEANUP_GROUP LPVOID

alias PTP_CLEANUP_GROUP_CANCEL_CALLBACK LPVOID

alias PTP_TIMER LPVOID

alias PTP_WAIT LPVOID

alias PTP_WORK LPVOID

alias PTP_WIN32_IO_CALLBACK LPVOID

alias PTP_TIMER_CALLBACK LPVOID

alias PTP_WAIT_CALLBACK LPVOID

alias PTP_WORK_CALLBACK LPVOID

alias PTP_SIMPLE_CALLBACK LPVOID

alias LPFIBER_START_ROUTINE LPVOID

alias PFLS_CALLBACK_FUNCTION LPVOID

alias PUMS_CONTEXT LPVOID

pointer PUMS_CONTEXT* PUMS_CONTEXT

alias PHANDLER_ROUTINE LPVOID

alias CALINFO_ENUMPROC LPVOID

alias CALINFO_ENUMPROCEX LPVOID

alias CALINFO_ENUMPROCEXEX LPVOID

alias DATEFMT_ENUMPROC LPVOID

alias DATEFMT_ENUMPROCEX LPVOID

alias DATEFMT_ENUMPROCEXEX LPVOID

alias LANGGROUPLOCALE_ENUMPROC LPVOID

alias CODEPAGE_ENUMPROC LPVOID

alias GEO_ENUMPROC LPVOID

alias LANGUAGEGROUP_ENUMPROC LPVOID

alias LOCALE_ENUMPROC LPVOID

alias LOCALE_ENUMPROCEX LPVOID

alias TIMEFMT_ENUMPROC LPVOID

alias TIMEFMT_ENUMPROCEX LPVOID

alias ENUMRESLANGPROC LPVOID

alias ENUMRESNAMEPROC LPVOID

alias ENUMRESTYPEPROC LPVOID

alias LPTOP_LEVEL_EXCEPTION_FILTER LPVOID

alias PGET_RUNTIME_FUNCTION_CALLBACK LPVOID

alias PAPCFUNC LPVOID

alias PSRWLOCK LPVOID

alias PCONDITION_VARIABLE LPVOID

alias LPINIT_ONCE LPVOID

alias PINIT_ONCE LPINIT_ONCE

alias PINIT_ONCE_FN LPVOID

alias WAITORTIMERCALLBACK LPVOID

alias PTIMERAPCROUTINE LPVOID

alias LPCRITICAL_SECTION PRTL_CRITICAL_SECTION

alias PCRITICAL_SECTION PRTL_CRITICAL_SECTION

alias TP_VERSION DWORD

alias ACTIVATION_CONTEXT* LPVOID

alias DLL_DIRECTORY_COOKIE PVOID

alias PBAD_MEMORY_CALLBACK_ROUTINE LPVOID

alias "VOID volatile*" VOID*

alias PCOPYFILE2_PROGRESS_ROUTINE LPVOID

alias "const UINT32" UINT32

alias PACKAGE_INFO_REFERENCE LPVOID

pointer PACKAGE_INFO_REFERENCE* PACKAGE_INFO_REFERENCE

alias UILANGUAGE_ENUMPROC LPVOID

alias PDELAYLOAD_FAILURE_DLL_CALLBACK LPVOID

alias PDELAYLOAD_FAILURE_SYSTEM_ROUTINE LPVOID

array "BYTE [20]" base=BYTE count=20

array "BYTE [21]" base=BYTE count=21

array "BYTE [38]" base=BYTE count=38

array "BYTE [MAX_DEFAULTCHAR]" base=BYTE count=2

array "BYTE [MAX_LEADBYTES]" base=BYTE count=12

array "BYTE [WOW64_MAXIMUM_SUPPORTED_EXTENSION]" base=BYTE count=512

array "BYTE [WOW64_SIZE_OF_80387_REGISTERS]" base=BYTE count=80

array "WORD [3]" base=WORD count=3

array "ULONG_PTR [2]" base=ULONG_PTR count=2

array "COLORREF [16]" base=COLORREF count=16

array "ULONGLONG [2]" base=ULONGLONG count=2

array "TCHAR [MAX_MODULE_NAME32 + 1]" base=TCHAR count=256

alias [ERROR_CODE_LONG] [ERROR_CODE] display=LONG

flag [ConsoleAttribute] WORD display=WORD
  FOREGROUND_BLUE            0x0001
  FOREGROUND_GREEN           0x0002
  FOREGROUND_RED             0x0004
  FOREGROUND_INTENSITY       0x0008
  BACKGROUND_BLUE            0x0010
  BACKGROUND_GREEN           0x0020
  BACKGROUND_RED             0x0040
  BACKGROUND_INTENSITY       0x0080
  COMMON_LVB_LEADING_BYTE    0x0100
  COMMON_LVB_TRAILING_BYTE   0x0200
  COMMON_LVB_SBCSDBCS        0x0300
  COMMON_LVB_GRID_HORIZONTAL 0x0400
  COMMON_LVB_GRID_LVERTICAL  0x0800
  COMMON_LVB_GRID_RVERTICAL  0x1000
  COMMON_LVB_REVERSE_VIDEO   0x4000
  COMMON_LVB_UNDERSCORE      0x8000

pointer [ConsoleAttribute*] [ConsoleAttribute] display=LPWORD

enum GEOID UINT
  Antigua and Barbuda                          0x2
  Afghanistan                                  0x3
  Algeria                                      0x4
  Azerbaijan                                   0x5
  Albania                                      0x6
  Armenia                                      0x7
  Andorra                                      0x8
  Angola                                       0x9
  American Samoa                               0xA
  Argentina                                    0xB
  Australia                                    0xC
  Austria                                      0xE
  Bahrain                                      0x11
  Barbados                                     0x12
  Botswana                                     0x13
  Bermuda                                      0x14
  Belgium                                      0x15
  Bahamas, The                                 0x16
  Bangladesh                                   0x17
  Belize                                       0x18
  Bosnia and Herzegovina                       0x19
  Bolivia                                      0x1A
  Myanmar                                      0x1B
  Benin                                        0x1C
  Belarus                                      0x1D
  Solomon Islands                              0x1E
  Brazil                                       0x20
  Bhutan                                       0x22
  Bulgaria                                     0x23
  Brunei                                       0x25
  Burundi                                      0x26
  Canada                                       0x27
  Cambodia                                     0x28
  Chad                                         0x29
  Sri Lanka                                    0x2A
  Congo                                        0x2B
  Congo (DRC)                                  0x2C
  China                                        0x2D
  Chile                                        0x2E
  Cameroon                                     0x31
  Comoros                                      0x32
  Colombia                                     0x33
  Costa Rica                                   0x36
  Central African Republic                     0x37
  Cuba                                         0x38
  Cape Verde                                   0x39
  Cyprus                                       0x3B
  Denmark                                      0x3D
  Djibouti                                     0x3E
  Dominica                                     0x3F
  Dominican Republic                           0x41
  Ecuador                                      0x42
  Egypt                                        0x43
  Ireland                                      0x44
  Equatorial Guinea                            0x45
  Estonia                                      0x46
  Eritrea                                      0x47
  El Salvador                                  0x48
  Ethiopia                                     0x49
  Czech Republic                               0x4B
  Finland                                      0x4D
  Fiji Islands                                 0x4E
  Micronesia                                   0x50
  Faroe Islands                                0x51
  France                                       0x54
  Gambia, The                                  0x56
  Gabon                                        0x57
  Georgia                                      0x58
  Ghana                                        0x59
  Gibraltar                                    0x5A
  Grenada                                      0x5B
  Greenland                                    0x5D
  Germany                                      0x5E
  Greece                                       0x62
  Guatemala                                    0x63
  Guinea                                       0x64
  Guyana                                       0x65
  Haiti                                        0x67
  Hong Kong SAR                                0x68
  Honduras                                     0x6A
  Croatia                                      0x6C
  Hungary                                      0x6D
  Iceland                                      0x6E
  Indonesia                                    0x6F
  India                                        0x71
  British Indian Ocean Territory               0x72
  Iran                                         0x74
  Israel                                       0x75
  Italy                                        0x76
  Côte d'Ivoire                               0x77
  Iraq                                         0x79
  Japan                                        0x7A
  Jamaica                                      0x7C
  Jan Mayen                                    0x7D
  Jordan                                       0x7E
  Johnston Atoll                               0x7F
  Kenya                                        0x81
  Kyrgyzstan                                   0x82
  North Korea                                  0x83
  Kiribati                                     0x85
  Korea                                        0x86
  Kuwait                                       0x88
  Kazakhstan                                   0x89
  Laos                                         0x8A
  Lebanon                                      0x8B
  Latvia                                       0x8C
  Lithuania                                    0x8D
  Liberia                                      0x8E
  Slovakia                                     0x8F
  Liechtenstein                                0x91
  Lesotho                                      0x92
  Luxembourg                                   0x93
  Libya                                        0x94
  Madagascar                                   0x95
  Macao SAR                                    0x97
  Moldova                                      0x98
  Mongolia                                     0x9A
  Malawi                                       0x9C
  Mali                                         0x9D
  Monaco                                       0x9E
  Morocco                                      0x9F
  Mauritius                                    0xA0
  Mauritania                                   0xA2
  Malta                                        0xA3
  Oman                                         0xA4
  Maldives                                     0xA5
  Mexico                                       0xA6
  Malaysia                                     0xA7
  Mozambique                                   0xA8
  Niger                                        0xAD
  Vanuatu                                      0xAE
  Nigeria                                      0xAF
  Netherlands                                  0xB0
  Norway                                       0xB1
  Nepal                                        0xB2
  Nauru                                        0xB4
  Suriname                                     0xB5
  Nicaragua                                    0xB6
  New Zealand                                  0xB7
  Palestinian Authority                        0xB8
  Paraguay                                     0xB9
  Peru                                         0xBB
  Pakistan                                     0xBE
  Poland                                       0xBF
  Panama                                       0xC0
  Portugal                                     0xC1
  Papua New Guinea                             0xC2
  Palau                                        0xC3
  Guinea-Bissau                                0xC4
  Qatar                                        0xC5
  Reunion                                      0xC6
  Marshall Islands                             0xC7
  Romania                                      0xC8
  Philippines                                  0xC9
  Puerto Rico                                  0xCA
  Russia                                       0xCB
  Rwanda                                       0xCC
  Saudi Arabia                                 0xCD
  St. Pierre and Miquelon                      0xCE
  St. Kitts and Nevis                          0xCF
  Seychelles                                   0xD0
  South Africa                                 0xD1
  Senegal                                      0xD2
  Slovenia                                     0xD4
  Sierra Leone                                 0xD5
  San Marino                                   0xD6
  Singapore                                    0xD7
  Somalia                                      0xD8
  Spain                                        0xD9
  St. Lucia                                    0xDA
  Sudan                                        0xDB
  Svalbard                                     0xDC
  Sweden                                       0xDD
  Syria                                        0xDE
  Switzerland                                  0xDF
  United Arab Emirates                         0xE0
  Trinidad and Tobago                          0xE1
  Thailand                                     0xE3
  Tajikistan                                   0xE4
  Tonga                                        0xE7
  Togo                                         0xE8
  São Tomé and Príncipe                     0xE9
  Tunisia                                      0xEA
  Turkey                                       0xEB
  Tuvalu                                       0xEC
  Taiwan                                       0xED
  Turkmenistan                                 0xEE
  Tanzania                                     0xEF
  Uganda                                       0xF0
  Ukraine                                      0xF1
  United Kingdom                               0xF2
  United States                                0xF4
  Burkina Faso                                 0xF5
  Uruguay                                      0xF6
  Uzbekistan                                   0xF7
  St. Vincent and the Grenadines               0xF8
  Venezuela                                    0xF9
  Vietnam                                      0xFB
  Virgin Islands                               0xFC
  Vatican City                                 0xFD
  Namibia                                      0xFE
  Wake Island                                  0x102
  Samoa                                        0x103
  Swaziland                                    0x104
  Yemen                                        0x105
  Zambia                                       0x107
  Zimbabwe                                     0x108
  Serbia                                       0x10D
  Anguilla                                     0x12C
  Antarctica                                   0x12D
  Aruba                                        0x12E
  Ascension Island                             0x12F
  Ashmore and Cartier Islands                  0x130
  Baker Island                                 0x131
  Bouvet Island                                0x132
  Cayman Islands                               0x133
  Channel Islands                              0x134
  Christmas Island                             0x135
  Clipperton Island                            0x136
  Cocos (Keeling) Islands                      0x137
  Cook Islands                                 0x138
  Coral Sea Islands                            0x139
  Diego Garcia                                 0x13A
  Falkland Islands (Islas Malvinas)            0x13B
  French Guiana                                0x13D
  French Polynesia                             0x13E
  French Southern and Antarctic Lands          0x13F
  Guadeloupe                                   0x141
  Guam                                         0x142
  Guantanamo Bay                               0x143
  Guernsey                                     0x144
  Heard Island and McDonald Islands            0x145
  Howland Island                               0x146
  Jarvis Island                                0x147
  Jersey                                       0x148
  Kingman Reef                                 0x149
  Martinique                                   0x14A
  Mayotte                                      0x14B
  Montserrat                                   0x14C
  Netherlands Antilles                         0x14D
  New Caledonia                                0x14E
  Niue                                         0x14F
  Norfolk Island                               0x150
  Northern Mariana Islands                     0x151
  Palmyra Atoll                                0x152
  Pitcairn Islands                             0x153
  Rota Island                                  0x154
  Saipan                                       0x155
  South Georgia and the South Sandwich Islands 0x156
  St. Helena                                   0x157
  Tinian Island                                0x15A
  Tokelau                                      0x15B
  Tristan da Cunha                             0x15C
  Turks and Caicos Islands                     0x15D
  Virgin Islands, British                      0x15F
  Wallis and Futuna                            0x160
  Isle of Man                                  0x3B16
  Macedonia, FYROM                             0x4CA2
  Midway Islands                               0x52FA
  Timor-Leste                                  0x6F60E7

enum STREAM_INFO_LEVELS UINT
  FindStreamInfoStandard 0

enum HFILE UINT
  HFILE_ERROR -1

enum DEP_SYSTEM_POLICY_TYPE UINT
  AlwaysOff 0
  AlwaysOn  1
  OptIn     2
  OptOut    3

enum TP_CALLBACK_PRIORITY UINT
  TP_CALLBACK_PRIORITY_HIGH    0
  TP_CALLBACK_PRIORITY_LOW     1
  TP_CALLBACK_PRIORITY_NORMAL  2
  TP_CALLBACK_PRIORITY_INVALID 3

enum UMS_THREAD_INFO_CLASS UINT
  UmsThreadInvalidInfoClass 0
  UmsThreadUserContext      1
  UmsThreadPriority         2
  UmsThreadAffinity         3
  UmsThreadTeb              4
  UmsThreadIsSuspended      5
  UmsThreadIsTerminated     6

enum GEOCLASS UINT
  GEOCLASS_REGION 14
  GEOCLASS_NATION 16

enum FILE_INFO_BY_HANDLE_CLASS UINT
  FileBasicInfo                  0
  FileStandardInfo               1
  FileNameInfo                   2
  FileRenameInfo                 3
  FileDispositionInfo            4
  FileAllocationInfo             5
  FileEndOfFileInfo              6
  FileStreamInfo                 7
  FileCompressionInfo            8
  FileAttributeTagInfo           9
  FileIdBothDirectoryInfo        10
  FileIdBothDirectoryRestartInfo 11
  FileIoPriorityHintInfo         12
  FileRemoteProtocolInfo         13
  FileFullDirectoryInfo          14
  FileFullDirectoryRestartInfo   15
  FileStorageInfo                16
  FileAlignmentInfo              17

enum MEMORY_RESOURCE_NOTIFICATION_TYPE UINT
  LowMemoryResourceNotification  0
  HighMemoryResourceNotification 1
  PendingBadMemoryNotification   2

enum HEAP_INFORMATION_CLASS UINT
  HeapCompatibilityInformation      0
  HeapEnableTerminationOnCorruption 1
  HeapExtendedInformation           2

enum LOGICAL_PROCESSOR_RELATIONSHIP UINT
  RelationProcessorCore    0
  RelationNumaNode         1
  RelationCache            2
  RelationProcessorPackage 3
  RelationGroup            4
  RelationAll              0xffff

enum CALDATETIME_DATEUNIT UINT
  EraUnit    0
  YearUnit   1
  MonthUnit  2
  WeekUnit   3
  DayUnit    4
  HourUnit   5
  MinuteUnit 6
  SecondUnit 7
  TickUnit   8

enum CALID DWORD
  CAL_GREGORIAN              1
  CAL_GREGORIAN_US           2
  CAL_JAPAN                  3
  CAL_TAIWAN                 4
  CAL_KOREA                  5
  CAL_HIJRI                  6
  CAL_THAI                   7
  CAL_HEBREW                 8
  CAL_GREGORIAN_ME_FRENCH    9
  CAL_GREGORIAN_ARABIC       10
  CAL_GREGORIAN_XLIT_ENGLISH 11
  CAL_GREGORIAN_XLIT_FRENCH  12
  CAL_UMALQURA               23
  ENUM_ALL_CALENDARS         0xffffffff

flag CALTYPE DWORD
  CAL_ICALINTVALUE       0x00000001
  CAL_SCALNAME           0x00000002
  CAL_IYEAROFFSETRANGE   0x00000003
  CAL_SERASTRING         0x00000004
  CAL_SSHORTDATE         0x00000005
  CAL_SLONGDATE          0x00000006
  CAL_SDAYNAME1          0x00000007
  CAL_SDAYNAME2          0x00000008
  CAL_SDAYNAME3          0x00000009
  CAL_SDAYNAME4          0x0000000a
  CAL_SDAYNAME5          0x0000000b
  CAL_SDAYNAME6          0x0000000c
  CAL_SDAYNAME7          0x0000000d
  CAL_SABBREVDAYNAME1    0x0000000e
  CAL_SABBREVDAYNAME2    0x0000000f
  CAL_SABBREVDAYNAME3    0x00000010
  CAL_SABBREVDAYNAME4    0x00000011
  CAL_SABBREVDAYNAME5    0x00000012
  CAL_SABBREVDAYNAME6    0x00000013
  CAL_SABBREVDAYNAME7    0x00000014
  CAL_SMONTHNAME1        0x00000015
  CAL_SMONTHNAME2        0x00000016
  CAL_SMONTHNAME3        0x00000017
  CAL_SMONTHNAME4        0x00000018
  CAL_SMONTHNAME5        0x00000019
  CAL_SMONTHNAME6        0x0000001a
  CAL_SMONTHNAME7        0x0000001b
  CAL_SMONTHNAME8        0x0000001c
  CAL_SMONTHNAME9        0x0000001d
  CAL_SMONTHNAME10       0x0000001e
  CAL_SMONTHNAME11       0x0000001f
  CAL_SMONTHNAME12       0x00000020
  CAL_SMONTHNAME13       0x00000021
  CAL_SABBREVMONTHNAME1  0x00000022
  CAL_SABBREVMONTHNAME2  0x00000023
  CAL_SABBREVMONTHNAME3  0x00000024
  CAL_SABBREVMONTHNAME4  0x00000025
  CAL_SABBREVMONTHNAME5  0x00000026
  CAL_SABBREVMONTHNAME6  0x00000027
  CAL_SABBREVMONTHNAME7  0x00000028
  CAL_SABBREVMONTHNAME8  0x00000029
  CAL_SABBREVMONTHNAME9  0x0000002a
  CAL_SABBREVMONTHNAME10 0x0000002b
  CAL_SABBREVMONTHNAME11 0x0000002c
  CAL_SABBREVMONTHNAME12 0x0000002d
  CAL_SABBREVMONTHNAME13 0x0000002e
  CAL_SYEARMONTH         0x0000002f
  CAL_ITWODIGITYEARMAX   0x00000030
  CAL_SSHORTESTDAYNAME1  0x00000031
  CAL_SSHORTESTDAYNAME2  0x00000032
  CAL_SSHORTESTDAYNAME3  0x00000033
  CAL_SSHORTESTDAYNAME4  0x00000034
  CAL_SSHORTESTDAYNAME5  0x00000035
  CAL_SSHORTESTDAYNAME6  0x00000036
  CAL_SSHORTESTDAYNAME7  0x00000037
  CAL_RETURN_NUMBER      0x20000000
  CAL_USE_CP_ACP         0x40000000
  CAL_NOUSEROVERRIDE     0x80000000

enum LGRPID DWORD
  LGRPID_WESTERN_EUROPE      0x0001
  LGRPID_CENTRAL_EUROPE      0x0002
  LGRPID_BALTIC              0x0003
  LGRPID_GREEK               0x0004
  LGRPID_CYRILLIC            0x0005
  LGRPID_TURKIC              0x0006
  LGRPID_TURKISH             0x0006
  LGRPID_JAPANESE            0x0007
  LGRPID_KOREAN              0x0008
  LGRPID_TRADITIONAL_CHINESE 0x0009
  LGRPID_SIMPLIFIED_CHINESE  0x000a
  LGRPID_THAI                0x000b
  LGRPID_HEBREW              0x000c
  LGRPID_ARABIC              0x000d
  LGRPID_VIETNAMESE          0x000e
  LGRPID_INDIC               0x000f
  LGRPID_GEORGIAN            0x0010
  LGRPID_ARMENIAN            0x0011

enum GEOTYPE DWORD
  GEO_NATION            0x0001
  GEO_LATITUDE          0x0002
  GEO_LONGITUDE         0x0003
  GEO_ISO2              0x0004
  GEO_ISO3              0x0005
  GEO_RFC1766           0x0006
  GEO_LCID              0x0007
  GEO_FRIENDLYNAME      0x0008
  GEO_OFFICIALNAME      0x0009
  GEO_TIMEZONES         0x000A
  GEO_OFFICIALLANGUAGES 0x000B
  GEO_ISO_UN_NUMBER     0x000C
  GEO_PARENT            0x000D

flag LCTYPE DWORD
  LOCALE_ILANGUAGE              0x00000001
  LOCALE_SLANGUAGE              0x00000002
  LOCALE_SABBREVLANGNAME        0x00000003
  LOCALE_SNATIVELANGNAME        0x00000004
  LOCALE_ICOUNTRY               0x00000005
  LOCALE_SCOUNTRY               0x00000006
  LOCALE_SABBREVCTRYNAME        0x00000007
  LOCALE_SNATIVECTRYNAME        0x00000008
  LOCALE_IDEFAULTLANGUAGE       0x00000009
  LOCALE_IDEFAULTCOUNTRY        0x0000000A
  LOCALE_IDEFAULTCODEPAGE       0x0000000B
  LOCALE_SLIST                  0x0000000C
  LOCALE_IMEASURE               0x0000000D
  LOCALE_SDECIMAL               0x0000000E
  LOCALE_STHOUSAND              0x0000000F
  LOCALE_SGROUPING              0x00000010
  LOCALE_IDIGITS                0x00000011
  LOCALE_ILZERO                 0x00000012
  LOCALE_SNATIVEDIGITS          0x00000013
  LOCALE_SCURRENCY              0x00000014
  LOCALE_SINTLSYMBOL            0x00000015
  LOCALE_SMONDECIMALSEP         0x00000016
  LOCALE_SMONTHOUSANDSEP        0x00000017
  LOCALE_SMONGROUPING           0x00000018
  LOCALE_ICURRDIGITS            0x00000019
  LOCALE_IINTLCURRDIGITS        0x0000001A
  LOCALE_ICURRENCY              0x0000001B
  LOCALE_INEGCURR               0x0000001C
  LOCALE_SDATE                  0x0000001D
  LOCALE_STIME                  0x0000001E
  LOCALE_SSHORTDATE             0x0000001F
  LOCALE_SLONGDATE              0x00000020
  LOCALE_IDATE                  0x00000021
  LOCALE_ILDATE                 0x00000022
  LOCALE_ITIME                  0x00000023
  LOCALE_ICENTURY               0x00000024
  LOCALE_ITLZERO                0x00000025
  LOCALE_IDAYLZERO              0x00000026
  LOCALE_IMONLZERO              0x00000027
  LOCALE_S1159                  0x00000028
  LOCALE_S2359                  0x00000029
  LOCALE_SDAYNAME1              0x0000002A
  LOCALE_SDAYNAME2              0x0000002B
  LOCALE_SDAYNAME3              0x0000002C
  LOCALE_SDAYNAME4              0x0000002D
  LOCALE_SDAYNAME5              0x0000002E
  LOCALE_SDAYNAME6              0x0000002F
  LOCALE_SDAYNAME7              0x00000030
  LOCALE_SABBREVDAYNAME1        0x00000031
  LOCALE_SABBREVDAYNAME2        0x00000032
  LOCALE_SABBREVDAYNAME3        0x00000033
  LOCALE_SABBREVDAYNAME4        0x00000034
  LOCALE_SABBREVDAYNAME5        0x00000035
  LOCALE_SABBREVDAYNAME6        0x00000036
  LOCALE_SABBREVDAYNAME7        0x00000037
  LOCALE_SMONTHNAME1            0x00000038
  LOCALE_SMONTHNAME2            0x00000039
  LOCALE_SMONTHNAME3            0x0000003A
  LOCALE_SMONTHNAME4            0x0000003B
  LOCALE_SMONTHNAME5            0x0000003C
  LOCALE_SMONTHNAME6            0x0000003D
  LOCALE_SMONTHNAME7            0x0000003E
  LOCALE_SMONTHNAME8            0x0000003F
  LOCALE_SMONTHNAME9            0x00000040
  LOCALE_SMONTHNAME10           0x00000041
  LOCALE_SMONTHNAME11           0x00000042
  LOCALE_SMONTHNAME12           0x00000043
  LOCALE_SABBREVMONTHNAME1      0x00000044
  LOCALE_SABBREVMONTHNAME2      0x00000045
  LOCALE_SABBREVMONTHNAME3      0x00000046
  LOCALE_SABBREVMONTHNAME4      0x00000047
  LOCALE_SABBREVMONTHNAME5      0x00000048
  LOCALE_SABBREVMONTHNAME6      0x00000049
  LOCALE_SABBREVMONTHNAME7      0x0000004A
  LOCALE_SABBREVMONTHNAME8      0x0000004B
  LOCALE_SABBREVMONTHNAME9      0x0000004C
  LOCALE_SABBREVMONTHNAME10     0x0000004D
  LOCALE_SABBREVMONTHNAME11     0x0000004E
  LOCALE_SABBREVMONTHNAME12     0x0000004F
  LOCALE_SPOSITIVESIGN          0x00000050
  LOCALE_SNEGATIVESIGN          0x00000051
  LOCALE_IPOSSIGNPOSN           0x00000052
  LOCALE_INEGSIGNPOSN           0x00000053
  LOCALE_IPOSSYMPRECEDES        0x00000054
  LOCALE_IPOSSEPBYSPACE         0x00000055
  LOCALE_INEGSYMPRECEDES        0x00000056
  LOCALE_INEGSEPBYSPACE         0x00000057
  LOCALE_FONTSIGNATURE          0x00000058
  LOCALE_SISO639LANGNAME        0x00000059
  LOCALE_SISO3166CTRYNAME       0x0000005A
  LOCALE_IGEOID                 0x0000005B
  LOCALE_SNAME                  0x0000005c
  LOCALE_SDURATION              0x0000005d
  LOCALE_SKEYBOARDSTOINSTALL    0x0000005e
  LOCALE_SSHORTESTDAYNAME1      0x00000060
  LOCALE_SSHORTESTDAYNAME2      0x00000061
  LOCALE_SSHORTESTDAYNAME3      0x00000062
  LOCALE_SSHORTESTDAYNAME4      0x00000063
  LOCALE_SSHORTESTDAYNAME5      0x00000064
  LOCALE_SSHORTESTDAYNAME6      0x00000065
  LOCALE_SSHORTESTDAYNAME7      0x00000066
  LOCALE_SISO639LANGNAME2       0x00000067
  LOCALE_SISO3166CTRYNAME2      0x00000068
  LOCALE_SNAN                   0x00000069
  LOCALE_SPOSINFINITY           0x0000006a
  LOCALE_SNEGINFINITY           0x0000006b
  LOCALE_SSCRIPTS               0x0000006c
  LOCALE_SPARENT                0x0000006d
  LOCALE_SCONSOLEFALLBACKNAME   0x0000006e
  LOCALE_SLANGDISPLAYNAME       0x0000006f
  LOCALE_SENGLANGUAGE           0x00001001
  LOCALE_SENGCOUNTRY            0x00001002
  LOCALE_STIMEFORMAT            0x00001003
  LOCALE_IDEFAULTANSICODEPAGE   0x00001004
  LOCALE_ITIMEMARKPOSN          0x00001005
  LOCALE_SYEARMONTH             0x00001006
  LOCALE_SENGCURRNAME           0x00001007
  LOCALE_SNATIVECURRNAME        0x00001008
  LOCALE_ICALENDARTYPE          0x00001009
  LOCALE_IPAPERSIZE             0x0000100A
  LOCALE_IOPTIONALCALENDAR      0x0000100B
  LOCALE_IFIRSTDAYOFWEEK        0x0000100C
  LOCALE_IFIRSTWEEKOFYEAR       0x0000100D
  LOCALE_SMONTHNAME13           0x0000100E
  LOCALE_SABBREVMONTHNAME13     0x0000100F
  LOCALE_INEGNUMBER             0x00001010
  LOCALE_IDEFAULTMACCODEPAGE    0x00001011
  LOCALE_IDEFAULTEBCDICCODEPAGE 0x00001012
  LOCALE_SSORTNAME              0x00001013
  LOCALE_IDIGITSUBSTITUTION     0x00001014
  LOCALE_RETURN_NUMBER          0x20000000
  LOCALE_USE_CP_ACP             0x40000000
  LOCALE_NOUSEROVERRIDE         0x80000000

enum NLS_FUNCTION DWORD
  COMPARE_STRING 0x0001

flag EXECUTION_STATE DWORD
  ES_SYSTEM_REQUIRED   0x00000001
  ES_DISPLAY_REQUIRED  0x00000002
  ES_USER_PRESENT      0x00000004
  ES_AWAYMODE_REQUIRED 0x00000040
  ES_CONTINUOUS        0x80000000

enum WER_REGISTER_FILE_TYPE DWORD
  WerRegFileTypeUserDocument 1
  WerRegFileTypeOther        2

enum [CreationDisposition] DWORD display=DWORD
  CREATE_NEW        1
  CREATE_ALWAYS     2
  OPEN_EXISTING     3
  OPEN_ALWAYS       4
  TRUNCATE_EXISTING 5

flag [FILE_FLAGS] DWORD display=DWORD
  FILE_FLAG_OPEN_REQUIRING_OPLOCK 0x00040000
  FILE_FLAG_OPEN_NO_RECALL        0x00100000
  FILE_FLAG_OPEN_REPARSE_POINT    0x00200000
  FILE_FLAG_SESSION_AWARE         0x00800000
  FILE_FLAG_POSIX_SEMANTICS       0x01000000
  FILE_FLAG_BACKUP_SEMANTICS      0x02000000
  FILE_FLAG_DELETE_ON_CLOSE       0x04000000
  FILE_FLAG_SEQUENTIAL_SCAN       0x08000000
  FILE_FLAG_RANDOM_ACCESS         0x10000000
  FILE_FLAG_NO_BUFFERING          0x20000000
  FILE_FLAG_OVERLAPPED            0x40000000
  FILE_FLAG_WRITE_THROUGH         0x80000000

flag [FlagsAndAttributes] [FILE_FLAGS] display=DWORD
  FILE_ATTRIBUTE_READONLY   0x00000001
  FILE_ATTRIBUTE_HIDDEN     0x00000002
  FILE_ATTRIBUTE_SYSTEM     0x00000004
  FILE_ATTRIBUTE_ARCHIVE    0x00000020
  FILE_ATTRIBUTE_NORMAL     0x00000080
  FILE_ATTRIBUTE_TEMPORARY  0x00000100
  FILE_ATTRIBUTE_OFFLINE    0x00001000
  FILE_ATTRIBUTE_ENCRYPTED  0x00004000
  SECURITY_IDENTIFICATION   0x00010000
  SECURITY_IMPERSONATION    0x00020000
  SECURITY_DELEGATION       0x00030000
  SECURITY_CONTEXT_TRACKING 0x00040000
  SECURITY_EFFECTIVE_ONLY   0x00080000
  SECURITY_SQOS_PRESENT     0x00100000

flag [FormatMessageFlags] DWORD display=DWORD
  FORMAT_MESSAGE_MAX_WIDTH_MASK  0x000000FF
  FORMAT_MESSAGE_ALLOCATE_BUFFER 0x00000100
  FORMAT_MESSAGE_IGNORE_INSERTS  0x00000200
  FORMAT_MESSAGE_FROM_STRING     0x00000400
  FORMAT_MESSAGE_FROM_HMODULE    0x00000800
  FORMAT_MESSAGE_FROM_SYSTEM     0x00001000
  FORMAT_MESSAGE_ARGUMENT_ARRAY  0x00002000

enum [ProcessorFeatureEnum] DWORD display=DWORD
  PF_FLOATING_POINT_PRECISION_ERRATA 0
  PF_FLOATING_POINT_EMULATED         1
  PF_COMPARE_EXCHANGE_DOUBLE         2
  PF_MMX_INSTRUCTIONS_AVAILABLE      3
  PF_PPC_MOVEMEM_64BIT_OK            4
  PF_ALPHA_BYTE_INSTRUCTIONS         5
  PF_XMMI_INSTRUCTIONS_AVAILABLE     6
  PF_3DNOW_INSTRUCTIONS_AVAILABLE    7
  PF_RDTSC_INSTRUCTION_AVAILABLE     8
  PF_PAE_ENABLED                     9
  PF_XMMI64_INSTRUCTIONS_AVAILABLE   10
  PF_SSE_DAZ_MODE_AVAILABLE          11
  PF_NX_ENABLED                      12
  PF_SSE3_INSTRUCTIONS_AVAILABLE     13
  PF_COMPARE_EXCHANGE128             14
  PF_COMPARE64_EXCHANGE128           15
  PF_CHANNELS_ENABLED                16
  PF_XSAVE_ENABLED                   17

flag [CharacterTypeFlag] DWORD display=DWORD
  CT_CTYPE1 0x00000001
  CT_CTYPE2 0x00000002
  CT_CTYPE3 0x00000004

flag [LocalMemoryFlag] UINT display=UINT
  LMEM_FIXED       0x0000
  LMEM_MOVEABLE    0x0002
  LMEM_NOCOMPACT   0x0010
  LMEM_NODISCARD   0x0020
  LMEM_ZEROINIT    0x0040
  LHND             0x0042
  LMEM_MODIFY      0x0080
  LMEM_DISCARDABLE 0x0F00
  LMEM_VALID_FLAGS 0x0F72

flag [GlobalMemoryFlag] UINT display=UINT
  GMEM_FIXED       0x0000
  GMEM_MOVEABLE    0x0002
  GMEM_NOCOMPACT   0x0010
  GMEM_NODISCARD   0x0020
  GMEM_ZEROINIT    0x0040
  GHND             0x0042
  GMEM_MODIFY      0x0080
  GMEM_DISCARDABLE 0x0100
  GMEM_NOT_BANKED  0x1000
  GMEM_SHARE       0x2000
  GMEM_NOTIFY      0x4000

flag [WideCharFlags] DWORD display=DWORD
  WC_DISCARDNS         0x00000010
  WC_SEPCHARS          0x00000020
  WC_DEFAULTCHAR       0x00000040
  WC_ERR_INVALID_CHARS 0x00000080
  WC_COMPOSITECHECK    0x00000200
  WC_NO_BEST_FIT_CHARS 0x00000400

flag [MultiByteFlags] DWORD display=DWORD
  MB_PRECOMPOSED       0x00000001
  MB_COMPOSITE         0x00000002
  MB_USEGLYPHCHARS     0x00000004
  MB_ERR_INVALID_CHARS 0x00000008

flag [MapAccessFlags] DWORD display=DWORD
  FILE_MAP_COPY       0x0001
  FILE_MAP_WRITE      0x0002
  FILE_MAP_READ       0x0004
  FILE_MAP_EXECUTE    0x0020
  DELETE              0x00010000
  READ_CONTROL        0x00020000
  WRITE_DAC           0x00040000
  WRITE_OWNER         0x00080000
  FILE_MAP_ALL_ACCESS 0xf001f
  MAXIMUM_ALLOWED     0x02000000

flag [ThreadCreationFlags] DWORD display=DWORD
  CREATE_SUSPENDED                  0x00000004
  STACK_SIZE_PARAM_IS_A_RESERVATION 0x00010000

flag [LocaleEnumerationFlags] DWORD display=DWORD
  LCID_INSTALLED       0x00000001
  LCID_SUPPORTED       0x00000002
  LCID_ALTERNATE_SORTS 0x00000004

flag [EnumSystemLocalesExFlags] DWORD display=DWORD
  LOCALE_ALL           0
  LOCALE_WINDOWS       0x00000001
  LOCALE_SUPPLEMENTAL  0x00000002
  LCID_ALTERNATE_SORTS 0x00000004
  LOCALE_NEUTRALDATA   0x00000010

flag [CodePageEnumerationFlags] DWORD display=DWORD
  CP_INSTALLED 0x00000001
  CP_SUPPORTED 0x00000002

flag [NLS_STRING_COMPARE_FLAGS] DWORD display=DWORD
  NORM_IGNORECASE            0x00000001
  NORM_IGNORENONSPACE        0x00000002
  NORM_IGNORESYMBOLS         0x00000004
  SORT_DIGITSASNUMBERS       0x00000008
  LINGUISTIC_IGNORECASE      0x00000010
  LINGUISTIC_IGNOREDIACRITIC 0x00000020
  SORT_STRINGSORT            0x00001000
  NORM_IGNOREKANATYPE        0x00010000
  NORM_IGNOREWIDTH           0x00020000
  NORM_LINGUISTIC_CASING     0x08000000

flag [MappingFlags] DWORD display=DWORD
  MAP_FOLDCZONE        0x00000010
  MAP_PRECOMPOSED      0x00000020
  MAP_COMPOSITE        0x00000040
  MAP_FOLDDIGITS       0x00000080
  MAP_EXPAND_LIGATURES 0x00002000

flag [DeactivateActCtxFlags] DWORD display=DWORD
  DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION 0x00000001

flag [SEM_FLAGS] UINT display=UINT
  SEM_FAILCRITICALERRORS     0x0001
  SEM_NOGPFAULTERRORBOX      0x0002
  SEM_NOALIGNMENTFAULTEXCEPT 0x0004
  SEM_NOOPENFILEERRORBOX     0x8000

alias [SEM_FLAGS_DWORD] [SEM_FLAGS] display=DWORD

pointer [SEM_FLAGS_DWORD*] [SEM_FLAGS_DWORD] display=LPDWORD

flag [LOCALE_NOUSEROVERRIDE_FLAG] DWORD display=DWORD
  LOCALE_NOUSEROVERRIDE 0x80000000

flag [DUPLICATE_HANDLE_FLAGS] DWORD display=DWORD
  DUPLICATE_CLOSE_SOURCE 0x00000001
  DUPLICATE_SAME_ACCESS  0x00000002

flag [StandardAccessRights] DWORD display=DWORD
  DELETE                   0x00010000
  READ_CONTROL             0x00020000
  WRITE_DAC                0x00040000
  WRITE_OWNER              0x00080000
  STANDARD_RIGHTS_REQUIRED 0x000F0000
  SYNCHRONIZE              0x00100000
  STANDARD_RIGHTS_ALL      0x001F0000
  MAXIMUM_ALLOWED          0x02000000

flag [EventAccessRights] DWORD display=DWORD
  EVENT_MODIFY_STATE       0x0002
  DELETE                   0x00010000
  READ_CONTROL             0x00020000
  WRITE_DAC                0x00040000
  WRITE_OWNER              0x00080000
  STANDARD_RIGHTS_REQUIRED 0x000F0000
  SYNCHRONIZE              0x00100000
  STANDARD_RIGHTS_ALL      0x001F0000
  EVENT_ALL_ACCESS         0x1F0003
  MAXIMUM_ALLOWED          0x02000000

flag [MutexAccessRights] DWORD display=DWORD
  MUTEX_MODIFY_STATE       0x0001
  DELETE                   0x00010000
  READ_CONTROL             0x00020000
  WRITE_DAC                0x00040000
  WRITE_OWNER              0x00080000
  STANDARD_RIGHTS_REQUIRED 0x000F0000
  SYNCHRONIZE              0x00100000
  STANDARD_RIGHTS_ALL      0x001F0000
  MUTEX_ALL_ACCESS         0x1F0001
  MAXIMUM_ALLOWED          0x02000000

flag [SemaphoreAccessRights] DWORD display=DWORD
  SEMAPHORE_MODIFY_STATE   0x0002
  DELETE                   0x00010000
  READ_CONTROL             0x00020000
  WRITE_DAC                0x00040000
  WRITE_OWNER              0x00080000
  STANDARD_RIGHTS_REQUIRED 0x000F0000
  SYNCHRONIZE              0x00100000
  STANDARD_RIGHTS_ALL      0x001F0000
  SEMAPHORE_ALL_ACCESS     0x1F0003
  MAXIMUM_ALLOWED          0x02000000

flag [TimerAccessRights] DWORD display=DWORD
  TIMER_QUERY_STATE        0x0001
  TIMER_MODIFY_STATE       0x0002
  DELETE                   0x00010000
  READ_CONTROL             0x00020000
  WRITE_DAC                0x00040000
  WRITE_OWNER              0x00080000
  STANDARD_RIGHTS_REQUIRED 0x000F0000
  SYNCHRONIZE              0x00100000
  STANDARD_RIGHTS_ALL      0x001F0000
  TIMER_ALL_ACCESS         0x1F0003
  MAXIMUM_ALLOWED          0x02000000

flag [QueryActCtxFlags] DWORD display=DWORD
  QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX 0x00000004
  QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE 0x00000008
  QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS 0x00000010
  QUERY_ACTCTX_FLAG_NO_ADDREF         0x80000000

enum [ActivationContextInfoClass] ULONG display=ULONG
  ActivationContextBasicInformation                      1
  ActivationContextDetailedInformation                   2
  AssemblyDetailedInformationInActivationContext         3
  FileInformationInAssemblyOfAssemblyInActivationContext 4
  RunlevelInformationInActivationContext                 5
  CompatibilityInformationInActivationContext            6
  ActivationContextManifestResourceName                  7

flag [RESOURCE_ENUM_FLAGS] DWORD display=DWORD
  RESOURCE_ENUM_LN         0x0001
  RESOURCE_ENUM_MUI        0x0002
  RESOURCE_ENUM_MUI_SYSTEM 0x0004
  RESOURCE_ENUM_VALIDATE   0x0008

flag [WorkItemFlags] ULONG display=ULONG
  WT_EXECUTEDEFAULT              0x00000000
  WT_EXECUTEINIOTHREAD           0x00000001
  WT_EXECUTEINUITHREAD           0x00000002
  WT_EXECUTEINWAITTHREAD         0x00000004
  WT_EXECUTEONLYONCE             0x00000008
  WT_EXECUTELONGFUNCTION         0x00000010
  WT_EXECUTEINTIMERTHREAD        0x00000020
  WT_EXECUTEINPERSISTENTIOTHREAD 0x00000040
  WT_EXECUTEINPERSISTENTTHREAD   0x00000080
  WT_TRANSFER_IMPERSONATION      0x00000100

enum [VerOperator] BYTE display=BYTE
  VER_EQUAL         1
  VER_GREATER       2
  VER_GREATER_EQUAL 3
  VER_LESS          4
  VER_LESS_EQUAL    5
  VER_AND           6
  VER_OR            7

flag [ExceptionFlags] DWORD display=DWORD
  EXCEPTION_NONCONTINUABLE 0x1

flag [NLS_DATE_FLAGS] DWORD display=DWORD
  DATE_SHORTDATE        0x00000001
  DATE_LONGDATE         0x00000002
  DATE_USE_ALT_CALENDAR 0x00000004
  DATE_YEARMONTH        0x00000008
  DATE_LTRREADING       0x00000010
  DATE_RTLREADING       0x00000020
  LOCALE_NOUSEROVERRIDE 0x80000000

flag [NLS_TIME_FLAGS] DWORD display=DWORD
  TIME_NOMINUTESORSECONDS 0x00000001
  TIME_NOSECONDS          0x00000002
  TIME_NOTIMEMARKER       0x00000004
  TIME_FORCE24HOURFORMAT  0x00000008
  LOCALE_USE_CP_ACP       0x40000000
  LOCALE_NOUSEROVERRIDE   0x80000000

enum [StdHandle] DWORD display=DWORD
  STD_ERROR_HANDLE  -12
  STD_OUTPUT_HANDLE -11
  STD_INPUT_HANDLE  -10

flag [ConsoleModeFlags] DWORD display=DWORD
  ENABLE_PROCESSED_INPUT/ENABLE_PROCESSED_OUTPUT 0x0001
  ENABLE_LINE_INPUT/ENABLE_WRAP_AT_EOL_OUTPUT    0x0002
  ENABLE_ECHO_INPUT                              0x0004
  ENABLE_WINDOW_INPUT                            0x0008
  ENABLE_MOUSE_INPUT                             0x0010
  ENABLE_INSERT_MODE                             0x0020
  ENABLE_QUICK_EDIT_MODE                         0x0040
  ENABLE_EXTENDED_FLAGS                          0x0080
  ENABLE_AUTO_POSITION                           0x0100

pointer [ConsoleModeFlags*] [ConsoleModeFlags] display=LPDWORD

flag [HANDLE_FLAGS] DWORD display=DWORD
  HANDLE_FLAG_INHERIT            0x00000001
  HANDLE_FLAG_PROTECT_FROM_CLOSE 0x00000002

pointer [HANDLE_FLAGS*] [HANDLE_FLAGS] display=LPDWORD

flag [PrivateNamespaceFlag] ULONG display=ULONG
  PRIVATE_NAMESPACE_FLAG_DESTROY 0x00000001

flag [GetFinalPathNameByHandleFlags] DWORD display=DWORD
  VOLUME_NAME_DOS      0x0
  FILE_NAME_NORMALIZED 0x0
  VOLUME_NAME_GUID     0x1
  VOLUME_NAME_NT       0x2
  VOLUME_NAME_NONE     0x4
  FILE_NAME_OPENED     0x8

flag [LockFileFlags] DWORD display=DWORD
  LOCKFILE_FAIL_IMMEDIATELY 0x00000001
  LOCKFILE_EXCLUSIVE_LOCK   0x00000002

enum [ProductType] DWORD display=DWORD
  PRODUCT_UNDEFINED                           0x00000000
  PRODUCT_ULTIMATE                            0x00000001
  PRODUCT_HOME_BASIC                          0x00000002
  PRODUCT_HOME_PREMIUM                        0x00000003
  PRODUCT_ENTERPRISE                          0x00000004
  PRODUCT_HOME_BASIC_N                        0x00000005
  PRODUCT_BUSINESS                            0x00000006
  PRODUCT_STANDARD_SERVER                     0x00000007
  PRODUCT_DATACENTER_SERVER                   0x00000008
  PRODUCT_SMALLBUSINESS_SERVER                0x00000009
  PRODUCT_ENTERPRISE_SERVER                   0x0000000A
  PRODUCT_STARTER                             0x0000000B
  PRODUCT_DATACENTER_SERVER_CORE              0x0000000C
  PRODUCT_STANDARD_SERVER_CORE                0x0000000D
  PRODUCT_ENTERPRISE_SERVER_CORE              0x0000000E
  PRODUCT_ENTERPRISE_SERVER_IA64              0x0000000F
  PRODUCT_BUSINESS_N                          0x00000010
  PRODUCT_WEB_SERVER                          0x00000011
  PRODUCT_CLUSTER_SERVER                      0x00000012
  PRODUCT_HOME_SERVER                         0x00000013
  PRODUCT_STORAGE_EXPRESS_SERVER              0x00000014
  PRODUCT_STORAGE_STANDARD_SERVER             0x00000015
  PRODUCT_STORAGE_WORKGROUP_SERVER            0x00000016
  PRODUCT_STORAGE_ENTERPRISE_SERVER           0x00000017
  PRODUCT_SERVER_FOR_SMALLBUSINESS            0x00000018
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM        0x00000019
  PRODUCT_HOME_PREMIUM_N                      0x0000001A
  PRODUCT_ENTERPRISE_N                        0x0000001B
  PRODUCT_ULTIMATE_N                          0x0000001C
  PRODUCT_WEB_SERVER_CORE                     0x0000001D
  PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT    0x0000001E
  PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY      0x0000001F
  PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING     0x00000020
  PRODUCT_SERVER_FOUNDATION                   0x00000021
  PRODUCT_HOME_PREMIUM_SERVER                 0x00000022
  PRODUCT_SERVER_FOR_SMALLBUSINESS_V          0x00000023
  PRODUCT_STANDARD_SERVER_V                   0x00000024
  PRODUCT_DATACENTER_SERVER_V                 0x00000025
  PRODUCT_ENTERPRISE_SERVER_V                 0x00000026
  PRODUCT_DATACENTER_SERVER_CORE_V            0x00000027
  PRODUCT_STANDARD_SERVER_CORE_V              0x00000028
  PRODUCT_ENTERPRISE_SERVER_CORE_V            0x00000029
  PRODUCT_HYPERV                              0x0000002A
  PRODUCT_STORAGE_EXPRESS_SERVER_CORE         0x0000002B
  PRODUCT_STORAGE_STANDARD_SERVER_CORE        0x0000002C
  PRODUCT_STORAGE_WORKGROUP_SERVER_CORE       0x0000002D
  PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE      0x0000002E
  PRODUCT_STARTER_N                           0x0000002F
  PRODUCT_PROFESSIONAL                        0x00000030
  PRODUCT_PROFESSIONAL_N                      0x00000031
  PRODUCT_SB_SOLUTION_SERVER                  0x00000032
  PRODUCT_SERVER_FOR_SB_SOLUTIONS             0x00000033
  PRODUCT_STANDARD_SERVER_SOLUTIONS           0x00000034
  PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE      0x00000035
  PRODUCT_SB_SOLUTION_SERVER_EM               0x00000036
  PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM          0x00000037
  PRODUCT_SOLUTION_EMBEDDEDSERVER             0x00000038
  PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE        0x00000039
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT       0x0000003B
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL       0x0000003C
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC    0x0000003D
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC    0x0000003E
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE   0x0000003F
  PRODUCT_CLUSTER_SERVER_V                    0x00000040
  PRODUCT_EMBEDDED                            0x00000041
  PRODUCT_STARTER_E                           0x00000042
  PRODUCT_HOME_BASIC_E                        0x00000043
  PRODUCT_HOME_PREMIUM_E                      0x00000044
  PRODUCT_PROFESSIONAL_E                      0x00000045
  PRODUCT_ENTERPRISE_E                        0x00000046
  PRODUCT_ULTIMATE_E                          0x00000047
  PRODUCT_ENTERPRISE_EVALUATION               0x00000048
  PRODUCT_MULTIPOINT_STANDARD_SERVER          0x0000004C
  PRODUCT_MULTIPOINT_PREMIUM_SERVER           0x0000004D
  PRODUCT_STANDARD_EVALUATION_SERVER          0x0000004F
  PRODUCT_DATACENTER_EVALUATION_SERVER        0x00000050
  PRODUCT_ENTERPRISE_N_EVALUATION             0x00000054
  PRODUCT_EMBEDDED_AUTOMOTIVE                 0x00000055
  PRODUCT_EMBEDDED_INDUSTRY_A                 0x00000056
  PRODUCT_THINPC                              0x00000057
  PRODUCT_EMBEDDED_A                          0x00000058
  PRODUCT_EMBEDDED_INDUSTRY                   0x00000059
  PRODUCT_EMBEDDED_E                          0x0000005A
  PRODUCT_EMBEDDED_INDUSTRY_E                 0x0000005B
  PRODUCT_EMBEDDED_INDUSTRY_A_E               0x0000005C
  PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER 0x0000005F
  PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER  0x00000060
  PRODUCT_CORE_ARM                            0x00000061
  PRODUCT_CORE_N                              0x00000062
  PRODUCT_CORE_COUNTRYSPECIFIC                0x00000063
  PRODUCT_CORE_SINGLELANGUAGE                 0x00000064
  PRODUCT_CORE                                0x00000065
  PRODUCT_PROFESSIONAL_WMC                    0x00000067
  PRODUCT_UNLICENSED                          0xABCDABCD

pointer [ProductType*] [ProductType] display=PDWORD

flag [MoveFileFlags] DWORD display=DWORD
  MOVEFILE_REPLACE_EXISTING      0x00000001
  MOVEFILE_COPY_ALLOWED          0x00000002
  MOVEFILE_DELAY_UNTIL_REBOOT    0x00000004
  MOVEFILE_WRITE_THROUGH         0x00000008
  MOVEFILE_CREATE_HARDLINK       0x00000010
  MOVEFILE_FAIL_IF_NOT_TRACKABLE 0x00000020

flag [LANGUAGE_GROUP_FLAGS] DWORD display=DWORD
  LGRPID_INSTALLED 0x00000001
  LGRPID_SUPPORTED 0x00000002

flag [ApplicationRestartFlags] DWORD display=DWORD
  RESTART_NO_CRASH  1
  RESTART_NO_HANG   2
  RESTART_NO_PATCH  4
  RESTART_NO_REBOOT 8

flag [ProcessShutdownFlags] DWORD display=DWORD
  SHUTDOWN_NORETRY 0x00000001

enum FINDEX_INFO_LEVELS UINT
  FindExInfoStandard 0
  FindExInfoBasic    1

enum FINDEX_SEARCH_OPS UINT
  FindExSearchNameMatch          0
  FindExSearchLimitToDirectories 1
  FindExSearchLimitToDevices     2

flag [FindFirstFileExFlags] DWORD display=DWORD
  FIND_FIRST_EX_CASE_SENSITIVE 0x00000001
  FIND_FIRST_EX_LARGE_FETCH    0x00000002

flag [QueryFullProcessImageNameFlags] DWORD display=DWORD
  PROCESS_NAME_NATIVE 0x00000001

flag [WerFileFlags] DWORD display=DWORD
  WER_FILE_DELETE_WHEN_DONE 1
  WER_FILE_ANONYMOUS_DATA   2

enum [GetBinaryTypeResult] DWORD display=DWORD
  SCS_32BIT_BINARY 0
  SCS_DOS_BINARY   1
  SCS_WOW_BINARY   2
  SCS_PIF_BINARY   3
  SCS_POSIX_BINARY 4
  SCS_OS216_BINARY 5
  SCS_64BIT_BINARY 6

pointer [GetBinaryTypeResult*] [GetBinaryTypeResult] display=LPDWORD

flag [OpenFileFlags] UINT display=UINT
  OF_READ             0x00000000
  OF_SHARE_COMPAT     0x00000000
  OF_WRITE            0x00000001
  OF_READWRITE        0x00000002
  OF_SHARE_EXCLUSIVE  0x00000010
  OF_SHARE_DENY_WRITE 0x00000020
  OF_SHARE_DENY_READ  0x00000030
  OF_SHARE_DENY_NONE  0x00000040
  OF_PARSE            0x00000100
  OF_DELETE           0x00000200
  OF_VERIFY           0x00000400
  OF_CANCEL           0x00000800
  OF_CREATE           0x00001000
  OF_PROMPT           0x00002000
  OF_EXIST            0x00004000
  OF_REOPEN           0x00008000

flag [PriorityClass] DWORD display=DWORD
  NORMAL_PRIORITY_CLASS         0x00000020
  IDLE_PRIORITY_CLASS           0x00000040
  HIGH_PRIORITY_CLASS           0x00000080
  REALTIME_PRIORITY_CLASS       0x00000100
  BELOW_NORMAL_PRIORITY_CLASS   0x00004000
  ABOVE_NORMAL_PRIORITY_CLASS   0x00008000
  PROCESS_MODE_BACKGROUND_BEGIN 0x00100000
  PROCESS_MODE_BACKGROUND_END   0x00200000

flag [ContinueStatusFlag] DWORD display=DWORD
  DBG_CONTINUE              0x00010002
  DBG_EXCEPTION_NOT_HANDLED 0x80010001

enum [lcreatAttribute] int display=int
  Normal    0
  Read-only 1
  Hidden    2
  System    3

flag [CreateSymbolicLinkFlags] DWORD display=DWORD
  SYMBOLIC_LINK_FLAG_DIRECTORY 0x1

enum [FileType] DWORD display=DWORD
  FILE_TYPE_UNKNOWN 0x0000
  FILE_TYPE_DISK    0x0001
  FILE_TYPE_CHAR    0x0002
  FILE_TYPE_PIPE    0x0003
  FILE_TYPE_REMOTE  0x8000

enum POWER_REQUEST_TYPE UINT
  PowerRequestDisplayRequired   0
  PowerRequestSystemRequired    1
  PowerRequestAwayModeRequired  2
  PowerRequestExecutionRequired 3

enum LATENCY_TIME UINT
  LT_DONT_CARE      0
  LT_LOWEST_LATENCY 1

enum COMPUTER_NAME_FORMAT UINT
  ComputerNameNetBIOS                   0
  ComputerNameDnsHostname               1
  ComputerNameDnsDomain                 2
  ComputerNameDnsFullyQualified         3
  ComputerNamePhysicalNetBIOS           4
  ComputerNamePhysicalDnsHostname       5
  ComputerNamePhysicalDnsDomain         6
  ComputerNamePhysicalDnsFullyQualified 7

struct COORD
  X SHORT
  Y SHORT

pointer PCOORD COORD

struct SMALL_RECT
  Left SHORT
  Top SHORT
  Right SHORT
  Bottom SHORT

pointer PSMALL_RECT SMALL_RECT

pointer "const SMALL_RECT*" SMALL_RECT

struct CHAR_INFO
  Char SHORT display=union
  Attributes [ConsoleAttribute]

pointer PCHAR_INFO CHAR_INFO

pointer "const CHAR_INFO*" CHAR_INFO

enum [HeapEntryFlags] DWORD display=DWORD
  LF32_FIXED    0x00000001
  LF32_FREE     0x00000002
  LF32_MOVEABLE 0x00000004

struct HEAPENTRY32
  dwSize SIZE_T
  hHandle HANDLE
  dwAddress ULONG_PTR
  dwBlockSize SIZE_T
  dwFlags [HeapEntryFlags]
  dwLockCount DWORD
  dwResvd DWORD
  th32ProcessID DWORD
  th32HeapID ULONG_PTR

pointer LPHEAPENTRY32 HEAPENTRY32

enum [HeapListFlags] DWORD display=DWORD
  HF32_DEFAULT 1
  HF32_SHARED  2

struct HEAPLIST32
  dwSize SIZE_T
  th32ProcessID DWORD
  th32HeapID ULONG_PTR
  dwFlags [HeapListFlags]

pointer LPHEAPLIST32 HEAPLIST32

struct THREADENTRY32
  dwSize DWORD
  cntUsage DWORD
  th32ThreadID DWORD
  th32OwnerProcessID DWORD
  tpBasePri LONG
  tpDeltaPri LONG
  dwFlags DWORD

pointer LPTHREADENTRY32 THREADENTRY32

struct BY_HANDLE_FILE_INFORMATION
  dwFileAttributes DWORD
  ftCreationTime FILETIME
  ftLastAccessTime FILETIME
  ftLastWriteTime FILETIME
  dwVolumeSerialNumber DWORD
  nFileSizeHigh DWORD
  nFileSizeLow DWORD
  nNumberOfLinks DWORD
  nFileIndexHigh DWORD
  nFileIndexLow DWORD

pointer LPBY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION

struct OVERLAPPED_ENTRY
  lpCompletionKey ULONG_PTR
  lpOverlapped LPOVERLAPPED
  Internal ULONG_PTR
  dwNumberOfBytesTransferred DWORD

pointer LPOVERLAPPED_ENTRY OVERLAPPED_ENTRY

struct MEMORYSTATUSEX
  dwLength DWORD
  dwMemoryLoad DWORD
  ullTotalPhys DWORDLONG
  ullAvailPhys DWORDLONG
  ullTotalPageFile DWORDLONG
  ullAvailPageFile DWORDLONG
  ullTotalVirtual DWORDLONG
  ullAvailVirtual DWORDLONG
  ullAvailExtendedVirtual DWORDLONG

pointer LPMEMORYSTATUSEX MEMORYSTATUSEX

struct MEMORY_BASIC_INFORMATION
  BaseAddress PVOID
  AllocationBase PVOID
  AllocationProtect [MemoryProtection]
  RegionSize SIZE_T
  State [MemoryAllocationFlags]
  Protect [MemoryProtection]
  Type [MemoryType]

pointer PMEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION

struct MEMORYSTATUS
  dwLength DWORD
  dwMemoryLoad DWORD
  dwTotalPhys SIZE_T
  dwAvailPhys SIZE_T
  dwTotalPageFile SIZE_T
  dwAvailPageFile SIZE_T
  dwTotalVirtual SIZE_T
  dwAvailVirtual SIZE_T

pointer LPMEMORYSTATUS MEMORYSTATUS

struct IO_COUNTERS
  ReadOperationCount ULONGLONG
  WriteOperationCount ULONGLONG
  OtherOperationCount ULONGLONG
  ReadTransferCount ULONGLONG
  WriteTransferCount ULONGLONG
  OtherTransferCount ULONGLONG

pointer PIO_COUNTERS IO_COUNTERS

struct SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
  CycleTime DWORD64

pointer PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION

struct TP_POOL_STACK_INFORMATION
  StackReserve SIZE_T
  StackCommit SIZE_T

pointer PTP_POOL_STACK_INFORMATION TP_POOL_STACK_INFORMATION

alias PUMS_COMPLETION_LIST LPVOID

pointer PUMS_COMPLETION_LIST* PUMS_COMPLETION_LIST

pointer PUMS_SCHEDULER_ENTRY_POINT PUMS_COMPLETION_LIST

struct UMS_SCHEDULER_STARTUP_INFO
  UmsVersion ULONG
  CompletionList PUMS_COMPLETION_LIST
  SchedulerProc PUMS_SCHEDULER_ENTRY_POINT
  SchedulerParam PVOID

pointer PUMS_SCHEDULER_STARTUP_INFO UMS_SCHEDULER_STARTUP_INFO

struct ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
  lpInformation PVOID
  lpSectionBase PVOID
  ulSectionLength ULONG
  lpSectionGlobalDataBase PVOID
  ulSectionGlobalDataLength ULONG

struct ACTCTX_SECTION_KEYED_DATA
  cbSize ULONG
  ulDataFormatVersion ULONG
  lpData PVOID
  ulLength ULONG
  lpSectionGlobalData PVOID
  ulSectionGlobalDataLength ULONG
  lpSectionBase PVOID
  ulSectionTotalLength ULONG
  hActCtx HANDLE
  ulAssemblyRosterIndex ULONG
  ulFlags ULONG
  AssemblyMetadata ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA

pointer PACTCTX_SECTION_KEYED_DATA ACTCTX_SECTION_KEYED_DATA

struct COMMTIMEOUTS
  ReadIntervalTimeout DWORD
  ReadTotalTimeoutMultiplier DWORD
  ReadTotalTimeoutConstant DWORD
  WriteTotalTimeoutMultiplier DWORD
  WriteTotalTimeoutConstant DWORD

pointer LPCOMMTIMEOUTS COMMTIMEOUTS

struct CONSOLE_CURSOR_INFO
  dwSize DWORD
  bVisible BOOL

pointer PCONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO

pointer "const CONSOLE_CURSOR_INFO*" CONSOLE_CURSOR_INFO

struct CONSOLE_HISTORY_INFO
  cbSize UINT
  HistoryBufferSize UINT
  NumberOfHistoryBuffers UINT
  dwFlags DWORD

pointer PCONSOLE_HISTORY_INFO CONSOLE_HISTORY_INFO

struct CONSOLE_SCREEN_BUFFER_INFO
  dwSize COORD
  dwCursorPosition COORD
  wAttributes WORD
  srWindow SMALL_RECT
  dwMaximumWindowSize COORD

pointer PCONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO

struct CONSOLE_SELECTION_INFO
  dwFlags DWORD
  dwSelectionAnchor COORD
  srSelection SMALL_RECT

pointer PCONSOLE_SELECTION_INFO CONSOLE_SELECTION_INFO

struct CONSOLE_FONT_INFO
  nFont DWORD
  dwFontSize COORD

pointer PCONSOLE_FONT_INFO CONSOLE_FONT_INFO

struct FRAME_POINTERS
  MemoryStackFp ULONGLONG
  BackingStoreFp ULONGLONG

pointer PFRAME_POINTERS FRAME_POINTERS

struct RUNTIME_FUNCTION
  BeginAddress DWORD
  EndAddress DWORD
  UnwindData DWORD

pointer PRUNTIME_FUNCTION RUNTIME_FUNCTION

struct CALDATETIME
  CalId CALID
  Era UINT
  Year UINT
  Month UINT
  Day UINT
  DayOfWeek UINT
  Hour UINT
  Minute UINT
  Second UINT
  Tick ULONG

pointer LPCALDATETIME CALDATETIME

alias "const LPCALDATETIME" LPCALDATETIME

struct NLSVERSIONINFO
  dwNLSVersionInfoSize DWORD
  dwNLSVersion DWORD
  dwDefinedVersion DWORD
  dwEffectiveId DWORD
  guidCustomVersion GUID

pointer LPNLSVERSIONINFO NLSVERSIONINFO

alias NLSVERSIONINFOEX NLSVERSIONINFO

pointer LPNLSVERSIONINFOEX NLSVERSIONINFOEX

struct CURRENCYFMT
  NumDigits UINT
  LeadingZero UINT
  Grouping UINT
  lpDecimalSep LPTSTR
  lpThousandSep LPTSTR
  NegativeOrder UINT
  PositiveOrder UINT
  lpCurrencySymbol LPTSTR

pointer "const CURRENCYFMT*" CURRENCYFMT

struct SYSTEM_POWER_STATUS
  ACLineStatus BYTE
  BatteryFlag BYTE
  BatteryLifePercent BYTE
  Reserved1 BYTE
  BatteryLifeTime DWORD
  BatteryFullLifeTime DWORD

pointer LPSYSTEM_POWER_STATUS SYSTEM_POWER_STATUS

enum [PROCESSOR_TYPE] DWORD display=DWORD
  PROCESSOR_INTEL_386     386
  PROCESSOR_INTEL_486     486
  PROCESSOR_INTEL_PENTIUM 586
  PROCESSOR_INTEL_IA64    2200
  PROCESSOR_AMD_X8664     8664

struct SYSTEM_INFO
  wProcessorArchitecture [PROCESSOR_ARCHITECTURE]
  wReserved WORD
  dwPageSize DWORD
  lpMinimumApplicationAddress LPVOID
  lpMaximumApplicationAddress LPVOID
  dwActiveProcessorMask DWORD_PTR
  dwNumberOfProcessors DWORD
  dwProcessorType [PROCESSOR_TYPE]
  dwAllocationGranularity DWORD
  wProcessorLevel WORD
  wProcessorRevision WORD

pointer LPSYSTEM_INFO SYSTEM_INFO

enum [SET_LAST_ERROR_EX_TYPE] DWORD display=DWORD
  SLE_ERROR      0x00000001
  SLE_MINORERROR 0x00000002
  SLE_WARNING    0x00000003

enum [DEBUG_EVENT_CODE] DWORD display=DWORD
  EXCEPTION_DEBUG_EVENT      1
  CREATE_THREAD_DEBUG_EVENT  2
  CREATE_PROCESS_DEBUG_EVENT 3
  EXIT_THREAD_DEBUG_EVENT    4
  EXIT_PROCESS_DEBUG_EVENT   5
  LOAD_DLL_DEBUG_EVENT       6
  UNLOAD_DLL_DEBUG_EVENT     7
  OUTPUT_DEBUG_STRING_EVENT  8
  RIP_EVENT                  9

struct EXCEPTION_DEBUG_INFO
  ExceptionRecord EXCEPTION_RECORD
  dwFirstChance DWORD

struct CREATE_THREAD_DEBUG_INFO
  hThread HANDLE
  lpThreadLocalBase LPVOID
  lpStartAddress LPTHREAD_START_ROUTINE

struct CREATE_PROCESS_DEBUG_INFO
  hFile HANDLE
  hProcess HANDLE
  hThread HANDLE
  lpBaseOfImage LPVOID
  dwDebugInfoFileOffset DWORD
  nDebugInfoSize DWORD
  lpThreadLocalBase LPVOID
  lpStartAddress LPTHREAD_START_ROUTINE
  lpImageName LPVOID
  fUnicode WORD

struct EXIT_THREAD_DEBUG_INFO
  dwExitCode DWORD

struct EXIT_PROCESS_DEBUG_INFO
  dwExitCode DWORD

struct LOAD_DLL_DEBUG_INFO
  hFile HANDLE
  lpBaseOfDll LPVOID
  dwDebugInfoFileOffset DWORD
  nDebugInfoSize DWORD
  lpImageName LPVOID
  fUnicode WORD

struct UNLOAD_DLL_DEBUG_INFO
  lpBaseOfDll LPVOID

struct OUTPUT_DEBUG_STRING_INFO
  lpDebugStringData LPSTR
  fUnicode WORD
  nDebugStringLength WORD

struct RIP_INFO
  dwError DWORD
  dwType [SET_LAST_ERROR_EX_TYPE]

union [DEBUG_EVENT_u] display=union
  Exception EXCEPTION_DEBUG_INFO
  CreateThread CREATE_THREAD_DEBUG_INFO
  CreateProcessInfo CREATE_PROCESS_DEBUG_INFO
  ExitThread EXIT_THREAD_DEBUG_INFO
  ExitProcess EXIT_PROCESS_DEBUG_INFO
  LoadDll LOAD_DLL_DEBUG_INFO
  UnloadDll UNLOAD_DLL_DEBUG_INFO
  DebugString OUTPUT_DEBUG_STRING_INFO
  RipInfo RIP_INFO

struct DEBUG_EVENT
  dwDebugEventCode [DEBUG_EVENT_CODE]
  dwProcessId DWORD
  dwThreadId DWORD
  u [DEBUG_EVENT_u]

pointer LPDEBUG_EVENT DEBUG_EVENT

struct WOW64_FLOATING_SAVE_AREA
  ControlWord DWORD
  StatusWord DWORD
  TagWord DWORD
  ErrorOffset DWORD
  ErrorSelector DWORD
  DataOffset DWORD
  DataSelector DWORD
  RegisterArea "BYTE [WOW64_SIZE_OF_80387_REGISTERS]"
  Cr0NpxState DWORD

flag [WOW64_CONTEXT_FLAGS] DWORD display=DWORD
  WOW64_CONTEXT_i386               0x00010000
  WOW64_CONTEXT_CONTROL            0x00010001
  WOW64_CONTEXT_INTEGER            0x00010002
  WOW64_CONTEXT_SEGMENTS           0x00010004
  WOW64_CONTEXT_FULL               0x00010007
  WOW64_CONTEXT_FLOATING_POINT     0x00010008
  WOW64_CONTEXT_DEBUG_REGISTERS    0x00010010
  WOW64_CONTEXT_EXTENDED_REGISTERS 0x00010020
  WOW64_CONTEXT_ALL                0x0001003F
  WOW64_CONTEXT_XSTATE             0x00010040

struct WOW64_CONTEXT pack=4
  ContextFlags [WOW64_CONTEXT_FLAGS]
  Dr0 DWORD
  Dr1 DWORD
  Dr2 DWORD
  Dr3 DWORD
  Dr6 DWORD
  Dr7 DWORD
  FloatSave WOW64_FLOATING_SAVE_AREA
  SegGs DWORD
  SegFs DWORD
  SegEs DWORD
  SegDs DWORD
  Edi DWORD
  Esi DWORD
  Ebx DWORD
  Edx DWORD
  Ecx DWORD
  Eax DWORD
  Ebp DWORD
  Eip DWORD
  SegCs DWORD
  EFlags DWORD
  Esp DWORD
  SegSs DWORD
  ExtendedRegisters "BYTE [WOW64_MAXIMUM_SUPPORTED_EXTENSION]"

pointer "CONST WOW64_CONTEXT*" WOW64_CONTEXT

pointer PWOW64_CONTEXT WOW64_CONTEXT

struct MODULEENTRY32
  dwSize DWORD
  th32ModuleID DWORD
  th32ProcessID DWORD
  GlblcntUsage DWORD
  ProccntUsage DWORD
  modBaseAddr BYTE*
  modBaseSize DWORD
  hModule HMODULE
  szModule "TCHAR [MAX_MODULE_NAME32 + 1]"
  szExePath "TCHAR [MAX_PATH]"

pointer LPMODULEENTRY32 MODULEENTRY32

struct PROCESSENTRY32
  dwSize DWORD
  cntUsage DWORD
  th32ProcessID DWORD
  th32DefaultHeapID ULONG_PTR
  th32ModuleID DWORD
  cntThreads DWORD
  th32ParentProcessID DWORD
  pcPriClassBase LONG
  dwFlags DWORD
  szExeFile "TCHAR [MAX_PATH]"

pointer LPPROCESSENTRY32 PROCESSENTRY32

enum FILE_ID_TYPE UINT
  FileIdType   0
  ObjectIdType 1

union [FILE_ID_DESCRIPTOR_u] display=union
  FileId LARGE_INTEGER
  ObjectId GUID

struct FILE_ID_DESCRIPTOR
  dwSize DWORD
  Type FILE_ID_TYPE
   [FILE_ID_DESCRIPTOR_u]

pointer LPFILE_ID_DESCRIPTOR FILE_ID_DESCRIPTOR

enum PROCESSOR_CACHE_TYPE UINT
  CacheUnified     0
  CacheInstruction 1
  CacheData        2
  CacheTrace       3

flag [CACHE_ASSOCIATIVITY] BYTE display=BYTE
  CACHE_FULLY_ASSOCIATIVE 0xFF

struct CACHE_DESCRIPTOR
  Level BYTE
  Associativity [CACHE_ASSOCIATIVITY]
  LineSize WORD
  Size DWORD
  Type PROCESSOR_CACHE_TYPE

struct [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u_s1] display=struct
  Flags BYTE

struct [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u_s2] display=struct
  NodeNumber DWORD

union [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u] display=union
  ProcessorCore [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u_s1]
  NumaNode [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u_s2]
  Cache CACHE_DESCRIPTOR
  Reserved "ULONGLONG [2]"

struct SYSTEM_LOGICAL_PROCESSOR_INFORMATION
  ProcessorMask ULONG_PTR
  Relationship LOGICAL_PROCESSOR_RELATIONSHIP
   [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u]

pointer PSYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION

struct GROUP_AFFINITY
  Mask KAFFINITY
  Group WORD
  Reserved "WORD [3]"

pointer PGROUP_AFFINITY GROUP_AFFINITY

pointer "const GROUP_AFFINITY*" GROUP_AFFINITY

array "GROUP_AFFINITY [ANYSIZE_ARRAY]" base=GROUP_AFFINITY count=1

struct PROCESSOR_GROUP_INFO
  MaximumProcessorCount BYTE
  ActiveProcessorCount BYTE
  Reserved "BYTE [38]"
  ActiveProcessorMask KAFFINITY

array "PROCESSOR_GROUP_INFO [ANYSIZE_ARRAY]" base=PROCESSOR_GROUP_INFO count=1

struct GROUP_RELATIONSHIP
  MaximumGroupCount WORD
  ActiveGroupCount WORD
  Reserved "BYTE [20]"
  GroupInfo "PROCESSOR_GROUP_INFO [ANYSIZE_ARRAY]" count=ActiveGroupCount

struct CACHE_RELATIONSHIP
  Level BYTE
  Associativity [CACHE_ASSOCIATIVITY]
  LineSize WORD
  CacheSize DWORD
  Type PROCESSOR_CACHE_TYPE
  Reserved "BYTE [20]"
  GroupMask GROUP_AFFINITY

struct NUMA_NODE_RELATIONSHIP
  NodeNumber DWORD
  Reserved "BYTE [20]"
  GroupMask GROUP_AFFINITY

enum [PROCESSOR_RELATIONSHIP_FLAGS] BYTE display=BYTE
  LTP_PC_SMT 0x1

struct PROCESSOR_RELATIONSHIP
  Flags [PROCESSOR_RELATIONSHIP_FLAGS]
  Reserved "BYTE [21]"
  GroupCount WORD
  GroupMask "GROUP_AFFINITY [ANYSIZE_ARRAY]" count=GroupCount

union [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_u] display=union
  Processor PROCESSOR_RELATIONSHIP
  NumaNode NUMA_NODE_RELATIONSHIP
  Cache CACHE_RELATIONSHIP
  Group GROUP_RELATIONSHIP

struct SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
  Relationship LOGICAL_PROCESSOR_RELATIONSHIP
  Size DWORD
   [SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_u]

pointer PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX

enum [DCB_PARITY] BYTE display=BYTE
  NOPARITY    0
  ODDPARITY   1
  EVENPARITY  2
  MARKPARITY  3
  SPACEPARITY 4

enum [DCB_STOPBITS] BYTE display=BYTE
  ONESTOPBIT   0
  ONE5STOPBITS 1
  TWOSTOPBITS  2

struct DCB
  DCBlength DWORD
  BaudRate DWORD
  fDummy2 DWORD
  wReserved WORD
  XonLim WORD
  XoffLim WORD
  ByteSize BYTE
  Parity [DCB_PARITY]
  StopBits [DCB_STOPBITS]
  XonChar char
  XoffChar char
  ErrorChar char
  EofChar char
  EvtChar char
  wReserved1 WORD

pointer LPDCB DCB

flag [SERIAL_PROVIDER_TYPE] DWORD display=DWORD
  SP_SERIALCOMM 0x00000001

flag [BAUD_FLAGS] DWORD display=DWORD
  BAUD_075    0x00000001
  BAUD_110    0x00000002
  BAUD_134_5  0x00000004
  BAUD_150    0x00000008
  BAUD_300    0x00000010
  BAUD_600    0x00000020
  BAUD_1200   0x00000040
  BAUD_1800   0x00000080
  BAUD_2400   0x00000100
  BAUD_4800   0x00000200
  BAUD_7200   0x00000400
  BAUD_9600   0x00000800
  BAUD_14400  0x00001000
  BAUD_19200  0x00002000
  BAUD_38400  0x00004000
  BAUD_56K    0x00008000
  BAUD_128K   0x00010000
  BAUD_115200 0x00020000
  BAUD_57600  0x00040000
  BAUD_USER   0x10000000

enum [PROVIDER_SUB_TYPE] DWORD display=DWORD
  PST_UNSPECIFIED    0x00000000
  PST_RS232          0x00000001
  PST_PARALLELPORT   0x00000002
  PST_RS422          0x00000003
  PST_RS423          0x00000004
  PST_RS449          0x00000005
  PST_MODEM          0x00000006
  PST_FAX            0x00000021
  PST_SCANNER        0x00000022
  PST_NETWORK_BRIDGE 0x00000100
  PST_LAT            0x00000101
  PST_TCPIP_TELNET   0x00000102
  PST_X25            0x00000103

flag [PROVIDER_CAPABILITIES] DWORD display=DWORD
  PCF_DTRDSR        0x0001
  PCF_RTSCTS        0x0002
  PCF_RLSD          0x0004
  PCF_PARITY_CHECK  0x0008
  PCF_XONXOFF       0x0010
  PCF_SETXCHAR      0x0020
  PCF_TOTALTIMEOUTS 0x0040
  PCF_INTTIMEOUTS   0x0080
  PCF_SPECIALCHARS  0x0100
  PCF_16BITMODE     0x0200

flag [SETTABLE_PARAMS] DWORD display=DWORD
  SP_PARITY       0x0001
  SP_BAUD         0x0002
  SP_DATABITS     0x0004
  SP_STOPBITS     0x0008
  SP_HANDSHAKING  0x0010
  SP_PARITY_CHECK 0x0020
  SP_RLSD         0x0040

flag [DATABITS_FLAGS] WORD display=WORD
  DATABITS_5   0x0001
  DATABITS_6   0x0002
  DATABITS_7   0x0004
  DATABITS_8   0x0008
  DATABITS_16  0x0010
  DATABITS_16X 0x0020

flag [STOPBITS_PARITY_FLAGS] WORD display=WORD
  STOPBITS_10  0x0001
  STOPBITS_15  0x0002
  STOPBITS_20  0x0004
  PARITY_NONE  0x0100
  PARITY_ODD   0x0200
  PARITY_EVEN  0x0400
  PARITY_MARK  0x0800
  PARITY_SPACE 0x1000

enum [COMMPROP_SPEC] DWORD display=DWORD
  COMMPROP_INITIALIZED 0xE73CF52E

struct COMMPROP
  wPacketLength WORD
  wPacketVersion WORD
  dwServiceMask [SERIAL_PROVIDER_TYPE]
  dwReserved1 DWORD
  dwMaxTxQueue DWORD
  dwMaxRxQueue DWORD
  dwMaxBaud [BAUD_FLAGS]
  dwProvSubType [PROVIDER_SUB_TYPE]
  dwProvCapabilities [PROVIDER_CAPABILITIES]
  dwSettableParams [SETTABLE_PARAMS]
  dwSettableBaud [BAUD_FLAGS]
  wSettableData [DATABITS_FLAGS]
  wSettableStopParity [STOPBITS_PARITY_FLAGS]
  dwCurrentTxQueue DWORD
  dwCurrentRxQueue DWORD
  dwProvSpec1 [COMMPROP_SPEC]
  dwProvSpec2 DWORD
  wcProvChar "WCHAR [1]"

pointer LPCOMMPROP COMMPROP

struct COMMCONFIG
  dwSize DWORD
  wVersion WORD
  wReserved WORD
  dcb DCB
  dwProviderSubType [PROVIDER_SUB_TYPE]
  dwProviderOffset DWORD
  dwProviderSize DWORD
  wcProviderData "WCHAR [1]"

pointer LPCOMMCONFIG COMMCONFIG

struct CONSOLE_SCREEN_BUFFER_INFOEX
  cbSize ULONG
  dwSize COORD
  dwCursorPosition COORD
  wAttributes [ConsoleAttribute]
  srWindow SMALL_RECT
  dwMaximumWindowSize COORD
  wPopupAttributes WORD
  bFullscreenSupported BOOL
  ColorTable "COLORREF [16]"

pointer PCONSOLE_SCREEN_BUFFER_INFOEX CONSOLE_SCREEN_BUFFER_INFOEX

flag [FONT_FAMILY] UINT display=UINT
  FF_DONTCARE   0
  FF_ROMAN      0x10
  FF_SWISS      0x20
  FF_MODERN     0x30
  FF_SCRIPT     0x40
  FF_DECORATIVE 0x50

struct CONSOLE_FONT_INFOEX
  cbSize ULONG
  nFont DWORD
  dwFontSize COORD
  FontFamily [FONT_FAMILY]
  FontWeight UINT
  FaceName "WCHAR [LF_FACESIZE]"

pointer PCONSOLE_FONT_INFOEX CONSOLE_FONT_INFOEX

enum [INPUT_RECORD_TYPE] WORD display=WORD
  KEY_EVENT                0x0001
  MOUSE_EVENT              0x0002
  WINDOW_BUFFER_SIZE_EVENT 0x0004
  MENU_EVENT               0x0008
  FOCUS_EVENT              0x0010

union [KEY_EVENT_RECORD_u] display=union
  UnicodeChar WCHAR
  AsciiChar CHAR

flag [ControlKeyState] DWORD display=DWORD
  RIGHT_ALT_PRESSED  0x0001
  LEFT_ALT_PRESSED   0x0002
  RIGHT_CTRL_PRESSED 0x0004
  LEFT_CTRL_PRESSED  0x0008
  SHIFT_PRESSED      0x0010
  NUMLOCK_ON         0x0020
  SCROLLLOCK_ON      0x0040
  CAPSLOCK_ON        0x0080
  ENHANCED_KEY       0x0100

struct KEY_EVENT_RECORD
  bKeyDown BOOL
  wRepeatCount WORD
  wVirtualKeyCode [VirtKeyCode]
  wVirtualScanCode WORD
  uChar [KEY_EVENT_RECORD_u]
  dwControlKeyState [ControlKeyState]

flag [MOUSE_EVENT_STATE] DWORD display=DWORD
  FROM_LEFT_1ST_BUTTON_PRESSED 0x0001
  RIGHTMOST_BUTTON_PRESSED     0x0002
  FROM_LEFT_2ND_BUTTON_PRESSED 0x0004
  FROM_LEFT_3RD_BUTTON_PRESSED 0x0008
  FROM_LEFT_4TH_BUTTON_PRESSED 0x0010

flag [MOUSE_EVENT_FLAGS] DWORD display=DWORD
  MOUSE_MOVED    0x0001
  DOUBLE_CLICK   0x0002
  MOUSE_WHEELED  0x0004
  MOUSE_HWHEELED 0x0008

struct MOUSE_EVENT_RECORD
  dwMousePosition COORD
  dwButtonState [MOUSE_EVENT_STATE]
  dwControlKeyState DWORD
  dwEventFlags [MOUSE_EVENT_FLAGS]

struct WINDOW_BUFFER_SIZE_RECORD
  dwSize COORD

struct MENU_EVENT_RECORD
  dwCommandId UINT

struct FOCUS_EVENT_RECORD
  bSetFocus BOOL

union [INPUT_RECORD_u] display=union
  KeyEvent KEY_EVENT_RECORD
  MouseEvent MOUSE_EVENT_RECORD
  WindowBufferSizeEvent WINDOW_BUFFER_SIZE_RECORD
  MenuEvent MENU_EVENT_RECORD
  FocusEvent FOCUS_EVENT_RECORD

struct INPUT_RECORD
  EventType [INPUT_RECORD_TYPE]
  Event [INPUT_RECORD_u]

pointer PINPUT_RECORD INPUT_RECORD

pointer "const INPUT_RECORD*" INPUT_RECORD

struct UNWIND_HISTORY_TABLE_ENTRY
  ImageBase DWORD64
  FunctionEntry PRUNTIME_FUNCTION

array "UNWIND_HISTORY_TABLE_ENTRY [UNWIND_HISTORY_TABLE_SIZE]" base=UNWIND_HISTORY_TABLE_ENTRY count=12

struct UNWIND_HISTORY_TABLE
  Count DWORD
  LocalHint BYTE
  GlobalHint BYTE
  Search BYTE
  Once BYTE
  LowAddress DWORD64
  HighAddress DWORD64
  Entry "UNWIND_HISTORY_TABLE_ENTRY [UNWIND_HISTORY_TABLE_SIZE]"

pointer PUNWIND_HISTORY_TABLE UNWIND_HISTORY_TABLE

struct CPINFOEX
  MaxCharSize UINT
  DefaultChar "BYTE [MAX_DEFAULTCHAR]"
  LeadByte "BYTE [MAX_LEADBYTES]"
  UnicodeDefaultChar WCHAR
  CodePage UINT
  CodePageName "TCHAR [MAX_PATH]"

pointer LPCPINFOEX CPINFOEX

struct CPINFO
  MaxCharSize UINT
  DefaultChar "BYTE [MAX_DEFAULTCHAR]"
  LeadByte "BYTE [MAX_LEADBYTES]"

pointer LPCPINFO CPINFO

struct [REASON_CONTEXT_u_s] display=struct
  LocalizedReasonModule HMODULE
  LocalizedReasonId ULONG
  ReasonStringCount ULONG
  ReasonStrings LPWSTR*

union [REASON_CONTEXT_u] display=union
  Detailed [REASON_CONTEXT_u_s]
  SimpleReasonString LPWSTR

enum [POWER_REQUEST_CONTEXT_FLAGS] DWORD display=DWORD
  POWER_REQUEST_CONTEXT_SIMPLE_STRING   0x00000001
  POWER_REQUEST_CONTEXT_DETAILED_STRING 0x00000002

struct REASON_CONTEXT
  Version ULONG
  Flags [POWER_REQUEST_CONTEXT_FLAGS]
  Reason [REASON_CONTEXT_u]

pointer PREASON_CONTEXT REASON_CONTEXT

struct DYNAMIC_TIME_ZONE_INFORMATION
  Bias LONG
  StandardName "WCHAR [32]"
  StandardDate SYSTEMTIME
  StandardBias LONG
  DaylightName "WCHAR [32]"
  DaylightDate SYSTEMTIME
  DaylightBias LONG
  TimeZoneKeyName "WCHAR [128]"
  DynamicDaylightTimeDisabled BOOLEAN

pointer PDYNAMIC_TIME_ZONE_INFORMATION DYNAMIC_TIME_ZONE_INFORMATION

pointer "const DYNAMIC_TIME_ZONE_INFORMATION*" DYNAMIC_TIME_ZONE_INFORMATION

union [TP_CALLBACK_ENVIRON_V3_u] display=union
  Flags DWORD

struct TP_CALLBACK_ENVIRON_V3
  Version TP_VERSION
  Pool PTP_POOL
  CleanupGroup PTP_CLEANUP_GROUP
  CleanupGroupCancelCallback PTP_CLEANUP_GROUP_CANCEL_CALLBACK
  RaceDll PVOID
  ActivationContext ACTIVATION_CONTEXT*
  FinalizationCallback PTP_SIMPLE_CALLBACK
  u [TP_CALLBACK_ENVIRON_V3_u]
  CallbackPriority TP_CALLBACK_PRIORITY
  Size DWORD

pointer PTP_CALLBACK_ENVIRON TP_CALLBACK_ENVIRON_V3

struct [PROCESS_HEAP_ENTRY_u_s1] display=struct
  hMem HANDLE
  dwReserved "DWORD [3]"

struct [PROCESS_HEAP_ENTRY_u_s2] display=struct
  dwCommittedSize DWORD
  dwUnCommittedSize DWORD
  lpFirstBlock LPVOID
  lpLastBlock LPVOID

union [PROCESS_HEAP_ENTRY_u] display=union
  Block [PROCESS_HEAP_ENTRY_u_s1]
  Region [PROCESS_HEAP_ENTRY_u_s2]

flag [PROCESS_HEAP_FLAGS] WORD display=WORD
  PROCESS_HEAP_REGION            0x0001
  PROCESS_HEAP_UNCOMMITTED_RANGE 0x0002
  PROCESS_HEAP_ENTRY_BUSY        0x0004
  PROCESS_HEAP_ENTRY_MOVEABLE    0x0010
  PROCESS_HEAP_ENTRY_DDESHARE    0x0020

struct PROCESS_HEAP_ENTRY
  lpData PVOID
  cbData DWORD
  cbOverhead BYTE
  iRegionIndex BYTE
  wFlags [PROCESS_HEAP_FLAGS]
   [PROCESS_HEAP_ENTRY_u]

pointer LPPROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY

enum HARDWARE_COUNTER_TYPE UINT
  PMCCounter 0

struct HARDWARE_COUNTER_DATA
  Type HARDWARE_COUNTER_TYPE
  Reserved DWORD
  Value DWORD64

array "HARDWARE_COUNTER_DATA [MAX_HW_COUNTERS]" base=HARDWARE_COUNTER_DATA count=16

struct PERFORMANCE_DATA
  Size WORD
  Version BYTE
  HwCountersCount BYTE
  ContextSwitchCount DWORD
  WaitReasonBitMap DWORD64
  CycleTime DWORD64
  RetryCount DWORD
  Reserved DWORD
  HwCounters "HARDWARE_COUNTER_DATA [MAX_HW_COUNTERS]"

pointer PPERFORMANCE_DATA PERFORMANCE_DATA

flag [DDD_FLAGS] DWORD display=DWORD
  DDD_RAW_TARGET_PATH       0x00000001
  DDD_REMOVE_DEFINITION     0x00000002
  DDD_EXACT_MATCH_ON_REMOVE 0x00000004
  DDD_NO_BROADCAST_SYSTEM   0x00000008
  DDD_LUID_BROADCAST_DRIVE  0x00000010

enum [DRIVE_TYPE] UINT display=UINT
  DRIVE_UNKNOWN     0
  DRIVE_NO_ROOT_DIR 1
  DRIVE_REMOVABLE   2
  DRIVE_FIXED       3
  DRIVE_REMOTE      4
  DRIVE_CDROM       5
  DRIVE_RAMDISK     6

flag [FILE_SYSTEM_FLAGS] DWORD display=DWORD
  FILE_CASE_SENSITIVE_SEARCH        0x00000001
  FILE_CASE_PRESERVED_NAMES         0x00000002
  FILE_UNICODE_ON_DISK              0x00000004
  FILE_PERSISTENT_ACLS              0x00000008
  FILE_FILE_COMPRESSION             0x00000010
  FILE_VOLUME_QUOTAS                0x00000020
  FILE_SUPPORTS_SPARSE_FILES        0x00000040
  FILE_SUPPORTS_REPARSE_POINTS      0x00000080
  FILE_SUPPORTS_REMOTE_STORAGE      0x00000100
  FILE_VOLUME_IS_COMPRESSED         0x00008000
  FILE_SUPPORTS_OBJECT_IDS          0x00010000
  FILE_SUPPORTS_ENCRYPTION          0x00020000
  FILE_NAMED_STREAMS                0x00040000
  FILE_READ_ONLY_VOLUME             0x00080000
  FILE_SEQUENTIAL_WRITE_ONCE        0x00100000
  FILE_SUPPORTS_TRANSACTIONS        0x00200000
  FILE_SUPPORTS_HARD_LINKS          0x00400000
  FILE_SUPPORTS_EXTENDED_ATTRIBUTES 0x00800000
  FILE_SUPPORTS_OPEN_BY_FILE_ID     0x01000000
  FILE_SUPPORTS_USN_JOURNAL         0x02000000
  FILE_SUPPORTS_INTEGRITY_STREAMS   0x04000000

pointer [LPFILE_SYSTEM_FLAGS] [FILE_SYSTEM_FLAGS] display=LPDWORD

enum [NMPWAIT] DWORD display=DWORD
  NMPWAIT_USE_DEFAULT_WAIT 0x00000000
  NMPWAIT_NOWAIT           0x00000001
  NMPWAIT_WAIT_FOREVER     0xffffffff

flag [PIPE_ACCESS] DWORD display=DWORD
  PIPE_ACCESS_INBOUND           0x00000001
  PIPE_ACCESS_OUTBOUND          0x00000002
  PIPE_ACCESS_DUPLEX            0x00000003
  WRITE_DAC                     0x00040000
  FILE_FLAG_FIRST_PIPE_INSTANCE 0x00080000
  WRITE_OWNER                   0x00080000
  ACCESS_SYSTEM_SECURITY        0x01000000
  FILE_FLAG_OVERLAPPED          0x40000000
  FILE_FLAG_WRITE_THROUGH       0x80000000

flag [PIPE_MODE] DWORD display=DWORD
  PIPE_TYPE_BYTE             0x00000000
  PIPE_READMODE_BYTE         0x00000000
  PIPE_WAIT                  0x00000000
  PIPE_ACCEPT_REMOTE_CLIENTS 0x00000000
  PIPE_NOWAIT                0x00000001
  PIPE_READMODE_MESSAGE      0x00000002
  PIPE_TYPE_MESSAGE          0x00000004
  PIPE_REJECT_REMOTE_CLIENTS 0x00000008

pointer [PIPE_MODE*] [PIPE_MODE] display=LPDWORD

flag [PIPE_STATE] DWORD display=DWORD
  PIPE_NOWAIT           0x00000001
  PIPE_READMODE_MESSAGE 0x00000002

pointer [PIPE_STATE*] [PIPE_STATE] display=LPDWORD

flag [PIPE_TYPE] DWORD display=DWORD
  PIPE_CLIENT_END   0x00000000
  PIPE_TYPE_BYTE    0x00000000
  PIPE_SERVER_END   0x00000001
  PIPE_TYPE_MESSAGE 0x00000004

pointer [PIPE_TYPE*] [PIPE_TYPE] display=LPDWORD

flag [GetModuleHandleExFlags] DWORD display=DWORD
  GET_MODULE_HANDLE_EX_FLAG_PIN                0x00000001
  GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT 0x00000002
  GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS       0x00000004

flag [LoadLibraryExFlags] DWORD display=DWORD
  DONT_RESOLVE_DLL_REFERENCES         0x00000001
  LOAD_LIBRARY_AS_DATAFILE            0x00000002
  LOAD_PACKAGED_LIBRARY               0x00000004
  LOAD_WITH_ALTERED_SEARCH_PATH       0x00000008
  LOAD_IGNORE_CODE_AUTHZ_LEVEL        0x00000010
  LOAD_LIBRARY_AS_IMAGE_RESOURCE      0x00000020
  LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE  0x00000040
  LOAD_LIBRARY_REQUIRE_SIGNED_TARGET  0x00000080
  LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR    0x00000100
  LOAD_LIBRARY_SEARCH_APPLICATION_DIR 0x00000200
  LOAD_LIBRARY_SEARCH_USER_DIRS       0x00000400
  LOAD_LIBRARY_SEARCH_SYSTEM32        0x00000800
  LOAD_LIBRARY_SEARCH_DEFAULT_DIRS    0x00001000

flag [CreateToolhelp32SnapshotFlags] DWORD display=DWORD
  TH32CS_SNAPHEAPLIST 0x00000001
  TH32CS_SNAPPROCESS  0x00000002
  TH32CS_SNAPTHREAD   0x00000004
  TH32CS_SNAPMODULE   0x00000008
  TH32CS_SNAPALL      0x0000000f
  TH32CS_SNAPMODULE32 0x00000010
  TH32CS_INHERIT      0x80000000

flag [LOAD_LIBRARY_SEARCH_FLAGS] DWORD display=DWORD
  LOAD_LIBRARY_SEARCH_APPLICATION_DIR 0x00000200
  LOAD_LIBRARY_SEARCH_USER_DIRS       0x00000400
  LOAD_LIBRARY_SEARCH_SYSTEM32        0x00000800
  LOAD_LIBRARY_SEARCH_DEFAULT_DIRS    0x00001000

enum [PROCESS_THREAD_HANDLE] [ProcessHandle] display=HANDLE
  GetCurrentThread() -2

flag [COMM_EVENT] DWORD display=DWORD
  EV_RXCHAR   0x0001
  EV_RXFLAG   0x0002
  EV_TXEMPTY  0x0004
  EV_CTS      0x0008
  EV_DSR      0x0010
  EV_RLSD     0x0020
  EV_BREAK    0x0040
  EV_ERR      0x0080
  EV_RING     0x0100
  EV_PERR     0x0200
  EV_RX80FULL 0x0400
  EV_EVENT1   0x0800
  EV_EVENT2   0x1000

pointer [COMM_EVENT*] [COMM_EVENT] display=LPDWORD

enum [COMM_FUNCTION] DWORD display=DWORD
  SETXOFF  1
  SETXON   2
  SETRTS   3
  CLRRTS   4
  SETDTR   5
  CLRDTR   6
  RESETDEV 7
  SETBREAK 8
  CLRBREAK 9

flag [PURGE_FLAGS] DWORD display=DWORD
  PURGE_TXABORT 0x0001
  PURGE_RXABORT 0x0002
  PURGE_TXCLEAR 0x0004
  PURGE_RXCLEAR 0x0008

flag [MODEM_STATUS_FLAGS] DWORD display=DWORD
  MS_CTS_ON  0x0010
  MS_DSR_ON  0x0020
  MS_RING_ON 0x0040
  MS_RLSD_ON 0x0080

pointer [MODEM_STATUS_FLAGS*] [MODEM_STATUS_FLAGS] display=LPDWORD

flag [CTM_FLAGS] DWORD display=DWORD
  CTMF_INCLUDE_APPCONTAINER 0x00000001

flag [LoadStringByReference_Flags] DWORD display=DWORD
  MUI_FORMAT_REG_COMPAT  0x0001
  MUI_FORMAT_INF_COMPAT  0x0002
  MUI_VERIFY_FILE_EXISTS 0x0004
  MUI_SKIP_STRING_CACHE  0x0008
  MUI_IMMUTABLE_LOOKUP   0x0010

enum FIRMWARE_TYPE UINT
  FirmwareTypeUnknownParam 0
  FirmwareTypeBiosParam    1
  FirmwareTypeUefiParam    2

pointer PFIRMWARE_TYPE FIRMWARE_TYPE

flag [COPY_FILE_FLAGS] DWORD display=DWORD
  COPY_FILE_FAIL_IF_EXISTS              0x00000001
  COPY_FILE_RESTARTABLE                 0x00000002
  COPY_FILE_OPEN_SOURCE_FOR_WRITE       0x00000004
  COPY_FILE_ALLOW_DECRYPTED_DESTINATION 0x00000008
  COPY_FILE_COPY_SYMLINK                0x00000800
  COPY_FILE_NO_BUFFERING                0x00001000

flag [COPY_FILE2_FLAGS] [COPY_FILE_FLAGS] display=DWORD
  COPY_FILE_REQUEST_SECURITY_PRIVILEGES 0x00002000
  COPY_FILE_RESUME_FROM_PAUSE           0x00004000
  COPY_FILE_NO_OFFLOAD                  0x00040000

struct COPYFILE2_EXTENDED_PARAMETERS
  dwSize DWORD
  dwCopyFlags [COPY_FILE2_FLAGS]
  pfCancel BOOL*
  pProgressRoutine PCOPYFILE2_PROGRESS_ROUTINE
  pvCallbackContext PVOID

pointer COPYFILE2_EXTENDED_PARAMETERS* COPYFILE2_EXTENDED_PARAMETERS

flag [SECURITY_QOS_FLAGS] DWORD display=DWORD
  SECURITY_ANONYMOUS        0
  SECURITY_IDENTIFICATION   0x00010000
  SECURITY_IMPERSONATION    0x00020000
  SECURITY_DELEGATION       0x00030000
  SECURITY_CONTEXT_TRACKING 0x00040000
  SECURITY_EFFECTIVE_ONLY   0x00080000
  SECURITY_SQOS_PRESENT     0x00100000

struct CREATEFILE2_EXTENDED_PARAMETERS
  dwSize DWORD
  dwFileAttributes [FileAttributes]
  dwFileFlags [FILE_FLAGS]
  dwSecurityQosFlags [SECURITY_QOS_FLAGS]
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  hTemplateFile HANDLE

pointer LPCREATEFILE2_EXTENDED_PARAMETERS CREATEFILE2_EXTENDED_PARAMETERS

struct WIN32_MEMORY_RANGE_ENTRY
  VirtualAddress PVOID
  NumberOfBytes SIZE_T

pointer PWIN32_MEMORY_RANGE_ENTRY WIN32_MEMORY_RANGE_ENTRY

enum PROCESS_MITIGATION_POLICY UINT
  ProcessDEPPolicyParam                   0
  ProcessASLRPolicyParam                  1
  ProcessReserved1MitigationPolicyParam   2
  ProcessStrictHandleCheckPolicyParam     3
  ProcessSystemCallDisablePolicyParam     4
  ProcessMitigationOptionsMaskParam       5
  ProcessExtensionPointDisablePolicyParam 6

struct RTL_BARRIER
  Reserved1 DWORD
  Reserved2 DWORD
  Reserved3 "ULONG_PTR [2]"
  Reserved4 DWORD
  Reserved5 DWORD

alias SYNCHRONIZATION_BARRIER RTL_BARRIER

pointer LPSYNCHRONIZATION_BARRIER SYNCHRONIZATION_BARRIER

enum THREAD_INFORMATION_CLASS UINT
  ThreadMemoryPriority      0
  ThreadAbsoluteCpuPriority 1

enum PROCESS_INFORMATION_CLASS UINT
  ProcessMemoryPriority 0

enum [CLAIM_SECURITY_ATTRIBUTE_TYPE] WORD display=WORD
  CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID      0x00
  CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64        0x01
  CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64       0x02
  CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING       0x03
  CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN         0x04
  CLAIM_SECURITY_ATTRIBUTE_TYPE_SID          0x05
  CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN      0x06
  CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING 0x10

flag [CLAIM_SECURITY_ATTRIBUTE_FLAGS] DWORD display=DWORD
  CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE      0x0001
  CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE 0x0002
  CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY    0x0004
  CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT  0x0008
  CLAIM_SECURITY_ATTRIBUTE_DISABLED             0x0010
  CLAIM_SECURITY_ATTRIBUTE_MANDATORY            0x0020

struct CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
  Version DWORD64
  Name PWSTR

pointer PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE

struct CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
  pValue PVOID length=ValueLength
  ValueLength DWORD

pointer PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE

union [CLAIM_SECURITY_ATTRIBUTE_V1_u] display=union
  pInt64 PLONG64
  pUint64 PDWORD64
  ppString PWSTR*
  pFqbn PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
  pOctetString PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE

struct CLAIM_SECURITY_ATTRIBUTE_V1
  Name PWSTR
  ValueType [CLAIM_SECURITY_ATTRIBUTE_TYPE]
  Reserved WORD
  Flags [CLAIM_SECURITY_ATTRIBUTE_FLAGS]
  ValueCount DWORD
  Values [CLAIM_SECURITY_ATTRIBUTE_V1_u]

pointer PCLAIM_SECURITY_ATTRIBUTE_V1 CLAIM_SECURITY_ATTRIBUTE_V1

union [CLAIM_SECURITY_ATTRIBUTES_INFORMATION_u] display=union
  pAttributeV1 PCLAIM_SECURITY_ATTRIBUTE_V1

struct CLAIM_SECURITY_ATTRIBUTES_INFORMATION
  Version WORD
  Reserved WORD
  AttributeCount DWORD
  Attribute [CLAIM_SECURITY_ATTRIBUTES_INFORMATION_u]

pointer PCLAIM_SECURITY_ATTRIBUTES_INFORMATION CLAIM_SECURITY_ATTRIBUTES_INFORMATION

flag [READ_THREAD_PROFILING_FLAGS] DWORD display=DWORD
  READ_THREAD_PROFILING_FLAG_DISPATCHING       0x00000001
  READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS 0x00000002

flag [THREAD_PROFILING_FLAGS] DWORD display=DWORD
  THREAD_PROFILING_FLAG_DISPATCH 0x00000001

flag [WER_FAULT_REPORTING_FLAGS] DWORD display=DWORD
  WER_FAULT_REPORTING_FLAG_NOHEAP                    1
  WER_FAULT_REPORTING_FLAG_QUEUE                     2
  WER_FAULT_REPORTING_FLAG_DISABLE_THREAD_SUSPENSION 4
  WER_FAULT_REPORTING_FLAG_QUEUE_UPLOAD              8
  WER_FAULT_REPORTING_ALWAYS_SHOW_UI                 16
  WER_FAULT_REPORTING_NO_UI                          32
  WER_FAULT_REPORTING_FLAG_NO_HEAP_ON_QUEUE          64

pointer [WER_FAULT_REPORTING_FLAGS*] [WER_FAULT_REPORTING_FLAGS] display=PDWORD

flag [FAIL_FAST_EXCEPTION_FLAGS] DWORD display=DWORD
  FAIL_FAST_GENERATE_EXCEPTION_ADDRESS 0x1
  FAIL_FAST_NO_HARD_ERROR_DLG          0x2

flag [CREATE_WAITABLE_TIMER_FLAGS] DWORD display=DWORD
  CREATE_WAITABLE_TIMER_MANUAL_RESET 0x00000001

flag [SYNCHRONIZATION_BARRIER_FLAGS] DWORD display=DWORD
  SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY  0x01
  SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY 0x02
  SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE  0x04

flag [CREATE_MUTEX_FLAGS] DWORD display=DWORD
  CREATE_MUTEX_INITIAL_OWNER 0x00000001

flag [INIT_ONCE_FLAGS] DWORD display=DWORD
  INIT_ONCE_CHECK_ONLY  0x00000001
  INIT_ONCE_ASYNC       0x00000002
  INIT_ONCE_INIT_FAILED 0x00000004

flag [CREATE_EVENT_FLAGS] DWORD display=DWORD
  CREATE_EVENT_MANUAL_RESET 0x00000001
  CREATE_EVENT_INITIAL_SET  0x00000002

flag [CRITICAL_SECTION_FLAGS] DWORD display=DWORD
  CRITICAL_SECTION_NO_DEBUG_INFO 0x01000000

flag [CONDITION_VARIABLE_FLAGS] ULONG display=ULONG
  CONDITION_VARIABLE_LOCKMODE_SHARED 0x1

flag [VERIFY_SCRIPTS_FLAGS] DWORD display=DWORD
  VS_ALLOW_LATIN 0x0001

flag [LOCALE_NAME_FLAGS] DWORD display=DWORD
  LOCALE_ALLOW_NEUTRAL_NAMES 0x08000000

flag [GET_STRING_SCRIPTS_FLAGS] DWORD display=DWORD
  GSS_ALLOW_INHERITED_COMMON 0x0001

flag [NLS_FIND_FLAGS] DWORD display=DWORD
  FIND_STARTSWITH 0x00100000
  FIND_ENDSWITH   0x00200000
  FIND_FROMSTART  0x00400000
  FIND_FROMEND    0x00800000

flag [NLS_STRING_FIND_FLAGS] [NLS_FIND_FLAGS] display=DWORD
  NORM_IGNORECASE            0x00000001
  NORM_IGNORENONSPACE        0x00000002
  NORM_IGNORESYMBOLS         0x00000004
  LINGUISTIC_IGNORECASE      0x00000010
  LINGUISTIC_IGNOREDIACRITIC 0x00000020
  NORM_IGNOREKANATYPE        0x00010000
  NORM_IGNOREWIDTH           0x00020000
  NORM_LINGUISTIC_CASING     0x08000000

enum [CONSOLE_DISPLAY_MODE] DWORD display=DWORD
  CONSOLE_FULLSCREEN_MODE 1
  CONSOLE_WINDOWED_MODE   2

enum [CONSOLE_FULLSCREEN_MODE] DWORD display=DWORD
  CONSOLE_FULLSCREEN          1
  CONSOLE_FULLSCREEN_HARDWARE 2

pointer [CONSOLE_FULLSCREEN_MODE*] [CONSOLE_FULLSCREEN_MODE] display=LPDWORD

flag [CONSOLE_TEXTMODE_FLAGS] DWORD display=DWORD
  CONSOLE_TEXTMODE_BUFFER 1

flag [MUI_LANGUAGE_FORMAT_FLAGS] DWORD display=DWORD
  MUI_LANGUAGE_ID   0x4
  MUI_LANGUAGE_NAME 0x8

flag [EnumUILanguages_FLAGS] DWORD display=DWORD
  MUI_LANGUAGE_ID   0x4
  MUI_LANGUAGE_NAME 0x8

flag [GetFileMUIInfo_FLAGS] DWORD display=DWORD
  MUI_QUERY_TYPE           0x001
  MUI_QUERY_CHECKSUM       0x002
  MUI_QUERY_LANGUAGE_NAME  0x004
  MUI_QUERY_RESOURCE_TYPES 0x008

flag [GetFileMUIPath_FLAGS] DWORD display=DWORD
  MUI_LANGUAGE_ID                 0x4
  MUI_LANGUAGE_NAME               0x8
  MUI_USER_PREFERRED_UI_LANGUAGES 0x10
  MUI_USE_INSTALLED_LANGUAGES     0x20
  MUI_USE_SEARCH_ALL_LANGUAGES    0x40
  MUI_LANG_NEUTRAL_PE_FILE        0x100
  MUI_NON_LANG_NEUTRAL_FILE       0x200

flag [GetSystemPreferredUILanguages_FLAGS] DWORD display=DWORD
  MUI_LANGUAGE_ID               0x4
  MUI_LANGUAGE_NAME             0x8
  MUI_MACHINE_LANGUAGE_SETTINGS 0x400

flag [GetThreadPreferredUILanguages_FLAGS] DWORD display=DWORD
  MUI_LANGUAGE_ID           0x4
  MUI_LANGUAGE_NAME         0x8
  MUI_MERGE_SYSTEM_FALLBACK 0x10
  MUI_MERGE_USER_FALLBACK   0x20
  MUI_UI_FALLBACK           0x30
  MUI_THREAD_LANGUAGES      0x40

flag [MUI_LANGUAGE_ATTRIBUTES] DWORD display=DWORD
  MUI_FULL_LANGUAGE      0x01
  MUI_PARTIAL_LANGUAGE   0x02
  MUI_LIP_LANGUAGE       0x04
  MUI_LANGUAGE_INSTALLED 0x20
  MUI_LANGUAGE_LICENSED  0x40

pointer [MUI_LANGUAGE_ATTRIBUTES*] [MUI_LANGUAGE_ATTRIBUTES] display=PDWORD

flag [SetThreadPreferredUILanguages_FLAGS] DWORD display=DWORD
  MUI_RESET_FILTERS         0x001
  MUI_LANGUAGE_ID           0x4
  MUI_LANGUAGE_NAME         0x8
  MUI_CONSOLE_FILTER        0x100
  MUI_COMPLEX_SCRIPT_FILTER 0x200

enum [MUI_FILETYPE] DWORD display=DWORD
  MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL  0x001
  MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN 0x002
  MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI  0x004

struct FILEMUIINFO
  dwSize DWORD
  dwVersion DWORD
  dwFileType [MUI_FILETYPE]
  pChecksum "BYTE [16]"
  pServiceChecksum "BYTE [16]"
  dwLanguageNameOffset DWORD
  dwTypeIDMainSize DWORD
  dwTypeIDMainOffset DWORD
  dwTypeNameMainOffset DWORD
  dwTypeIDMUISize DWORD
  dwTypeIDMUIOffset DWORD
  dwTypeNameMUIOffset DWORD
  abBuffer "BYTE [8]"

pointer PFILEMUIINFO FILEMUIINFO

struct HEAP_SUMMARY
  cb DWORD
  cbAllocated SIZE_T
  cbCommitted SIZE_T
  cbReserved SIZE_T
  cbMaxReserve SIZE_T

pointer LPHEAP_SUMMARY HEAP_SUMMARY

struct UMS_SYSTEM_THREAD_INFORMATION
  UmsVersion ULONG
  ThreadUmsFlags ULONG

pointer PUMS_SYSTEM_THREAD_INFORMATION UMS_SYSTEM_THREAD_INFORMATION

flag [XSTATE_FEATURE] DWORD display=DWORD
  XSTATE_LEGACY_FLOATING_POINT 0
  XSTATE_LEGACY_SSE            1
  XSTATE_AVX                   2

struct IMAGE_DELAYLOAD_DESCRIPTOR
  Attributes DWORD
  DllNameRVA DWORD
  ModuleHandleRVA DWORD
  ImportAddressTableRVA DWORD
  ImportNameTableRVA DWORD
  BoundImportAddressTableRVA DWORD
  UnloadInformationTableRVA DWORD
  TimeDateStamp DWORD

pointer PCIMAGE_DELAYLOAD_DESCRIPTOR IMAGE_DELAYLOAD_DESCRIPTOR

struct IMAGE_THUNK_DATA
  u1 [IMAGE_THUNK_DATA_u]

pointer PIMAGE_THUNK_DATA IMAGE_THUNK_DATA

func CheckRemoteDebuggerPresent
  BOOL
  hProcess [ProcessHandle]
  pbDebuggerPresent PBOOL

func ContinueDebugEvent
  BOOL
  dwProcessId DWORD
  dwThreadId DWORD
  dwContinueStatus [ContinueStatusFlag]

func CopyExtendedContext
  BOOL
  Destination PCONTEXT_EX
  ContextFlags DWORD
  Source PCONTEXT_EX

func DebugActiveProcess
  BOOL
  dwProcessId DWORD

func DebugActiveProcessStop
  BOOL
  dwProcessId DWORD

func DebugBreak
  VOID

func DebugBreakProcess
  BOOL
  Process HANDLE

func DebugSetProcessKillOnExit
  BOOL
  KillOnExit BOOL

func FatalExit
  VOID
  ExitCode int

func FlushInstructionCache
  BOOL
  hProcess [ProcessHandle]
  lpBaseAddress LPCVOID length=dwSize
  dwSize SIZE_T

func GetEnabledExtendedFeatures
  DWORD64
  FeatureMask DWORD64

func GetExtendedContextLength
  BOOL
  ContextFlags DWORD
  ContextLength PDWORD

func GetExtendedFeaturesMask
  DWORD64
  ContextEx PCONTEXT_EX

func GetThreadContext
  BOOL
  hThread [ThreadHandle]
  lpContext LPCONTEXT

func GetThreadSelectorEntry
  BOOL
  hThread [ThreadHandle]
  dwSelector DWORD
  lpSelectorEntry LPLDT_ENTRY

func InitializeExtendedContext
  BOOL
  Context PVOID
  ContextFlags DWORD
  ContextEx PCONTEXT_EX*

func IsDebuggerPresent
  BOOL

func LocateExtendedFeature
  PVOID
  ContextEx PCONTEXT_EX
  FeatureId DWORD
  Length PDWORD

func LocateLegacyContext
  PCONTEXT
  ContextEx PCONTEXT_EX
  Length PDWORD

func OutputDebugString bothCharset
  void
  lpOutputString LPCTSTR

func ReadProcessMemory
  BOOL
  hProcess [ProcessHandle]
  lpBaseAddress LPCVOID
  lpBuffer LPVOID postLength=nSize
  nSize SIZE_T
  lpNumberOfBytesRead SIZE_T*

func SetExtendedFeaturesMask
  VOID
  ContextEx PCONTEXT_EX
  FeatureMask DWORD64

func SetThreadContext
  BOOL
  hThread [ThreadHandle]
  lpContext "const CONTEXT*"

func WaitForDebugEvent
  BOOL
  lpDebugEvent LPDEBUG_EVENT
  dwMilliseconds [WaitTimeout]

func Wow64GetThreadContext
  BOOL
  hThread [ThreadHandle]
  lpContext PWOW64_CONTEXT

func Wow64GetThreadSelectorEntry
  BOOL
  hThread [ThreadHandle]
  dwSelector DWORD
  lpSelectorEntry PWOW64_LDT_ENTRY

func Wow64SetThreadContext
  BOOL
  hThread [ThreadHandle]
  lpContext "CONST WOW64_CONTEXT*"

func WriteProcessMemory
  BOOL
  hProcess [ProcessHandle]
  lpBaseAddress LPVOID
  lpBuffer LPCVOID length=nSize
  nSize SIZE_T
  lpNumberOfBytesWritten SIZE_T*

func AddDllDirectory
  success NotEqual=0
  DLL_DIRECTORY_COOKIE
  NewDirectory PCWSTR

func DisableThreadLibraryCalls
  BOOL
  hModule HMODULE

func FreeLibrary
  BOOL
  hModule HMODULE

func FreeLibraryAndExitThread
  VOID
  hModule HMODULE
  dwExitCode DWORD

func GetDllDirectory bothCharset
  success NotEqual=0
  DWORD
  nBufferLength DWORD
  lpBuffer LPTSTR

func GetModuleFileName bothCharset
  success NotEqual=0
  DWORD
  hModule HMODULE
  lpFilename LPTSTR outputOnly
  nSize DWORD

func GetModuleHandle bothCharset
  success NotEqual=0
  HMODULE
  lpModuleName LPCTSTR

func GetModuleHandleEx bothCharset
  BOOL
  dwFlags [GetModuleHandleExFlags]
  lpModuleName LPCTSTR
  phModule HMODULE*

func GetProcAddress
  success NotEqual=0
  FARPROC
  hModule HMODULE
  lpProcName LPCSTR

func LoadLibrary bothCharset
  success NotEqual=0
  HMODULE
  lpFileName LPCTSTR

func LoadLibraryEx bothCharset
  success NotEqual=0
  HMODULE
  lpFileName LPCTSTR
  hFile HANDLE
  dwFlags [LoadLibraryExFlags]

func LoadModule
  success Greater=31
  DWORD
  lpModuleName LPCSTR
  lpParameterBlock LPVOID

func LoadPackagedLibrary
  success NotEqual=0
  HMODULE
  lpwLibFileName LPCWSTR
  Reserved DWORD

func RemoveDllDirectory
  BOOL
  Cookie DLL_DIRECTORY_COOKIE

func SetDefaultDllDirectories
  BOOL
  DirectoryFlags [LOAD_LIBRARY_SEARCH_FLAGS]

func SetDllDirectory bothCharset
  BOOL
  lpPathName LPCTSTR

func CreateToolhelp32Snapshot
  [FILE_HANDLE]
  dwFlags [CreateToolhelp32SnapshotFlags]
  th32ProcessID DWORD

func Heap32First
  BOOL
  lphe LPHEAPENTRY32
  th32ProcessID DWORD
  th32HeapID ULONG_PTR

func Heap32ListFirst
  BOOL
  hSnapshot HANDLE
  lphl LPHEAPLIST32

func Heap32ListNext
  BOOL
  hSnapshot HANDLE
  lphl LPHEAPLIST32

func Heap32Next
  BOOL
  lphe LPHEAPENTRY32

func Module32First bothCharset nameA=Module32First
  BOOL
  hSnapshot HANDLE
  lpme LPMODULEENTRY32

func Module32Next bothCharset nameA=Module32Next
  BOOL
  hSnapshot HANDLE
  lpme LPMODULEENTRY32

func Process32First bothCharset nameA=Process32First
  BOOL
  hSnapshot HANDLE
  lppe LPPROCESSENTRY32

func Process32Next bothCharset nameA=Process32Next
  BOOL
  hSnapshot HANDLE
  lppe LPPROCESSENTRY32

func Thread32First
  BOOL
  hSnapshot HANDLE
  lpte LPTHREADENTRY32

func Thread32Next
  BOOL
  hSnapshot HANDLE
  lpte LPTHREADENTRY32

func Toolhelp32ReadProcessMemory
  BOOL
  th32ProcessID DWORD
  lpBaseAddress LPCVOID
  lpBuffer LPVOID postLength=cbRead
  cbRead SIZE_T
  lpNumberOfBytesRead SIZE_T

func ApplicationRecoveryFinished
  VOID
  bSuccess BOOL

func ApplicationRecoveryInProgress
  HRESULT
  pbCanceled PBOOL

func GetApplicationRecoveryCallback
  HRESULT
  hProcess [ProcessHandle]
  pRecoveryCallback APPLICATION_RECOVERY_CALLBACK*
  ppvParameter PVOID*
  dwPingInterval DWORD
  dwFlags DWORD

func GetApplicationRestartSettings
  HRESULT
  hProcess [ProcessHandle]
  pwzCommandline PWSTR
  pcchSize PDWORD
  pdwFlags PDWORD

func RegisterApplicationRecoveryCallback
  HRESULT
  pRecoveryCallback APPLICATION_RECOVERY_CALLBACK
  pvParameter PVOID
  dwPingInterval DWORD
  dwFlags [ApplicationRestartFlags]

func RegisterApplicationRestart
  HRESULT
  pwzCommandline PCWSTR
  dwFlags [ApplicationRestartFlags]

func UnregisterApplicationRecoveryCallback
  HRESULT

func UnregisterApplicationRestart
  HRESULT

func GetPrivateProfileInt bothCharset
  UINT
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  nDefault INT
  lpFileName LPCTSTR

func GetPrivateProfileSection bothCharset
  DWORD
  lpAppName LPCTSTR
  lpReturnedString LPTSTR outputOnly
  nSize DWORD
  lpFileName LPCTSTR

func GetPrivateProfileSectionNames bothCharset
  DWORD
  lpszReturnBuffer LPTSTR
  nSize DWORD
  lpFileName LPCTSTR

func GetPrivateProfileString bothCharset
  DWORD
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  lpDefault LPCTSTR
  lpReturnedString LPTSTR outputOnly
  nSize DWORD
  lpFileName LPCTSTR

func GetPrivateProfileStruct bothCharset
  BOOL
  lpszSection LPCTSTR
  lpszKey LPCTSTR
  lpStruct LPVOID
  uSizeStruct UINT
  szFile LPCTSTR

func GetProfileInt bothCharset
  UINT
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  nDefault INT

func GetProfileSection bothCharset
  DWORD
  lpAppName LPCTSTR
  lpReturnedString LPTSTR outputOnly
  nSize DWORD

func GetProfileString bothCharset
  DWORD
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  lpDefault LPCTSTR
  lpReturnedString LPTSTR outputOnly
  nSize DWORD

func WritePrivateProfileSection bothCharset
  BOOL
  lpAppName LPCTSTR
  lpString LPCTSTR
  lpFileName LPCTSTR

func WritePrivateProfileString bothCharset
  BOOL
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  lpString LPCTSTR
  lpFileName LPCTSTR

func WritePrivateProfileStruct bothCharset
  BOOL
  lpszSection LPCTSTR
  lpszKey LPCTSTR
  lpStruct LPVOID
  uSizeStruct UINT
  szFile LPCTSTR

func WriteProfileSection bothCharset
  BOOL
  lpAppName LPCTSTR
  lpString LPCTSTR

func WriteProfileString bothCharset
  BOOL
  lpAppName LPCTSTR
  lpKeyName LPCTSTR
  lpString LPCTSTR

func _lopen
  success NotEqual=-1
  HFILE
  lpPathName LPCSTR
  iReadWrite int

func _lcreat
  success NotEqual=-1
  HFILE
  lpPathName LPCSTR
  iAttribute [lcreatAttribute]

func _lread
  success NotEqual=-1
  UINT
  hFile HFILE
  lpBuffer LPVOID postLength=Return
  uBytes UINT

func _lwrite
  success NotEqual=-1
  UINT
  hFile HFILE
  lpBuffer LPVOID length=uBytes
  uBytes UINT

func _hread
  success NotEqual=-1
  long
  hFile HFILE
  lpBuffer LPVOID postLength=Return
  lBytes LONG

func _hwrite
  success NotEqual=-1
  long
  hFile HFILE
  lpBuffer LPVOID length=lBytes
  lBytes LONG

func _lclose
  success NotEqual=-1
  HFILE
  hFile HFILE

func _llseek
  success NotEqual=-1
  LONG
  hFile HFILE
  lOffset LONG
  iOrigin [SEEK_TYPE]

func AreFileApisANSI
  BOOL

func CheckNameLegalDOS8Dot3 bothCharset
  BOOL
  lpName LPCTSTR
  lpOemName LPSTR
  OemNameSize DWORD
  pbNameContainsSpaces PBOOL
  pbNameLegal PBOOL

func CopyFile bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  bFailIfExists BOOL

func CopyFile2
  HRESULT
  pwszExistingFileName PCWSTR
  pwszNewFileName PCWSTR
  pExtendedParameters COPYFILE2_EXTENDED_PARAMETERS*

func CopyFileEx bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  lpProgressRoutine LPPROGRESS_ROUTINE
  lpData LPVOID
  pbCancel LPBOOL
  dwCopyFlags [COPY_FILE_FLAGS]

func CopyFileTransacted bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  lpProgressRoutine LPPROGRESS_ROUTINE
  lpData LPVOID
  pbCancel LPBOOL
  dwCopyFlags [COPY_FILE_FLAGS]
  hTransaction HANDLE

func CreateFile bothCharset
  [FILE_HANDLE]
  lpFileName LPCTSTR
  dwDesiredAccess [FILE_ACCESS_MASK]
  dwShareMode [FILE_SHARE_MODE]
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  dwCreationDisposition [CreationDisposition]
  dwFlagsAndAttributes [FlagsAndAttributes]
  hTemplateFile HANDLE

func CreateFile2
  success NotEqual=0
  HANDLE
  lpFileName LPCWSTR
  dwDesiredAccess [FILE_ACCESS_MASK]
  dwShareMode [FILE_SHARE_MODE]
  dwCreationDisposition [CreationDisposition]
  pCreateExParams LPCREATEFILE2_EXTENDED_PARAMETERS

func CreateFileTransacted bothCharset
  [FILE_HANDLE]
  lpFileName LPCTSTR
  dwDesiredAccess [FILE_ACCESS_MASK]
  dwShareMode [FILE_SHARE_MODE]
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  dwCreationDisposition [CreationDisposition]
  dwFlagsAndAttributes [FlagsAndAttributes]
  hTemplateFile HANDLE
  hTransaction HANDLE
  pusMiniVersion PUSHORT
  pExtendedParameter PVOID

func CreateHardLink bothCharset
  BOOL
  lpFileName LPCTSTR
  lpExistingFileName LPCTSTR
  lpSecurityAttributes LPSECURITY_ATTRIBUTES

func CreateHardLinkTransacted bothCharset
  BOOL
  lpFileName LPCTSTR
  lpExistingFileName LPCTSTR
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  hTransaction HANDLE

func CreateSymbolicLink bothCharset
  BOOLEAN
  lpSymlinkFileName LPTSTR
  lpTargetFileName LPTSTR
  dwFlags [CreateSymbolicLinkFlags]

func CreateSymbolicLinkTransacted bothCharset
  BOOLEAN
  lpSymlinkFileName LPTSTR
  lpTargetFileName LPTSTR
  dwFlags [CreateSymbolicLinkFlags]
  hTransaction HANDLE

func DeleteFile bothCharset
  BOOL
  lpFileName LPCTSTR

func DeleteFileTransacted bothCharset
  BOOL
  lpFileName LPCTSTR
  hTransaction HANDLE

func FindClose
  BOOL
  hFindFile HANDLE

func FindFirstFile bothCharset
  [FILE_HANDLE]
  lpFileName LPCTSTR
  lpFindFileData LPWIN32_FIND_DATA

func FindFirstFileEx bothCharset
  [FILE_HANDLE]
  lpFileName LPCTSTR
  fInfoLevelId FINDEX_INFO_LEVELS
  lpFindFileData LPVOID
  fSearchOp FINDEX_SEARCH_OPS
  lpSearchFilter LPVOID
  dwAdditionalFlags [FindFirstFileExFlags]

func FindFirstFileNameTransactedW
  [FILE_HANDLE]
  lpFileName LPCWSTR
  dwFlags DWORD
  StringLength LPDWORD
  LinkName PWCHAR
  hTransaction HANDLE

func FindFirstFileNameW
  [FILE_HANDLE]
  lpFileName LPCWSTR
  dwFlags DWORD
  StringLength LPDWORD
  LinkName PWCHAR

func FindFirstFileTransacted bothCharset
  [FILE_HANDLE]
  lpFileName LPCTSTR
  fInfoLevelId FINDEX_INFO_LEVELS
  lpFindFileData LPVOID
  fSearchOp FINDEX_SEARCH_OPS
  lpSearchFilter LPVOID
  dwAdditionalFlags [FindFirstFileExFlags]
  hTransaction HANDLE

func FindFirstStreamTransactedW
  [FILE_HANDLE]
  lpFileName LPCWSTR
  InfoLevel STREAM_INFO_LEVELS
  lpFindStreamData LPVOID
  dwFlags DWORD
  hTransaction HANDLE

func FindFirstStreamW
  [FILE_HANDLE]
  lpFileName LPCWSTR
  InfoLevel STREAM_INFO_LEVELS
  lpFindStreamData LPVOID
  dwFlags DWORD

func FindNextFile bothCharset
  BOOL
  hFindFile HANDLE
  lpFindFileData LPWIN32_FIND_DATA

func FindNextFileNameW
  BOOL
  hFindStream HANDLE
  StringLength LPDWORD
  LinkName PWCHAR

func FindNextStreamW
  BOOL
  hFindStream HANDLE
  lpFindStreamData LPVOID

func GetBinaryType bothCharset
  BOOL
  lpApplicationName LPCTSTR
  lpBinaryType [GetBinaryTypeResult*]

func GetCompressedFileSize bothCharset
  DWORD
  lpFileName LPCTSTR
  lpFileSizeHigh LPDWORD

func GetCompressedFileSizeTransacted bothCharset
  DWORD
  lpFileName LPCTSTR
  lpFileSizeHigh LPDWORD
  hTransaction HANDLE

func GetFileAttributes bothCharset
  success NotEqual=-1
  [FileAttributes]
  lpFileName LPCTSTR

func GetFileAttributesEx bothCharset
  BOOL
  lpFileName LPCTSTR
  fInfoLevelId GET_FILEEX_INFO_LEVELS
  lpFileInformation LPVOID

func GetFileAttributesTransacted bothCharset
  BOOL
  lpFileName LPCTSTR
  fInfoLevelId GET_FILEEX_INFO_LEVELS
  lpFileInformation LPVOID
  hTransaction HANDLE

func GetFileBandwidthReservation
  BOOL
  hFile HANDLE
  lpPeriodMilliseconds LPDWORD
  lpBytesPerPeriod LPDWORD
  pDiscardable LPBOOL
  lpTransferSize LPDWORD
  lpNumOutstandingRequests LPDWORD

func GetFileInformationByHandle
  BOOL
  hFile HANDLE
  lpFileInformation LPBY_HANDLE_FILE_INFORMATION

func GetFileInformationByHandleEx
  BOOL
  hFile HANDLE
  FileInformationClass FILE_INFO_BY_HANDLE_CLASS
  lpFileInformation LPVOID postLength=dwBufferSize
  dwBufferSize DWORD

func GetFileSize
  success NotEqual=-1
  DWORD
  hFile HANDLE
  lpFileSizeHigh LPDWORD

func GetFileSizeEx
  BOOL
  hFile HANDLE
  lpFileSize PLARGE_INTEGER

func GetFileType
  [FileType]
  hFile HANDLE

func GetFinalPathNameByHandle bothCharset
  success NotEqual=0
  DWORD
  hFile HANDLE
  lpszFilePath LPTSTR
  cchFilePath DWORD
  dwFlags [GetFinalPathNameByHandleFlags]

func GetFullPathName bothCharset
  success NotEqual=0
  DWORD
  lpFileName LPCTSTR
  nBufferLength DWORD
  lpBuffer LPTSTR outputOnly
  lpFilePart LPTSTR* outputOnly

func GetFullPathNameTransacted bothCharset
  success NotEqual=0
  DWORD
  lpFileName LPCTSTR
  nBufferLength DWORD
  lpBuffer LPTSTR
  lpFilePart LPTSTR*
  hTransaction HANDLE

func GetLongPathName bothCharset
  success NotEqual=0
  DWORD
  lpszShortPath LPCTSTR
  lpszLongPath LPTSTR outputOnly
  cchBuffer DWORD

func GetLongPathNameTransacted bothCharset
  success NotEqual=0
  DWORD
  lpszShortPath LPCTSTR
  lpszLongPath LPTSTR outputOnly
  cchBuffer DWORD
  hTransaction HANDLE

func GetShortPathName bothCharset
  success NotEqual=0
  DWORD
  lpszLongPath LPCTSTR
  lpszShortPath LPTSTR outputOnly
  cchBuffer DWORD

func GetTempFileName bothCharset
  success NotEqual=0
  UINT
  lpPathName LPCTSTR
  lpPrefixString LPCTSTR
  uUnique UINT
  lpTempFileName LPTSTR outputOnly

func GetTempPath bothCharset
  success NotEqual=0
  DWORD
  nBufferLength DWORD
  lpBuffer LPTSTR outputOnly

func MoveFile bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR

func MoveFileEx bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  dwFlags [MoveFileFlags]

func MoveFileTransacted bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  lpProgressRoutine LPPROGRESS_ROUTINE
  lpData LPVOID
  dwFlags DWORD
  hTransaction HANDLE

func MoveFileWithProgress bothCharset
  BOOL
  lpExistingFileName LPCTSTR
  lpNewFileName LPCTSTR
  lpProgressRoutine LPPROGRESS_ROUTINE
  lpData LPVOID
  dwFlags DWORD

func OpenFile
  success NotEqual=-1
  HFILE
  lpFileName LPCSTR
  lpReOpenBuff LPOFSTRUCT
  uStyle [OpenFileFlags]

func OpenFileById
  [FILE_HANDLE]
  hFile HANDLE
  lpFileID LPFILE_ID_DESCRIPTOR
  dwDesiredAccess [FILE_ACCESS_MASK]
  dwShareMode [FILE_SHARE_MODE]
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  dwFlags [FlagsAndAttributes]

func ReOpenFile
  [FILE_HANDLE]
  hOriginalFile HANDLE
  dwDesiredAccess [FILE_ACCESS_MASK]
  dwShareMode [FILE_SHARE_MODE]
  dwFlags [FlagsAndAttributes]

func ReplaceFile bothCharset
  BOOL
  lpReplacedFileName LPCTSTR
  lpReplacementFileName LPCTSTR
  lpBackupFileName LPCTSTR
  dwReplaceFlags DWORD
  lpExclude LPVOID
  lpReserved LPVOID

func SearchPath bothCharset
  success NotEqual=0
  DWORD
  lpPath LPCTSTR
  lpFileName LPCTSTR
  lpExtension LPCTSTR
  nBufferLength DWORD
  lpBuffer LPTSTR outputOnly
  lpFilePart LPTSTR* outputOnly

func SetFileApisToANSI
  void

func SetFileApisToOEM
  void

func SetFileAttributes bothCharset
  BOOL
  lpFileName LPCTSTR
  dwFileAttributes [FileAttributes]

func SetFileAttributesTransacted bothCharset
  BOOL
  lpFileName LPCTSTR
  dwFileAttributes [FileAttributes]
  hTransaction HANDLE

func SetFileBandwidthReservation
  BOOL
  hFile HANDLE
  nPeriodMilliseconds DWORD
  nBytesPerPeriod DWORD
  bDiscardable BOOL
  lpTransferSize LPDWORD
  lpNumOutstandingRequests LPDWORD

func SetFileInformationByHandle
  BOOL
  hFile HANDLE
  FileInformationClass FILE_INFO_BY_HANDLE_CLASS
  lpFileInformation LPVOID length=dwBufferSize
  dwBufferSize DWORD

func SetFileShortName bothCharset
  BOOL
  hFile HANDLE
  lpShortName LPCTSTR

func SetFileValidData
  BOOL
  hFile HANDLE
  ValidDataLength LONGLONG

func SetSearchPathMode
  BOOL
  Flags DWORD

func CancelIo
  BOOL
  hFile HANDLE

func CancelIoEx
  BOOL
  hFile HANDLE
  lpOverlapped LPOVERLAPPED

func CancelSynchronousIo
  BOOL
  hThread [ThreadHandle]

func CreateIoCompletionPort
  success NotEqual=0
  HANDLE
  FileHandle HANDLE
  ExistingCompletionPort HANDLE
  CompletionKey ULONG_PTR
  NumberOfConcurrentThreads DWORD

func FlushFileBuffers
  BOOL
  hFile HANDLE

func GetQueuedCompletionStatus
  BOOL
  CompletionPort HANDLE
  lpNumberOfBytes LPDWORD
  lpCompletionKey PULONG_PTR
  lpOverlapped LPOVERLAPPED*
  dwMilliseconds [WaitTimeout]

func GetQueuedCompletionStatusEx
  BOOL
  CompletionPort HANDLE
  lpCompletionPortEntries LPOVERLAPPED_ENTRY
  ulCount ULONG
  ulNumEntriesRemoved PULONG
  dwMilliseconds [WaitTimeout]
  fAlertable BOOL

func LockFile
  BOOL
  hFile HANDLE
  dwFileOffsetLow DWORD
  dwFileOffsetHigh DWORD
  nNumberOfBytesToLockLow DWORD
  nNumberOfBytesToLockHigh DWORD

func LockFileEx
  BOOL
  hFile HANDLE
  dwFlags [LockFileFlags]
  dwReserved DWORD
  nNumberOfBytesToLockLow DWORD
  nNumberOfBytesToLockHigh DWORD
  lpOverlapped LPOVERLAPPED

func PostQueuedCompletionStatus
  BOOL
  CompletionPort HANDLE
  dwNumberOfBytesTransferred DWORD
  dwCompletionKey ULONG_PTR
  lpOverlapped LPOVERLAPPED

func ReadFile
  BOOL
  hFile HANDLE
  lpBuffer LPVOID postLength=lpNumberOfBytesRead
  nNumberOfBytesToRead DWORD
  lpNumberOfBytesRead LPDWORD
  lpOverlapped LPOVERLAPPED

func ReadFileEx
  BOOL
  hFile HANDLE
  lpBuffer LPVOID
  nNumberOfBytesToRead DWORD
  lpOverlapped LPOVERLAPPED
  lpCompletionRoutine LPOVERLAPPED_COMPLETION_ROUTINE

func ReadFileScatter
  BOOL
  hFile HANDLE
  aSegmentArray FILE_SEGMENT_ELEMENT[]
  nNumberOfBytesToRead DWORD
  lpReserved LPDWORD
  lpOverlapped LPOVERLAPPED

func SetEndOfFile
  BOOL
  hFile HANDLE

func SetFileCompletionNotificationModes
  BOOL
  FileHandle HANDLE
  Flags UCHAR

func SetFileIoOverlappedRange
  BOOL
  FileHandle HANDLE
  OverlappedRangeStart PUCHAR
  Length ULONG

func SetFilePointer
  success NotEqual=-1
  DWORD
  hFile HANDLE
  lDistanceToMove LONG
  lpDistanceToMoveHigh PLONG
  dwMoveMethod [MoveMethodEnum]

func SetFilePointerEx
  BOOL
  hFile HANDLE
  liDistanceToMove LARGE_INTEGER
  lpNewFilePointer PLARGE_INTEGER
  dwMoveMethod [MoveMethodEnum]

func UnlockFile
  BOOL
  hFile HANDLE
  dwFileOffsetLow DWORD
  dwFileOffsetHigh DWORD
  nNumberOfBytesToUnlockLow DWORD
  nNumberOfBytesToUnlockHigh DWORD

func UnlockFileEx
  BOOL
  hFile HANDLE
  dwReserved DWORD
  nNumberOfBytesToUnlockLow DWORD
  nNumberOfBytesToUnlockHigh DWORD
  lpOverlapped LPOVERLAPPED

func WriteFile
  BOOL
  hFile HANDLE
  lpBuffer LPCVOID length=nNumberOfBytesToWrite
  nNumberOfBytesToWrite DWORD
  lpNumberOfBytesWritten LPDWORD
  lpOverlapped LPOVERLAPPED

func WriteFileEx
  BOOL
  hFile HANDLE
  lpBuffer LPCVOID
  nNumberOfBytesToWrite DWORD
  lpOverlapped LPOVERLAPPED
  lpCompletionRoutine LPOVERLAPPED_COMPLETION_ROUTINE

func WriteFileGather
  BOOL
  hFile HANDLE
  aSegmentArray FILE_SEGMENT_ELEMENT[]
  nNumberOfBytesToWrite DWORD
  lpReserved LPDWORD
  lpOverlapped LPOVERLAPPED

func Wow64DisableWow64FsRedirection
  BOOL
  OldValue PVOID*

func Wow64EnableWow64FsRedirection
  BOOLEAN
  Wow64FsEnableRedirection BOOLEAN

func Wow64RevertWow64FsRedirection
  BOOL
  OldValue PVOID

func AddSecureMemoryCacheCallback
  BOOL
  pfnCallBack PSECURE_MEMORY_CACHE_CALLBACK

func CreateMemoryResourceNotification
  success NotEqual=0
  HANDLE
  NotificationType MEMORY_RESOURCE_NOTIFICATION_TYPE

func GetLargePageMinimum
  SIZE_T

func GetPhysicallyInstalledSystemMemory
  BOOL
  TotalMemoryInKilobytes PULONGLONG

func GetSystemFileCacheSize
  BOOL
  lpMinimumFileCacheSize PSIZE_T
  lpMaximumFileCacheSize PSIZE_T
  lpFlags PDWORD

func GetWriteWatch
  success Equal=0
  UINT
  dwFlags DWORD
  lpBaseAddress PVOID
  dwRegionSize SIZE_T
  lpAddresses PVOID* postCount=lpdwCount
  lpdwCount PULONG_PTR
  lpdwGranularity PULONG

func GlobalMemoryStatusEx
  BOOL
  lpBuffer LPMEMORYSTATUSEX

func QueryMemoryResourceNotification
  BOOL
  ResourceNotificationHandle HANDLE
  ResourceState PBOOL

func RemoveSecureMemoryCacheCallback
  BOOL
  pfnCallBack PSECURE_MEMORY_CACHE_CALLBACK

func ResetWriteWatch
  success Equal=0
  UINT
  lpBaseAddress LPVOID
  dwRegionSize SIZE_T

func SetSystemFileCacheSize
  BOOL
  MinimumFileCacheSize SIZE_T
  MaximumFileCacheSize SIZE_T
  Flags DWORD

func GetProcessDEPPolicy
  BOOL
  hProcess [ProcessHandle]
  lpFlags LPDWORD
  lpPermanent PBOOL

func GetSystemDEPPolicy
  DEP_SYSTEM_POLICY_TYPE

func SetProcessDEPPolicy
  BOOL
  dwFlags DWORD

func CreateFileMapping bothCharset
  success NotEqual=0
  HANDLE
  hFile [FILE_HANDLE]
  lpAttributes LPSECURITY_ATTRIBUTES
  flProtect [MemoryProtection]
  dwMaximumSizeHigh DWORD
  dwMaximumSizeLow DWORD
  lpName LPCTSTR

func CreateFileMappingFromApp
  success NotEqual=0
  HANDLE
  hFile HANDLE
  SecurityAttributes PSECURITY_ATTRIBUTES
  PageProtection ULONG
  MaximumSize ULONG64
  Name PCWSTR

func CreateFileMappingNuma bothCharset
  success NotEqual=0
  HANDLE
  hFile [FILE_HANDLE]
  lpFileMappingAttributes LPSECURITY_ATTRIBUTES
  flProtect [MemoryProtection]
  dwMaximumSizeHigh DWORD
  dwMaximumSizeLow DWORD
  lpName LPCTSTR
  nndPreferred DWORD

func FlushViewOfFile
  BOOL
  lpBaseAddress LPCVOID
  dwNumberOfBytesToFlush SIZE_T

func MapViewOfFile
  success NotEqual=0
  LPVOID
  hFileMappingObject HANDLE
  dwDesiredAccess [MapAccessFlags]
  dwFileOffsetHigh DWORD
  dwFileOffsetLow DWORD
  dwNumberOfBytesToMap SIZE_T

func MapViewOfFileEx
  success NotEqual=0
  LPVOID
  hFileMappingObject HANDLE
  dwDesiredAccess [MapAccessFlags]
  dwFileOffsetHigh DWORD
  dwFileOffsetLow DWORD
  dwNumberOfBytesToMap SIZE_T
  lpBaseAddress LPVOID

func MapViewOfFileExNuma
  success NotEqual=0
  LPVOID
  hFileMappingObject HANDLE
  dwDesiredAccess DWORD
  dwFileOffsetHigh DWORD
  dwFileOffsetLow DWORD
  dwNumberOfBytesToMap SIZE_T
  lpBaseAddress LPVOID
  nndPreferred DWORD

func MapViewOfFileFromApp
  success NotEqual=0
  PVOID
  hFileMappingObject HANDLE
  DesiredAccess ULONG
  FileOffset ULONG64
  NumberOfBytesToMap SIZE_T

func OpenFileMapping bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess [MapAccessFlags]
  bInheritHandle BOOL
  lpName LPCTSTR

func UnmapViewOfFile
  BOOL
  lpBaseAddress LPCVOID

func AllocateUserPhysicalPages
  BOOL
  hProcess [ProcessHandle]
  NumberOfPages PULONG_PTR
  UserPfnArray PULONG_PTR

func FreeUserPhysicalPages
  BOOL
  hProcess [ProcessHandle]
  NumberOfPages PULONG_PTR
  UserPfnArray PULONG_PTR

func MapUserPhysicalPages
  BOOL
  lpAddress PVOID
  NumberOfPages ULONG_PTR
  UserPfnArray PULONG_PTR

func MapUserPhysicalPagesScatter
  BOOL
  VirtualAddresses PVOID*
  NumberOfPages ULONG_PTR
  PageArray PULONG_PTR

func GetProcessHeap
  success NotEqual=0
  HANDLE

func GetProcessHeaps
  success NotEqual=0
  DWORD
  NumberOfHeaps DWORD
  ProcessHeaps PHANDLE postCount=Return

func HeapAlloc
  success NotEqual=0
  LPVOID
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]
  dwBytes SIZE_T

func HeapCompact
  success NotEqual=0
  SIZE_T
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]

func HeapCreate
  success NotEqual=0
  HANDLE
  flOptions [HEAP_FLAGS]
  dwInitialSize SIZE_T
  dwMaximumSize SIZE_T

func HeapDestroy
  BOOL
  hHeap HANDLE

func HeapFree
  BOOL
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]
  lpMem LPVOID

func HeapLock
  BOOL
  hHeap HANDLE

func HeapQueryInformation
  BOOL
  HeapHandle HANDLE
  HeapInformationClass HEAP_INFORMATION_CLASS
  HeapInformation PVOID length=HeapInformationLength
  HeapInformationLength SIZE_T
  ReturnLength PSIZE_T

func HeapReAlloc
  success NotEqual=0
  LPVOID
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]
  lpMem LPVOID
  dwBytes SIZE_T

func HeapSetInformation
  BOOL
  HeapHandle HANDLE
  HeapInformationClass HEAP_INFORMATION_CLASS
  HeapInformation PVOID length=HeapInformationLength
  HeapInformationLength SIZE_T

func HeapSize
  success NotEqual=0
  SIZE_T
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]
  lpMem LPCVOID

func HeapUnlock
  BOOL
  hHeap HANDLE

func HeapValidate
  BOOL
  hHeap HANDLE
  dwFlags [HEAP_FLAGS]
  lpMem LPCVOID

func HeapWalk
  BOOL
  hHeap HANDLE
  lpEntry LPPROCESS_HEAP_ENTRY

func HeapSummary
  BOOL
  hHeap HANDLE
  dwFlags DWORD
  lpSummary LPHEAP_SUMMARY

func PrefetchVirtualMemory
  BOOL
  hProcess HANDLE
  NumberOfEntries ULONG_PTR
  VirtualAddresses PWIN32_MEMORY_RANGE_ENTRY
  Flags ULONG

func VirtualAlloc
  success NotEqual=0
  LPVOID
  lpAddress LPVOID
  dwSize SIZE_T
  flAllocationType [MemoryAllocationFlags]
  flProtect [MemoryProtection]

func VirtualAllocEx
  success NotEqual=0
  LPVOID
  hProcess [ProcessHandle]
  lpAddress LPVOID
  dwSize SIZE_T
  flAllocationType [MemoryAllocationFlags]
  flProtect [MemoryProtection]

func VirtualAllocExNuma
  success NotEqual=0
  LPVOID
  hProcess [ProcessHandle]
  lpAddress LPVOID
  dwSize SIZE_T
  flAllocationType DWORD
  flProtect [MemoryProtection]
  nndPreferred DWORD

func VirtualFree
  BOOL
  lpAddress LPVOID
  dwSize SIZE_T
  dwFreeType [MemoryAllocationFlags]

func VirtualFreeEx
  BOOL
  hProcess [ProcessHandle]
  lpAddress LPVOID
  dwSize SIZE_T
  dwFreeType [MemoryAllocationFlags]

func VirtualLock
  BOOL
  lpAddress LPVOID
  dwSize SIZE_T

func VirtualProtect
  BOOL
  lpAddress LPVOID
  dwSize SIZE_T
  flNewProtect [MemoryProtection]
  lpflOldProtect [MemoryProtection*]

func VirtualProtectEx
  BOOL
  hProcess [ProcessHandle]
  lpAddress LPVOID
  dwSize SIZE_T
  flNewProtect [MemoryProtection]
  lpflOldProtect [MemoryProtection*]

func VirtualQuery
  success NotEqual=0
  SIZE_T
  lpAddress LPCVOID
  lpBuffer PMEMORY_BASIC_INFORMATION
  dwLength SIZE_T

func VirtualQueryEx
  success NotEqual=0
  SIZE_T
  hProcess [ProcessHandle]
  lpAddress LPCVOID
  lpBuffer PMEMORY_BASIC_INFORMATION
  dwLength SIZE_T

func VirtualUnlock
  BOOL
  lpAddress LPVOID
  dwSize SIZE_T

func GlobalAlloc
  success NotEqual=0
  HGLOBAL
  uFlags [GlobalMemoryFlag]
  dwBytes SIZE_T

func LocalAlloc
  success NotEqual=0
  HLOCAL
  uFlags [LocalMemoryFlag]
  uBytes SIZE_T

func GlobalFlags
  success NotEqual=0
  UINT
  hMem HGLOBAL

func LocalFlags
  success NotEqual=0
  UINT
  hMem HLOCAL

func GlobalFree
  success Equal=0
  HGLOBAL
  hMem HGLOBAL

func LocalFree
  success Equal=0
  HLOCAL
  hMem HLOCAL

func GlobalHandle
  success NotEqual=0
  HGLOBAL
  pMem LPCVOID

func LocalHandle
  success NotEqual=0
  HLOCAL
  pMem LPCVOID

func GlobalLock
  success NotEqual=0
  LPVOID
  hMem HGLOBAL

func LocalLock
  success NotEqual=0
  LPVOID
  hMem HLOCAL

func GlobalReAlloc
  success NotEqual=0
  HGLOBAL
  hMem HGLOBAL
  dwBytes SIZE_T
  uFlags [GlobalMemoryFlag]

func LocalReAlloc
  success NotEqual=0
  HLOCAL
  hMem HLOCAL
  uBytes SIZE_T
  uFlags [LocalMemoryFlag]

func GlobalSize
  success NotEqual=0
  SIZE_T
  hMem HGLOBAL

func LocalSize
  success NotEqual=0
  UINT
  hMem HLOCAL

func GlobalUnlock
  BOOL
  hMem HGLOBAL

func LocalUnlock
  BOOL
  hMem HLOCAL

func GetMemoryErrorHandlingCapabilities
  BOOL
  Capabilities PULONG

func RegisterBadMemoryNotification
  success NotEqual=0
  PVOID
  Callback PBAD_MEMORY_CALLBACK_ROUTINE

func UnregisterBadMemoryNotification
  BOOL
  RegistrationHandle PVOID

func IsBadCodePtr
  BOOL
  lpfn FARPROC

func IsBadReadPtr
  BOOL
  lp "const VOID*"
  ucb UINT_PTR

func IsBadStringPtr bothCharset
  BOOL
  lpsz LPCTSTR
  ucchMax UINT_PTR

func IsBadWritePtr
  BOOL
  lp LPVOID
  ucb UINT_PTR

func GlobalMemoryStatus
  void
  lpBuffer LPMEMORYSTATUS

func CreateProcess bothCharset
  BOOL
  lpApplicationName LPCTSTR
  lpCommandLine LPTSTR
  lpProcessAttributes LPSECURITY_ATTRIBUTES
  lpThreadAttributes LPSECURITY_ATTRIBUTES
  bInheritHandles BOOL
  dwCreationFlags [CreateProcessFlags]
  lpEnvironment LPVOID
  lpCurrentDirectory LPCTSTR
  lpStartupInfo LPSTARTUPINFO
  lpProcessInformation LPPROCESS_INFORMATION

func ExitProcess
  VOID
  uExitCode UINT

func FlushProcessWriteBuffers
  VOID

func FreeEnvironmentStrings bothCharset
  BOOL
  lpszEnvironmentBlock LPTCH

func GetCommandLine bothCharset
  success NotEqual=0
  LPTSTR

func GetCurrentProcess
  success NotEqual=0
  [ProcessHandle]

func GetCurrentProcessId
  success NotEqual=0
  DWORD

func GetEnvironmentStrings
  success NotEqual=0
  LPCH

func GetEnvironmentStrings bothCharset
  success NotEqual=0
  LPTCH

func GetEnvironmentVariable bothCharset
  success NotEqual=0
  DWORD
  lpName LPCTSTR
  lpBuffer LPTSTR outputOnly
  nSize DWORD

func GetExitCodeProcess
  BOOL
  hProcess [ProcessHandle]
  lpExitCode LPDWORD

func GetPriorityClass
  success NotEqual=0
  DWORD
  hProcess [ProcessHandle]

func GetProcessAffinityMask
  BOOL
  hProcess [ProcessHandle]
  lpProcessAffinityMask PDWORD_PTR
  lpSystemAffinityMask PDWORD_PTR

func GetProcessGroupAffinity
  BOOL
  hProcess [ProcessHandle]
  GroupCount PUSHORT
  GroupArray PUSHORT count=GroupCount

func GetProcessHandleCount
  BOOL
  hProcess [ProcessHandle]
  pdwHandleCount PDWORD

func GetProcessId
  success NotEqual=0
  DWORD
  Process HANDLE

func GetProcessIdOfThread
  success NotEqual=0
  DWORD
  Thread HANDLE

func GetProcessInformation
  BOOL
  hProcess HANDLE
  ProcessInformationClass PROCESS_INFORMATION_CLASS
  ProcessInformation LPVOID postLength=ProcessInformationSize
  ProcessInformationSize DWORD

func GetProcessIoCounters
  BOOL
  hProcess [ProcessHandle]
  lpIoCounters PIO_COUNTERS

func GetProcessMitigationPolicy
  BOOL
  hProcess HANDLE
  MitigationPolicy PROCESS_MITIGATION_POLICY
  lpBuffer PVOID
  dwLength SIZE_T

func GetProcessPriorityBoost
  BOOL
  hProcess [ProcessHandle]
  pDisablePriorityBoost PBOOL

func GetProcessShutdownParameters
  BOOL
  lpdwLevel LPDWORD
  lpdwFlags LPDWORD

func GetProcessTimes
  BOOL
  hProcess [ProcessHandle]
  lpCreationTime LPFILETIME
  lpExitTime LPFILETIME
  lpKernelTime LPFILETIME
  lpUserTime LPFILETIME

func GetProcessVersion
  success NotEqual=0
  DWORD
  ProcessId DWORD

func GetProcessWorkingSetSize
  BOOL
  hProcess [ProcessHandle]
  lpMinimumWorkingSetSize PSIZE_T
  lpMaximumWorkingSetSize PSIZE_T

func GetProcessWorkingSetSizeEx
  BOOL
  hProcess [ProcessHandle]
  lpMinimumWorkingSetSize PSIZE_T
  lpMaximumWorkingSetSize PSIZE_T
  Flags PDWORD

func GetProcessorSystemCycleTime
  BOOL
  Group USHORT
  Buffer PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
  ReturnedLength PDWORD

func GetStartupInfo bothCharset
  VOID
  lpStartupInfo LPSTARTUPINFO

func NeedCurrentDirectoryForExePath bothCharset
  BOOL
  ExeName LPCTSTR

func OpenProcess
  success NotEqual=0
  HANDLE
  dwDesiredAccess [PROCESS_ACCESS_MASK] display=DWORD
  bInheritHandle BOOL
  dwProcessId DWORD

func QueryFullProcessImageName bothCharset
  BOOL
  hProcess [ProcessHandle]
  dwFlags [QueryFullProcessImageNameFlags]
  lpExeName LPTSTR outputOnly
  lpdwSize PDWORD

func QueryProcessAffinityUpdateMode
  BOOL
  ProcessHandle HANDLE
  lpdwFlags DWORD

func QueryProcessCycleTime
  BOOL
  ProcessHandle HANDLE
  CycleTime PULONG64

func SetEnvironmentVariable bothCharset
  BOOL
  lpName LPCTSTR
  lpValue LPCTSTR

func SetPriorityClass
  BOOL
  hProcess [ProcessHandle]
  dwPriorityClass [PriorityClass]

func SetProcessAffinityMask
  BOOL
  hProcess [ProcessHandle]
  dwProcessAffinityMask DWORD_PTR

func SetProcessAffinityUpdateMode
  BOOL
  ProcessHandle HANDLE
  dwFlags DWORD

func SetProcessInformation
  BOOL
  hProcess HANDLE
  ProcessInformationClass PROCESS_INFORMATION_CLASS
  ProcessInformation LPVOID length=ProcessInformationSize
  ProcessInformationSize DWORD

func SetProcessMitigationPolicy
  BOOL
  MitigationPolicy PROCESS_MITIGATION_POLICY
  lpBuffer PVOID
  dwLength SIZE_T

func SetProcessPriorityBoost
  BOOL
  hProcess [ProcessHandle]
  DisablePriorityBoost BOOL

func SetProcessShutdownParameters
  BOOL
  dwLevel DWORD
  dwFlags [ProcessShutdownFlags]

func SetProcessWorkingSetSize
  BOOL
  hProcess [ProcessHandle]
  dwMinimumWorkingSetSize SIZE_T
  dwMaximumWorkingSetSize SIZE_T

func SetProcessWorkingSetSizeEx
  BOOL
  hProcess [ProcessHandle]
  dwMinimumWorkingSetSize SIZE_T
  dwMaximumWorkingSetSize SIZE_T
  Flags DWORD

func TerminateProcess
  BOOL
  hProcess [ProcessHandle]
  uExitCode UINT

func CreateRemoteThread
  success NotEqual=0
  HANDLE
  hProcess [ProcessHandle]
  lpThreadAttributes LPSECURITY_ATTRIBUTES
  dwStackSize SIZE_T
  lpStartAddress LPTHREAD_START_ROUTINE
  lpParameter LPVOID
  dwCreationFlags DWORD
  lpThreadId LPDWORD

func CreateRemoteThreadEx
  success NotEqual=0
  HANDLE
  hProcess [ProcessHandle]
  lpThreadAttributes LPSECURITY_ATTRIBUTES
  dwStackSize SIZE_T
  lpStartAddress LPTHREAD_START_ROUTINE
  lpParameter LPVOID
  dwCreationFlags DWORD
  lpAttributeList LPPROC_THREAD_ATTRIBUTE_LIST
  lpThreadId LPDWORD

func CreateThread
  success NotEqual=0
  HANDLE
  lpThreadAttributes LPSECURITY_ATTRIBUTES
  dwStackSize SIZE_T
  lpStartAddress LPTHREAD_START_ROUTINE
  lpParameter LPVOID
  dwCreationFlags [ThreadCreationFlags]
  lpThreadId LPDWORD

func ExitThread
  VOID
  dwExitCode DWORD

func GetCurrentThread
  success NotEqual=0
  [ThreadHandle]

func GetCurrentThreadId
  success NotEqual=0
  DWORD

func GetExitCodeThread
  BOOL
  hThread [ThreadHandle]
  lpExitCode LPDWORD

func GetThreadGroupAffinity
  BOOL
  hThread [ThreadHandle]
  GroupAffinity PGROUP_AFFINITY

func GetThreadId
  success NotEqual=0
  DWORD
  Thread HANDLE

func GetThreadIdealProcessorEx
  BOOL
  hThread [ThreadHandle]
  lpIdealProcessor PPROCESSOR_NUMBER

func GetThreadInformation
  BOOL
  hThread [ThreadHandle]
  ThreadInformationClass THREAD_INFORMATION_CLASS
  ThreadInformation LPVOID postLength=ThreadInformationSize
  ThreadInformationSize DWORD

func GetThreadIOPendingFlag
  BOOL
  hThread [ThreadHandle]
  lpIOIsPending PBOOL

func GetThreadPriority
  success NotEqual=0x7FFFFFFF
  [THREAD_PRIORITY]
  hThread [ThreadHandle]

func GetThreadPriorityBoost
  BOOL
  hThread [ThreadHandle]
  pDisablePriorityBoost PBOOL

func GetThreadTimes
  BOOL
  hThread [ThreadHandle]
  lpCreationTime LPFILETIME
  lpExitTime LPFILETIME
  lpKernelTime LPFILETIME
  lpUserTime LPFILETIME

func OpenThread
  success NotEqual=0
  HANDLE
  dwDesiredAccess [THREAD_ACCESS_MASK] display=DWORD
  bInheritHandle BOOL
  dwThreadId DWORD

func QueryThreadCycleTime
  BOOL
  ThreadHandle [ThreadHandle]
  CycleTime PULONG64

func ResumeThread
  success NotEqual=-1
  DWORD
  hThread [ThreadHandle]

func SetThreadAffinityMask
  success NotEqual=0
  DWORD_PTR
  hThread [ThreadHandle]
  dwThreadAffinityMask DWORD_PTR

func SetThreadGroupAffinity
  BOOL
  hThread [ThreadHandle]
  GroupAffinity "const GROUP_AFFINITY*"

func SetThreadIdealProcessor
  success NotEqual=0
  DWORD
  hThread [ThreadHandle]
  dwIdealProcessor DWORD

func SetThreadIdealProcessorEx
  BOOL
  hThread [ThreadHandle]
  lpIdealProcessor PPROCESSOR_NUMBER
  lpPreviousIdealProcessor PPROCESSOR_NUMBER

func SetThreadInformation
  BOOL
  hThread [ThreadHandle]
  ThreadInformationClass THREAD_INFORMATION_CLASS
  ThreadInformation LPVOID length=ThreadInformationSize
  ThreadInformationSize DWORD

func SetThreadPriority
  BOOL
  hThread [ThreadHandle]
  nPriority [THREAD_PRIORITY]

func SetThreadPriorityBoost
  BOOL
  hThread [ThreadHandle]
  DisablePriorityBoost BOOL

func SetThreadStackGuarantee
  BOOL
  StackSizeInBytes PULONG

func Sleep
  VOID
  dwMilliseconds [WaitTimeout]

func SleepEx
  DWORD
  dwMilliseconds [WaitTimeout]
  bAlertable BOOL

func SuspendThread
  success NotEqual=-1
  DWORD
  hThread [ThreadHandle]

func SwitchToThread
  BOOL

func TerminateThread
  BOOL
  hThread [ThreadHandle]
  dwExitCode DWORD

func TlsAlloc
  success NotEqual=0
  DWORD

func TlsFree
  BOOL
  dwTlsIndex DWORD

func TlsGetValue
  LPVOID
  dwTlsIndex DWORD

func TlsSetValue
  BOOL
  dwTlsIndex DWORD
  lpTlsValue LPVOID

func DeleteProcThreadAttributeList
  VOID
  lpAttributeList LPPROC_THREAD_ATTRIBUTE_LIST

func InitializeProcThreadAttributeList
  BOOL
  lpAttributeList LPPROC_THREAD_ATTRIBUTE_LIST outputOnly
  dwAttributeCount DWORD
  dwFlags DWORD
  lpSize PSIZE_T

func UpdateProcThreadAttribute
  BOOL
  lpAttributeList LPPROC_THREAD_ATTRIBUTE_LIST
  dwFlags DWORD
  Attribute [ProcThreadAttribute]
  lpValue PVOID length=cbSize
  cbSize SIZE_T
  lpPreviousValue PVOID postLength=lpReturnSize
  lpReturnSize PSIZE_T

func IsWow64Process
  BOOL
  hProcess [ProcessHandle]
  Wow64Process PBOOL

func Wow64SuspendThread
  success NotEqual=0
  DWORD
  hThread [ThreadHandle]

func AssignProcessToJobObject
  BOOL
  hJob HANDLE
  hProcess [ProcessHandle]

func CreateJobObject bothCharset
  success NotEqual=0
  HANDLE
  lpJobAttributes LPSECURITY_ATTRIBUTES
  lpName LPCTSTR

func IsProcessInJob
  BOOL
  ProcessHandle HANDLE
  JobHandle HANDLE
  Result PBOOL

func OpenJobObject bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess DWORD
  bInheritHandles BOOL
  lpName LPCTSTR

func QueryInformationJobObject
  BOOL
  hJob HANDLE
  JobObjectInfoClass JOBOBJECTINFOCLASS
  lpJobObjectInfo LPVOID postLength=cbJobObjectInfoLength
  cbJobObjectInfoLength DWORD
  lpReturnLength LPDWORD

func SetInformationJobObject
  BOOL
  hJob HANDLE
  JobObjectInfoClass JOBOBJECTINFOCLASS
  lpJobObjectInfo LPVOID length=cbJobObjectInfoLength
  cbJobObjectInfoLength DWORD

func TerminateJobObject
  BOOL
  hJob HANDLE
  uExitCode UINT

func CallbackMayRunLong
  BOOL
  pci PTP_CALLBACK_INSTANCE

func CancelThreadpoolIo
  VOID
  pio PTP_IO

func CloseThreadpool
  VOID
  ptpp PTP_POOL

func CloseThreadpoolCleanupGroup
  VOID
  ptpcg PTP_CLEANUP_GROUP

func CloseThreadpoolCleanupGroupMembers
  VOID
  ptpcg PTP_CLEANUP_GROUP
  fCancelPendingCallbacks BOOL
  pvCleanupContext PVOID

func CloseThreadpoolIo
  VOID
  pio PTP_IO

func CloseThreadpoolTimer
  VOID
  pti PTP_TIMER

func CloseThreadpoolWait
  VOID
  pwa PTP_WAIT

func CloseThreadpoolWork
  VOID
  pwk PTP_WORK

func CreateThreadpool
  success NotEqual=0
  PTP_POOL
  reserved PVOID

func CreateThreadpoolCleanupGroup
  success NotEqual=0
  PTP_CLEANUP_GROUP

func CreateThreadpoolIo
  success NotEqual=0
  PTP_IO
  fl HANDLE
  pfnio PTP_WIN32_IO_CALLBACK
  pv PVOID
  pcbe PTP_CALLBACK_ENVIRON

func CreateThreadpoolTimer
  success NotEqual=0
  PTP_TIMER
  pfnti PTP_TIMER_CALLBACK
  pv PVOID
  pcbe PTP_CALLBACK_ENVIRON

func CreateThreadpoolWait
  success NotEqual=0
  PTP_WAIT
  pfnwa PTP_WAIT_CALLBACK
  pv PVOID
  pcbe PTP_CALLBACK_ENVIRON

func CreateThreadpoolWork
  success NotEqual=0
  PTP_WORK
  pfnwk PTP_WORK_CALLBACK
  pv PVOID
  pcbe PTP_CALLBACK_ENVIRON

func DisassociateCurrentThreadFromCallback
  VOID
  pci PTP_CALLBACK_INSTANCE

func FreeLibraryWhenCallbackReturns
  VOID
  pci PTP_CALLBACK_INSTANCE
  mod HMODULE

func IsThreadpoolTimerSet
  BOOL
  pti PTP_TIMER

func LeaveCriticalSectionWhenCallbackReturns
  VOID
  pci PTP_CALLBACK_INSTANCE
  pcs PCRITICAL_SECTION

func QueryThreadpoolStackInformation
  BOOL
  ptpp PTP_POOL
  ptpsi PTP_POOL_STACK_INFORMATION

func ReleaseMutexWhenCallbackReturns
  VOID
  pci PTP_CALLBACK_INSTANCE
  mut HANDLE

func ReleaseSemaphoreWhenCallbackReturns
  VOID
  pci PTP_CALLBACK_INSTANCE
  sem HANDLE
  crel DWORD

func SetEventWhenCallbackReturns
  VOID
  pci PTP_CALLBACK_INSTANCE
  evt HANDLE

func SetThreadpoolStackInformation
  BOOL
  ptpp PTP_POOL
  ptpsi PTP_POOL_STACK_INFORMATION

func SetThreadpoolThreadMaximum
  VOID
  ptpp PTP_POOL
  cthrdMost DWORD

func SetThreadpoolThreadMinimum
  BOOL
  ptpp PTP_POOL
  cthrdMic DWORD

func SetThreadpoolTimer
  VOID
  pti PTP_TIMER
  pftDueTime PFILETIME
  msPeriod DWORD
  msWindowLength DWORD

func SetThreadpoolWait
  VOID
  pwa PTP_WAIT
  h HANDLE
  pftTimeout PFILETIME

func StartThreadpoolIo
  VOID
  pio PTP_IO

func SubmitThreadpoolWork
  VOID
  pwk PTP_WORK

func TrySubmitThreadpoolCallback
  BOOL
  pfns PTP_SIMPLE_CALLBACK
  pv PVOID
  pcbe PTP_CALLBACK_ENVIRON

func WaitForThreadpoolIoCallbacks
  VOID
  pio PTP_IO
  fCancelPendingCallbacks BOOL

func WaitForThreadpoolTimerCallbacks
  VOID
  pti PTP_TIMER
  fCancelPendingCallbacks BOOL

func WaitForThreadpoolWaitCallbacks
  VOID
  pwa PTP_WAIT
  fCancelPendingCallbacks BOOL

func WaitForThreadpoolWorkCallbacks
  VOID
  pwk PTP_WORK
  fCancelPendingCallbacks BOOL

func BindIoCompletionCallback
  BOOL
  FileHandle HANDLE
  Function LPOVERLAPPED_COMPLETION_ROUTINE
  Flags ULONG

func QueueUserWorkItem
  BOOL
  Function LPTHREAD_START_ROUTINE
  Context PVOID
  Flags [WorkItemFlags]

func ConvertFiberToThread
  BOOL

func ConvertThreadToFiber
  success NotEqual=0
  LPVOID
  lpParameter LPVOID

func ConvertThreadToFiberEx
  success NotEqual=0
  LPVOID
  lpParameter LPVOID
  dwFlags DWORD

func CreateFiber
  success NotEqual=0
  LPVOID
  dwStackSize SIZE_T
  lpStartAddress LPFIBER_START_ROUTINE
  lpParameter LPVOID

func CreateFiberEx
  success NotEqual=0
  LPVOID
  dwStackCommitSize SIZE_T
  dwStackReserveSize SIZE_T
  dwFlags DWORD
  lpStartAddress LPFIBER_START_ROUTINE
  lpParameter LPVOID

func DeleteFiber
  VOID
  lpFiber LPVOID

func FlsAlloc
  success NotEqual=0
  DWORD
  lpCallback PFLS_CALLBACK_FUNCTION

func FlsFree
  BOOL
  dwFlsIndex DWORD

func FlsGetValue
  PVOID
  dwFlsIndex DWORD

func FlsSetValue
  BOOL
  dwFlsIndex DWORD
  lpFlsData PVOID

func IsThreadAFiber
  BOOL

func SwitchToFiber
  VOID
  lpFiber LPVOID

func AllocateUserPhysicalPagesNuma
  BOOL
  hProcess [ProcessHandle]
  NumberOfPages PULONG_PTR
  PageArray PULONG_PTR
  nndPreferred DWORD

func GetNumaAvailableMemoryNode
  BOOL
  Node UCHAR
  AvailableBytes PULONGLONG

func GetNumaAvailableMemoryNodeEx
  BOOL
  Node USHORT
  AvailableBytes PULONGLONG

func GetNumaHighestNodeNumber
  BOOL
  HighestNodeNumber PULONG

func GetNumaNodeNumberFromHandle
  BOOL
  hFile HANDLE
  NodeNumber PUSHORT

func GetNumaNodeProcessorMask
  BOOL
  Node UCHAR
  ProcessorMask PULONGLONG

func GetNumaNodeProcessorMaskEx
  BOOL
  Node USHORT
  ProcessorMask PGROUP_AFFINITY

func GetNumaProcessorNode
  BOOL
  Processor UCHAR
  NodeNumber PUCHAR

func GetNumaProcessorNodeEx
  BOOL
  Processor PPROCESSOR_NUMBER
  NodeNumber PUSHORT

func GetNumaProximityNode
  BOOL
  ProximityId ULONG
  NodeNumber PUCHAR

func GetNumaProximityNodeEx
  BOOL
  ProximityId ULONG
  NodeNumber PUSHORT

func GetActiveProcessorCount
  success NotEqual=0
  DWORD
  GroupNumber WORD

func GetActiveProcessorGroupCount
  success NotEqual=0
  WORD

func GetCurrentProcessorNumber
  success NotEqual=0
  DWORD

func GetCurrentProcessorNumberEx
  VOID
  ProcNumber PPROCESSOR_NUMBER

func GetLogicalProcessorInformation
  BOOL
  Buffer PSYSTEM_LOGICAL_PROCESSOR_INFORMATION postLength=ReturnLength
  ReturnLength PDWORD

func GetLogicalProcessorInformationEx
  BOOL
  RelationshipType LOGICAL_PROCESSOR_RELATIONSHIP
  Buffer PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX postLength=ReturnedLength
  ReturnedLength PDWORD

func GetMaximumProcessorCount
  success NotEqual=0
  DWORD
  GroupNumber WORD

func GetMaximumProcessorGroupCount
  success NotEqual=0
  WORD

func QueryIdleProcessorCycleTime
  BOOL
  BufferLength PULONG
  ProcessorIdleCycleTime PULONG64

func QueryIdleProcessorCycleTimeEx
  BOOL
  Group USHORT
  BufferLength PULONG
  ProcessorIdleCycleTime PULONG64

func CreateUmsCompletionList
  BOOL
  UmsCompletionList PUMS_COMPLETION_LIST*

func CreateUmsThreadContext
  BOOL
  lpUmsThread PUMS_CONTEXT*

func DeleteUmsCompletionList
  BOOL
  UmsCompletionList PUMS_COMPLETION_LIST

func DeleteUmsThreadContext
  BOOL
  UmsThread PUMS_CONTEXT

func DequeueUmsCompletionListItems
  BOOL
  UmsCompletionList PUMS_COMPLETION_LIST
  WaitTimeOut DWORD
  UmsThreadList PUMS_CONTEXT*

func EnterUmsSchedulingMode
  BOOL
  SchedulerStartupInfo PUMS_SCHEDULER_STARTUP_INFO

func ExecuteUmsThread
  BOOL
  UmsThread PUMS_CONTEXT

func GetCurrentUmsThread
  success NotEqual=0
  PUMS_CONTEXT

func GetNextUmsListItem
  success NotEqual=0
  PUMS_CONTEXT
  UmsContext PUMS_CONTEXT

func GetUmsCompletionListEvent
  BOOL
  UmsCompletionList PUMS_COMPLETION_LIST
  UmsCompletionEvent PHANDLE

func GetUmsSystemThreadInformation
  BOOL
  ThreadHandle [ThreadHandle]
  SystemThreadInfo PUMS_SYSTEM_THREAD_INFORMATION

func QueryUmsThreadInformation
  BOOL
  UmsThread PUMS_CONTEXT
  UmsThreadInfoClass UMS_THREAD_INFO_CLASS
  UmsThreadInformation PVOID
  UmsThreadInformationLength ULONG
  ReturnLength PULONG

func SetUmsThreadInformation
  BOOL
  UmsThread PUMS_CONTEXT
  UmsThreadInfoClass UMS_THREAD_INFO_CLASS
  UmsThreadInformation PVOID
  UmsThreadInformationLength ULONG

func UmsThreadYield
  BOOL
  SchedulerParam PVOID

func WinExec
  success NotEqual=0
  UINT
  lpCmdLine LPCSTR
  uCmdShow UINT

func ActivateActCtx
  BOOL
  hActCtx HANDLE
  lpCookie ULONG_PTR*

func AddRefActCtx
  void
  hActCtx HANDLE

func CreateActCtx bothCharset
  success NotEqual=0
  HANDLE
  pActCtx PACTCTX

func DeactivateActCtx
  BOOL
  dwFlags [DeactivateActCtxFlags]
  ulCookie ULONG_PTR

func FindActCtxSectionGuid
  BOOL
  dwFlags [FIND_ACTCTX_SECTION_FLAGS]
  lpExtensionGuid "const GUID*"
  ulSectionId [ACTIVATION_CONTEXT_SECTION]
  lpGuidToFind "const GUID*"
  ReturnedData PACTCTX_SECTION_KEYED_DATA

func FindActCtxSectionString bothCharset
  BOOL
  dwFlags [FIND_ACTCTX_SECTION_FLAGS]
  lpExtensionGuid "const GUID*"
  ulSectionId [ACTIVATION_CONTEXT_SECTION]
  lpStringToFind LPCTSTR
  ReturnedData PACTCTX_SECTION_KEYED_DATA

func GetCurrentActCtx
  BOOL
  lphActCtx HANDLE*

func QueryActCtxW
  BOOL
  dwFlags [QueryActCtxFlags]
  hActCtx HANDLE
  pvSubInstance PVOID
  ulInfoClass [ActivationContextInfoClass]
  pvBuffer PVOID length=cbBuffer
  cbBuffer SIZE_T
  pcbWrittenOrRequired SIZE_T*

func QueryActCtxSettingsW
  BOOL
  dwFlags DWORD
  hActCtx HANDLE
  settingsNameSpace PCWSTR
  settingName PCWSTR
  pvBuffer PWSTR
  dwBuffer SIZE_T
  pdwWrittenOrRequired SIZE_T*

func ReleaseActCtx
  void
  hActCtx HANDLE

func ZombifyActCtx
  BOOL
  hActCtx HANDLE

func AddAtom bothCharset
  success NotEqual=0
  ATOM
  lpString LPCTSTR

func DeleteAtom
  success Equal=0
  ATOM
  nAtom ATOM

func FindAtom bothCharset
  success NotEqual=0
  ATOM
  lpString LPCTSTR

func GetAtomName bothCharset
  success NotEqual=0
  UINT
  nAtom ATOM
  lpBuffer LPTSTR outputOnly
  nSize int

func GlobalAddAtom bothCharset
  success NotEqual=0
  ATOM
  lpString LPCTSTR

func GlobalDeleteAtom
  success NotEqual=0
  ATOM
  nAtom ATOM

func GlobalFindAtom bothCharset
  success NotEqual=0
  ATOM
  lpString LPCTSTR

func GlobalGetAtomName bothCharset
  success NotEqual=0
  UINT
  nAtom ATOM
  lpBuffer LPTSTR outputOnly
  nSize int

func InitAtomTable
  BOOL
  nSize DWORD

func BuildCommDCB bothCharset
  BOOL
  lpDef LPCTSTR
  lpDCB LPDCB

func BuildCommDCBAndTimeouts bothCharset
  BOOL
  lpDef LPCTSTR
  lpDCB LPDCB
  lpCommTimeouts LPCOMMTIMEOUTS

func ClearCommBreak
  BOOL
  hFile HANDLE

func ClearCommError
  BOOL
  hFile HANDLE
  lpErrors LPDWORD
  lpStat LPCOMSTAT

func CommConfigDialog bothCharset
  BOOL
  lpszName LPCTSTR
  hWnd HWND
  lpCC LPCOMMCONFIG

func EscapeCommFunction
  BOOL
  hFile HANDLE
  dwFunc [COMM_FUNCTION]

func GetCommConfig
  BOOL
  hCommDev HANDLE
  lpCC LPCOMMCONFIG
  lpdwSize LPDWORD

func GetCommMask
  BOOL
  hFile HANDLE
  lpEvtMask [COMM_EVENT*]

func GetCommModemStatus
  BOOL
  hFile HANDLE
  lpModemStat [MODEM_STATUS_FLAGS*]

func GetCommProperties
  BOOL
  hFile HANDLE
  lpCommProp LPCOMMPROP

func GetCommState
  BOOL
  hFile HANDLE
  lpDCB LPDCB

func GetCommTimeouts
  BOOL
  hFile HANDLE
  lpCommTimeouts LPCOMMTIMEOUTS

func GetDefaultCommConfig bothCharset
  BOOL
  lpszName LPCTSTR
  lpCC LPCOMMCONFIG
  lpdwSize LPDWORD

func PurgeComm
  BOOL
  hFile HANDLE
  dwFlags [PURGE_FLAGS]

func SetCommBreak
  BOOL
  hFile HANDLE

func SetCommConfig
  BOOL
  hCommDev HANDLE
  lpCC LPCOMMCONFIG
  dwSize DWORD

func SetCommMask
  BOOL
  hFile HANDLE
  dwEvtMask [COMM_EVENT]

func SetCommState
  BOOL
  hFile HANDLE
  lpDCB LPDCB

func SetCommTimeouts
  BOOL
  hFile HANDLE
  lpCommTimeouts LPCOMMTIMEOUTS

func SetDefaultCommConfig bothCharset
  BOOL
  lpszName LPCTSTR
  lpCC LPCOMMCONFIG
  dwSize DWORD

func SetupComm
  BOOL
  hFile HANDLE
  dwInQueue DWORD
  dwOutQueue DWORD

func TransmitCommChar
  BOOL
  hFile HANDLE
  cChar char

func WaitCommEvent
  BOOL
  hFile HANDLE
  lpEvtMask [COMM_EVENT*]
  lpOverlapped LPOVERLAPPED

func AddConsoleAlias bothCharset
  BOOL
  Source LPCTSTR
  Target LPCTSTR
  ExeName LPCTSTR

func AllocConsole
  BOOL

func AttachConsole
  BOOL
  dwProcessId DWORD

func CreateConsoleScreenBuffer
  success NotEqual=0
  HANDLE
  dwDesiredAccess DWORD
  dwShareMode [FILE_SHARE_MODE]
  lpSecurityAttributes "const SECURITY_ATTRIBUTES*"
  dwFlags [CONSOLE_TEXTMODE_FLAGS]
  lpScreenBufferData LPVOID

func FillConsoleOutputAttribute
  BOOL
  hConsoleOutput HANDLE
  wAttribute [ConsoleAttribute]
  nLength DWORD
  dwWriteCoord COORD
  lpNumberOfAttrsWritten LPDWORD

func FillConsoleOutputCharacter bothCharset
  BOOL
  hConsoleOutput HANDLE
  cCharacter TCHAR
  nLength DWORD
  dwWriteCoord COORD
  lpNumberOfCharsWritten LPDWORD

func FlushConsoleInputBuffer
  BOOL
  hConsoleInput HANDLE

func FreeConsole
  BOOL

func GenerateConsoleCtrlEvent
  BOOL
  dwCtrlEvent DWORD
  dwProcessGroupId DWORD

func GetConsoleAlias bothCharset
  success NotEqual=0
  DWORD
  lpSource LPTSTR
  lpTargetBuffer LPTSTR
  TargetBufferLength DWORD
  lpExeName LPTSTR

func GetConsoleAliases bothCharset
  success NotEqual=0
  DWORD
  lpAliasBuffer LPTSTR
  AliasBufferLength DWORD
  lpExeName LPTSTR

func GetConsoleAliasesLength bothCharset
  success NotEqual=0
  DWORD
  lpExeName LPTSTR

func GetConsoleAliasExes bothCharset
  success NotEqual=0
  DWORD
  lpExeNameBuffer LPTSTR
  ExeNameBufferLength DWORD

func GetConsoleAliasExesLength bothCharset
  success NotEqual=0
  DWORD

func GetConsoleCP
  [CodePageEnum]

func GetConsoleCursorInfo
  BOOL
  hConsoleOutput HANDLE
  lpConsoleCursorInfo PCONSOLE_CURSOR_INFO

func GetConsoleDisplayMode
  BOOL
  lpModeFlags [CONSOLE_FULLSCREEN_MODE*]

func GetConsoleFontSize
  COORD
  hConsoleOutput HANDLE
  nFont DWORD

func GetConsoleHistoryInfo
  BOOL
  lpConsoleHistoryInfo PCONSOLE_HISTORY_INFO

func GetConsoleMode
  BOOL
  hConsoleHandle HANDLE
  lpMode [ConsoleModeFlags*]

func GetConsoleOriginalTitle bothCharset
  success NotEqual=0
  DWORD
  lpConsoleTitle LPTSTR
  nSize DWORD

func GetConsoleOutputCP
  success NotEqual=0
  UINT

func GetConsoleProcessList
  success NotEqual=0
  DWORD
  lpdwProcessList LPDWORD postCount=Return
  dwProcessCount DWORD

func GetConsoleScreenBufferInfo
  BOOL
  hConsoleOutput HANDLE
  lpConsoleScreenBufferInfo PCONSOLE_SCREEN_BUFFER_INFO

func GetConsoleScreenBufferInfoEx
  BOOL
  hConsoleOutput HANDLE
  lpConsoleScreenBufferInfoEx PCONSOLE_SCREEN_BUFFER_INFOEX

func GetConsoleSelectionInfo
  BOOL
  lpConsoleSelectionInfo PCONSOLE_SELECTION_INFO

func GetConsoleTitle bothCharset
  success NotEqual=0
  DWORD
  lpConsoleTitle LPTSTR outputOnly
  nSize DWORD

func GetConsoleWindow
  success NotEqual=0
  HWND

func GetCurrentConsoleFont
  BOOL
  hConsoleOutput HANDLE
  bMaximumWindow BOOL
  lpConsoleCurrentFont PCONSOLE_FONT_INFO

func GetCurrentConsoleFontEx
  BOOL
  hConsoleOutput HANDLE
  bMaximumWindow BOOL
  lpConsoleCurrentFontEx PCONSOLE_FONT_INFOEX

func GetLargestConsoleWindowSize
  COORD
  hConsoleOutput HANDLE

func GetNumberOfConsoleInputEvents
  BOOL
  hConsoleInput HANDLE
  lpcNumberOfEvents LPDWORD

func GetNumberOfConsoleMouseButtons
  BOOL
  lpNumberOfMouseButtons LPDWORD

func GetStdHandle
  [FILE_HANDLE]
  nStdHandle [StdHandle]

func PeekConsoleInput bothCharset
  BOOL
  hConsoleInput HANDLE
  lpBuffer PINPUT_RECORD
  nLength DWORD
  lpNumberOfEventsRead LPDWORD

func ReadConsole bothCharset
  BOOL
  hConsoleInput HANDLE
  lpBuffer LPVOID postLength=lpNumberOfCharsRead
  nNumberOfCharsToRead DWORD
  lpNumberOfCharsRead LPDWORD
  pInputControl LPVOID

func ReadConsoleInput bothCharset
  BOOL
  hConsoleInput HANDLE
  lpBuffer PINPUT_RECORD
  nLength DWORD
  lpNumberOfEventsRead LPDWORD

func ReadConsoleOutput bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpBuffer PCHAR_INFO
  dwBufferSize COORD
  dwBufferCoord COORD
  lpReadRegion PSMALL_RECT

func ReadConsoleOutputAttribute
  BOOL
  hConsoleOutput HANDLE
  lpAttribute [ConsoleAttribute*]
  nLength DWORD
  dwReadCoord COORD
  lpNumberOfAttrsRead LPDWORD

func ReadConsoleOutputCharacter bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpCharacter LPTSTR
  nLength DWORD
  dwReadCoord COORD
  lpNumberOfCharsRead LPDWORD

func ScrollConsoleScreenBuffer bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpScrollRectangle "const SMALL_RECT*"
  lpClipRectangle "const SMALL_RECT*"
  dwDestinationOrigin COORD
  lpFill "const CHAR_INFO*"

func SetConsoleActiveScreenBuffer
  BOOL
  hConsoleOutput HANDLE

func SetConsoleCP
  BOOL
  wCodePageID [CodePageEnum]

func SetConsoleCtrlHandler
  BOOL
  HandlerRoutine PHANDLER_ROUTINE
  Add BOOL

func SetConsoleCursorInfo
  BOOL
  hConsoleOutput HANDLE
  lpConsoleCursorInfo "const CONSOLE_CURSOR_INFO*"

func SetConsoleCursorPosition
  BOOL
  hConsoleOutput HANDLE
  dwCursorPosition COORD

func SetConsoleDisplayMode
  BOOL
  hConsoleOutput HANDLE
  dwFlags [CONSOLE_DISPLAY_MODE]
  lpNewScreenBufferDimensions PCOORD

func SetConsoleHistoryInfo
  BOOL
  lpConsoleHistoryInfo PCONSOLE_HISTORY_INFO

func SetConsoleMode
  BOOL
  hConsoleHandle HANDLE
  dwMode [ConsoleModeFlags]

func SetConsoleOutputCP
  BOOL
  wCodePageID [CodePageEnum]

func SetConsoleScreenBufferInfoEx
  BOOL
  hConsoleOutput HANDLE
  lpConsoleScreenBufferInfoEx PCONSOLE_SCREEN_BUFFER_INFOEX

func SetConsoleScreenBufferSize
  BOOL
  hConsoleOutput HANDLE
  dwSize COORD

func SetConsoleTextAttribute
  BOOL
  hConsoleOutput HANDLE
  wAttributes [ConsoleAttribute]

func SetConsoleTitle bothCharset
  BOOL
  lpConsoleTitle LPCTSTR

func SetConsoleWindowInfo
  BOOL
  hConsoleOutput HANDLE
  bAbsolute BOOL
  lpConsoleWindow "const SMALL_RECT*"

func SetCurrentConsoleFontEx
  BOOL
  hConsoleOutput HANDLE
  bMaximumWindow BOOL
  lpConsoleCurrentFontEx PCONSOLE_FONT_INFOEX

func SetStdHandle
  BOOL
  nStdHandle [StdHandle]
  hHandle HANDLE

func WriteConsole bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpBuffer LPCTSTR display="const VOID*"
  nNumberOfCharsToWrite DWORD
  lpNumberOfCharsWritten LPDWORD
  lpReserved LPVOID

func WriteConsoleInput bothCharset
  BOOL
  hConsoleInput HANDLE
  lpBuffer "const INPUT_RECORD*"
  nLength DWORD
  lpNumberOfEventsWritten LPDWORD

func WriteConsoleOutput bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpBuffer "const CHAR_INFO*"
  dwBufferSize COORD
  dwBufferCoord COORD
  lpWriteRegion PSMALL_RECT

func WriteConsoleOutputAttribute
  BOOL
  hConsoleOutput HANDLE
  lpAttribute [ConsoleAttribute*] display="const WORD*"
  nLength DWORD
  dwWriteCoord COORD
  lpNumberOfAttrsWritten LPDWORD

func WriteConsoleOutputCharacter bothCharset
  BOOL
  hConsoleOutput HANDLE
  lpCharacter LPCTSTR
  nLength DWORD
  dwWriteCoord COORD
  lpNumberOfCharsWritten LPDWORD

func SetConsoleInputExeName bothCharset
  BOOL
  lpName LPCTSTR

func DeviceIoControl
  BOOL
  hDevice HANDLE
  dwIoControlCode [IOCTL]
  lpInBuffer LPVOID length=nInBufferSize
  nInBufferSize DWORD
  lpOutBuffer LPVOID postLength=lpBytesReturned
  nOutBufferSize DWORD
  lpBytesReturned LPDWORD
  lpOverlapped LPOVERLAPPED

func Beep
  BOOL
  dwFreq DWORD
  dwDuration DWORD

func RtlCaptureStackBackTrace
  USHORT
  FramesToSkip ULONG
  FramesToCapture ULONG
  BackTrace PVOID*
  BackTraceHash PULONG

func FatalAppExit bothCharset
  void
  uAction UINT
  lpMessageText LPCTSTR

func FormatMessage bothCharset
  success NotEqual=0
  DWORD
  dwFlags [FormatMessageFlags]
  lpSource LPCVOID
  dwMessageId DWORD
  dwLanguageId DWORD
  lpBuffer LPTSTR outputOnly
  nSize DWORD
  Arguments va_list*

func GetErrorMode
  [SEM_FLAGS]

func GetLastError
  [ERROR_CODE]

func GetThreadErrorMode
  [SEM_FLAGS_DWORD]

func RtlLookupFunctionEntry
  PVOID
  ControlPC ULONGLONG
  ImageBase PULONGLONG
  TargetGp PULONGLONG

func RtlPcToFileHeader
  success NotEqual=0
  PVOID
  PcValue PVOID
  BaseOfImage PVOID*

func SetErrorMode
  [SEM_FLAGS]
  uMode [SEM_FLAGS]

func SetLastError
  void
  dwErrCode [ERROR_CODE]

func SetThreadErrorMode
  BOOL
  dwNewMode [SEM_FLAGS_DWORD]
  lpOldMode [SEM_FLAGS_DWORD*]

func CloseHandle
  BOOL
  hObject HANDLE

func DuplicateHandle
  BOOL
  hSourceProcessHandle [ProcessHandle]
  hSourceHandle [PROCESS_THREAD_HANDLE]
  hTargetProcessHandle [ProcessHandle]
  lpTargetHandle LPHANDLE
  dwDesiredAccess [StandardAccessRights]
  bInheritHandle BOOL
  dwOptions [DUPLICATE_HANDLE_FLAGS]

func GetHandleInformation
  BOOL
  hObject HANDLE
  lpdwFlags [HANDLE_FLAGS*]

func SetHandleInformation
  BOOL
  hObject HANDLE
  dwMask [HANDLE_FLAGS]
  dwFlags [HANDLE_FLAGS]

func SetHandleCount
  UINT
  uNumber UINT

func CreateMailslot bothCharset
  success NotEqual=0
  HANDLE
  lpName LPCTSTR
  nMaxMessageSize DWORD
  lReadTimeout DWORD
  lpSecurityAttributes LPSECURITY_ATTRIBUTES

func GetMailslotInfo
  BOOL
  hMailslot HANDLE
  lpMaxMessageSize LPDWORD
  lpNextSize LPDWORD
  lpMessageCount LPDWORD
  lpReadTimeout LPDWORD

func SetMailslotInfo
  BOOL
  hMailslot HANDLE
  lReadTimeout DWORD

func AdjustCalendarDate
  BOOL
  lpCalDateTime LPCALDATETIME
  calUnit CALDATETIME_DATEUNIT
  amount INT

func CompareString bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwCmpFlags [NLS_STRING_COMPARE_FLAGS]
  lpString1 LPCTSTR
  cchCount1 int
  lpString2 LPCTSTR
  cchCount2 int

func CompareStringEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwCmpFlags [NLS_STRING_COMPARE_FLAGS]
  lpString1 LPCWSTR
  cchCount1 int
  lpString2 LPCWSTR
  cchCount2 int
  lpVersionInformation LPNLSVERSIONINFO
  lpReserved LPVOID
  lParam LPARAM

func CompareStringOrdinal
  success NotEqual=0
  int
  lpString1 LPCWSTR
  cchCount1 int
  lpString2 LPCWSTR
  cchCount2 int
  bIgnoreCase BOOL

func ConvertCalDateTimeToSystemTime
  BOOL
  lpCalDateTime "const LPCALDATETIME"
  lpSysTime SYSTEMTIME*

func ConvertDefaultLocale
  success NotEqual=0
  LCID
  Locale LCID

func ConvertSystemTimeToCalDateTime
  BOOL
  lpSysTime "const SYSTEMTIME"
  calId CALID
  lpCalDateTime LPCALDATETIME

func EnumCalendarInfo bothCharset
  BOOL
  pCalInfoEnumProc CALINFO_ENUMPROC
  Locale LCID
  Calendar CALID
  CalType CALTYPE

func EnumCalendarInfoEx bothCharset
  BOOL
  pCalInfoEnumProcEx CALINFO_ENUMPROCEX
  Locale LCID
  Calendar CALID
  CalType CALTYPE

func EnumCalendarInfoExEx
  BOOL
  pCalInfoEnumProcExEx CALINFO_ENUMPROCEXEX
  lpLocaleName LPCWSTR
  Calendar CALID
  lpReserved LPCWSTR
  CalType CALTYPE
  lParam LPARAM

func EnumDateFormats bothCharset
  BOOL
  lpDateFmtEnumProc DATEFMT_ENUMPROC
  Locale LCID
  dwFlags [NLS_DATE_FLAGS]

func EnumDateFormatsEx bothCharset
  BOOL
  lpDateFmtEnumProcEx DATEFMT_ENUMPROCEX
  Locale LCID
  dwFlags [NLS_DATE_FLAGS]

func EnumDateFormatsExEx
  BOOL
  lpDateFmtEnumProcExEx DATEFMT_ENUMPROCEXEX
  lpLocaleName LPCWSTR
  dwFlags [NLS_DATE_FLAGS]
  lParam LPARAM

func EnumLanguageGroupLocales bothCharset
  BOOL
  lpLangGroupLocaleEnumProc LANGGROUPLOCALE_ENUMPROC
  LanguageGroup LGRPID
  dwFlags DWORD
  lParam LONG_PTR

func EnumSystemCodePages bothCharset
  BOOL
  lpCodePageEnumProc CODEPAGE_ENUMPROC
  dwFlags [CodePageEnumerationFlags]

func EnumSystemGeoID
  BOOL
  GeoClass GEOCLASS
  ParentGeoId GEOID
  lpGeoEnumProc GEO_ENUMPROC

func EnumSystemLanguageGroups bothCharset
  BOOL
  lpLanguageGroupEnumProc LANGUAGEGROUP_ENUMPROC
  dwFlags [LANGUAGE_GROUP_FLAGS]
  lParam LONG_PTR

func EnumSystemLocales bothCharset
  BOOL
  lpLocaleEnumProc LOCALE_ENUMPROC
  dwFlags [LocaleEnumerationFlags]

func EnumSystemLocalesEx
  BOOL
  lpLocaleEnumProcEx LOCALE_ENUMPROCEX
  dwFlags [EnumSystemLocalesExFlags]
  lParam LPARAM
  lpReserved LPVOID

func EnumTimeFormats bothCharset
  BOOL
  lpTimeFmtEnumProc TIMEFMT_ENUMPROC
  Locale LCID
  dwFlags [NLS_TIME_FLAGS]

func EnumTimeFormatsEx
  BOOL
  lpTimeFmtEnumProcEx TIMEFMT_ENUMPROCEX
  lpLocaleName LPCWSTR
  dwFlags [NLS_TIME_FLAGS]
  lParam LPARAM

func FindNLSString
  success NotEqual=0
  int
  Locale LCID
  dwFindNLSStringFlags [NLS_STRING_FIND_FLAGS]
  lpStringSource LPCWSTR
  cchSource int
  lpStringValue LPCWSTR
  cchValue int
  pcchFound LPINT

func FindNLSStringEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFindNLSStringFlags [NLS_STRING_FIND_FLAGS]
  lpStringSource LPCWSTR
  cchSource int
  lpStringValue LPCWSTR
  cchValue int
  pcchFound LPINT
  lpVersionInformation LPNLSVERSIONINFO
  lpReserved LPVOID
  lParam LPARAM

func FindStringOrdinal
  success NotEqual=0
  int
  dwFindStringOrdinalFlags [NLS_FIND_FLAGS]
  lpStringSource LPCWSTR
  cchSource int
  lpStringValue LPCWSTR
  cchValue int
  bIgnoreCase BOOL

func FoldString bothCharset
  success NotEqual=0
  int
  dwMapFlags [MappingFlags]
  lpSrcStr LPCTSTR
  cchSrc int
  lpDestStr LPTSTR outputOnly
  cchDest int

func GetACP
  success NotEqual=0
  UINT

func GetCalendarDateFormatEx
  BOOL
  lpszLocale LPCWSTR
  dwFlags [NLS_DATE_FLAGS]
  lpCalDateTime "const LPCALDATETIME"
  lpFormat LPCWSTR
  lpDateStr LPWSTR
  cchDate int

func GetCalendarInfo bothCharset
  success NotEqual=0
  int
  Locale LCID
  Calendar CALID
  CalType CALTYPE
  lpCalData LPTSTR
  cchData int
  lpValue LPDWORD

func GetCalendarInfoEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  Calendar CALID
  lpReserved LPCWSTR
  CalType CALTYPE
  lpCalData LPWSTR
  cchData int
  lpValue LPDWORD

func GetCalendarSupportedDateRange
  BOOL
  Calendar CALID
  lpCalMinDateTime LPCALDATETIME
  lpCalMaxDateTime LPCALDATETIME

func GetCPInfo
  BOOL
  CodePage [CodePageEnum]
  lpCPInfo LPCPINFO

func GetCPInfoEx bothCharset
  BOOL
  CodePage [CodePageEnum]
  dwFlags DWORD
  lpCPInfoEx LPCPINFOEX

func GetCurrencyFormat bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpValue LPCTSTR
  lpFormat "const CURRENCYFMT*"
  lpCurrencyStr LPTSTR
  cchCurrency int

func GetCurrencyFormatEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpValue LPCWSTR
  lpFormat "const CURRENCYFMT*"
  lpCurrencyStr LPWSTR
  cchCurrency int

func GetDateFormat bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwFlags [NLS_DATE_FLAGS]
  lpDate "const SYSTEMTIME*"
  lpFormat LPCTSTR
  lpDateStr LPTSTR outputOnly
  cchDate int

func GetDateFormatEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFlags [NLS_DATE_FLAGS]
  lpDate "const SYSTEMTIME*"
  lpFormat LPCWSTR
  lpDateStr LPWSTR outputOnly
  cchDate int
  lpCalendar LPCWSTR

func GetDurationFormat
  success NotEqual=0
  int
  Locale LCID
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpDuration "const SYSTEMTIME*"
  ullDuration ULONGLONG
  lpFormat LPCWSTR
  lpDurationStr LPWSTR outputOnly
  cchDuration int

func GetDurationFormatEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpDuration "const SYSTEMTIME*"
  ullDuration ULONGLONG
  lpFormat LPCWSTR
  lpDurationStr LPWSTR outputOnly
  cchDuration int

func GetGeoInfo bothCharset
  success NotEqual=0
  int
  Location GEOID
  GeoType GEOTYPE
  lpGeoData LPTSTR
  cchData int
  LangId LANGID

func GetLocaleInfo bothCharset
  success NotEqual=0
  int
  Locale LCID
  LCType LCTYPE
  lpLCData LPTSTR outputOnly
  cchData int

func GetLocaleInfoEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  LCType LCTYPE
  lpLCData LPWSTR outputOnly
  cchData int

func GetNLSVersion
  BOOL
  Function NLS_FUNCTION
  Locale LCID
  lpVersionInformation LPNLSVERSIONINFO

func GetNLSVersionEx
  BOOL
  function NLS_FUNCTION
  lpLocaleName LPCWSTR
  lpVersionInformation LPNLSVERSIONINFOEX

func GetNumberFormat bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpValue LPCTSTR
  lpFormat "const NUMBERFMT*"
  lpNumberStr LPTSTR outputOnly
  cchNumber int

func GetNumberFormatEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFlags [LOCALE_NOUSEROVERRIDE_FLAG]
  lpValue LPCWSTR
  lpFormat "const NUMBERFMT*"
  lpNumberStr LPWSTR
  cchNumber int

func GetOEMCP
  success NotEqual=0
  UINT

func GetStringScripts
  success NotEqual=0
  int
  dwFlags [GET_STRING_SCRIPTS_FLAGS]
  lpString LPCWSTR
  cchString int
  lpScripts LPWSTR
  cchScripts int

func GetStringTypeA
  BOOL
  Locale LCID
  dwInfoType [CharacterTypeFlag]
  lpSrcStr LPCSTR
  cchSrc int
  lpCharType LPWORD

func GetStringTypeEx bothCharset
  BOOL
  Locale LCID
  dwInfoType [CharacterTypeFlag]
  lpSrcStr LPCTSTR
  cchSrc int
  lpCharType LPWORD

func GetStringTypeW
  BOOL
  dwInfoType [CharacterTypeFlag]
  lpSrcStr LPCWSTR
  cchSrc int
  lpCharType LPWORD

func GetSystemDefaultLangID
  success NotEqual=0
  LANGID

func GetSystemDefaultLCID
  success NotEqual=0
  LCID

func GetSystemDefaultLocaleName
  success NotEqual=0
  int
  lpLocaleName LPWSTR outputOnly
  cchLocaleName int

func GetThreadLocale
  success NotEqual=0
  LCID

func GetTimeFormat bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwFlags [NLS_TIME_FLAGS]
  lpTime "const SYSTEMTIME*"
  lpFormat LPCTSTR
  lpTimeStr LPTSTR outputOnly
  cchTime int

func GetTimeFormatEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwFlags [NLS_TIME_FLAGS]
  lpTime "const SYSTEMTIME*"
  lpFormat LPCWSTR
  lpTimeStr LPWSTR outputOnly
  cchTime int

func GetUserDefaultLangID
  success NotEqual=0
  LANGID

func GetUserDefaultLCID
  success NotEqual=0
  LCID

func GetUserDefaultLocaleName
  success NotEqual=0
  int
  lpLocaleName LPWSTR outputOnly
  cchLocaleName int

func GetUserGeoID
  success NotEqual=0
  GEOID
  GeoClass GEOCLASS

func IsCalendarLeapYear
  BOOL
  calId CALID
  year UINT
  era UINT

func IsNLSDefinedString
  BOOL
  Function NLS_FUNCTION
  dwFlags DWORD
  lpVersionInformation LPNLSVERSIONINFO
  lpString LPCWSTR
  cchStr INT

func IsValidCodePage
  BOOL
  CodePage [CodePageEnum]

func IsValidLanguageGroup
  BOOL
  LanguageGroup LGRPID
  dwFlags [LANGUAGE_GROUP_FLAGS]

func IsValidLocale
  BOOL
  Locale LCID
  dwFlags [LocaleEnumerationFlags]

func IsValidLocaleName
  BOOL
  lpLocaleName LPCWSTR

func IsValidNLSVersion
  DWORD
  function NLS_FUNCTION
  lpLocaleName LPCWSTR
  lpVersionInformation LPNLSVERSIONINFOEX

func LCIDToLocaleName
  success NotEqual=0
  int
  Locale LCID
  lpName LPWSTR outputOnly
  cchName int
  dwFlags [LOCALE_NAME_FLAGS]

func LCMapString bothCharset
  success NotEqual=0
  int
  Locale LCID
  dwMapFlags [LocaleMappingFlags]
  lpSrcStr LPCTSTR
  cchSrc int
  lpDestStr LPTSTR outputOnly
  cchDest int

func LCMapStringEx
  success NotEqual=0
  int
  lpLocaleName LPCWSTR
  dwMapFlags [LocaleMappingFlags]
  lpSrcStr LPCWSTR
  cchSrc int
  lpDestStr LPWSTR outputOnly
  cchDest int
  lpVersionInformation LPNLSVERSIONINFO
  lpReserved LPVOID
  lParam LPARAM

func LoadStringByReference
  BOOL
  Flags [LoadStringByReference_Flags]
  Language PCWSTR
  SourceString PCWSTR
  Buffer PWSTR outputOnly
  cchBuffer ULONG
  Directory PCWSTR
  pcchBufferOut PULONG

func LocaleNameToLCID
  success NotEqual=0
  LCID
  lpName LPCWSTR
  dwFlags [LOCALE_NAME_FLAGS]

func NotifyUILanguageChange
  BOOL
  dwFlags DWORD
  pcwstrNewLanguage PCWSTR
  pcwstrPreviousLanguage PCWSTR
  dwReserved DWORD
  pdwStatusRtrn PDWORD

func ResolveLocaleName
  success NotEqual=0
  int
  lpNameToResolve LPCWSTR
  lpLocaleName LPWSTR outputOnly
  cchLocaleName int

func SetCalendarInfo bothCharset
  BOOL
  Locale LCID
  Calendar CALID
  CalType CALTYPE
  lpCalData LPCTSTR

func SetLocaleInfo bothCharset
  BOOL
  Locale LCID
  LCType LCTYPE
  lpLCData LPCTSTR

func SetThreadLocale
  BOOL
  Locale LCID

func SetUserGeoID
  BOOL
  GeoId GEOID

func UpdateCalendarDayOfWeek
  BOOL
  lpCalDateTime LPCALDATETIME

func VerifyScripts
  BOOL
  dwFlags [VERIFY_SCRIPTS_FLAGS]
  lpLocaleScripts LPCWSTR
  cchLocaleScripts int
  lpTestScripts LPCWSTR
  cchTestScripts int

func GetDevicePowerState
  BOOL
  hDevice HANDLE
  pfOn BOOL*

func GetSystemPowerStatus
  BOOL
  lpSystemPowerStatus LPSYSTEM_POWER_STATUS

func IsSystemResumeAutomatic
  BOOL

func PowerClearRequest
  BOOL
  PowerRequest HANDLE
  RequestType POWER_REQUEST_TYPE

func PowerCreateRequest
  success NotEqual=0
  HANDLE
  Context PREASON_CONTEXT

func PowerSetRequest
  BOOL
  PowerRequest HANDLE
  RequestType POWER_REQUEST_TYPE

func QueryUnbiasedInterruptTime
  BOOL
  UnbiasedTime PULONGLONG

func SetThreadExecutionState
  success NotEqual=0
  EXECUTION_STATE
  esFlags EXECUTION_STATE

func RequestWakeupLatency
  BOOL
  latency LATENCY_TIME

func SetSystemPowerState
  BOOL
  fSuspend BOOL
  fForce BOOL

func BeginUpdateResource bothCharset
  success NotEqual=0
  HANDLE
  pFileName LPCTSTR
  bDeleteExistingResources BOOL

func EndUpdateResource bothCharset
  BOOL
  hUpdate HANDLE
  fDiscard BOOL

func EnumResourceLanguages bothCharset
  BOOL
  hModule HMODULE
  lpType LPCTSTR
  lpName LPCTSTR
  lpEnumFunc ENUMRESLANGPROC
  lParam LONG_PTR

func EnumResourceLanguagesEx bothCharset
  BOOL
  hModule HMODULE
  lpType LPCTSTR
  lpName LPCTSTR
  lpEnumFunc ENUMRESLANGPROC
  lParam LONG_PTR
  dwFlags [RESOURCE_ENUM_FLAGS]
  LangId LANGID

func EnumResourceNames bothCharset
  BOOL
  hModule HMODULE
  lpszType LPCTSTR
  lpEnumFunc ENUMRESNAMEPROC
  lParam LONG_PTR

func EnumResourceNamesEx bothCharset
  BOOL
  hModule HMODULE
  lpszType LPCTSTR
  lpEnumFunc ENUMRESNAMEPROC
  lParam LONG_PTR
  dwFlags [RESOURCE_ENUM_FLAGS]
  LangId LANGID

func EnumResourceTypes bothCharset
  BOOL
  hModule HMODULE
  lpEnumFunc ENUMRESTYPEPROC
  lParam LONG_PTR

func EnumResourceTypesEx bothCharset
  BOOL
  hModule HMODULE
  lpEnumFunc ENUMRESTYPEPROC
  lParam LONG_PTR
  dwFlags [RESOURCE_ENUM_FLAGS]
  LangId LANGID

func FindResource bothCharset
  success NotEqual=0
  HRSRC
  hModule HMODULE
  lpName LPCTSTR
  lpType LPCTSTR

func FindResourceEx bothCharset
  success NotEqual=0
  HRSRC
  hModule HMODULE
  lpType LPCTSTR
  lpName LPCTSTR
  wLanguage WORD

func FreeResource
  success Equal=0
  BOOL
  hglbResource HGLOBAL

func LoadResource
  success NotEqual=0
  HGLOBAL
  hModule HMODULE
  hResInfo HRSRC

func LockResource
  success NotEqual=0
  LPVOID
  hResData HGLOBAL

func SizeofResource
  success NotEqual=0
  DWORD
  hModule HMODULE
  hResInfo HRSRC

func UpdateResource bothCharset
  BOOL
  hUpdate HANDLE
  lpType LPCTSTR
  lpName LPCTSTR
  wLanguage WORD
  lpData LPVOID
  cbData DWORD

func lstrcat
  success NotEqual=0
  LPSTR
  lpString1 LPSTR
  lpString2 LPSTR

func lstrcat bothCharset
  success NotEqual=0
  LPTSTR
  lpString1 LPTSTR
  lpString2 LPTSTR

func lstrcmp
  int
  lpString1 LPCSTR
  lpString2 LPCSTR

func lstrcmp bothCharset
  int
  lpString1 LPCTSTR
  lpString2 LPCTSTR

func lstrcmpi
  int
  lpString1 LPCSTR
  lpString2 LPCSTR

func lstrcmpi bothCharset
  int
  lpString1 LPCTSTR
  lpString2 LPCTSTR

func lstrcpy
  success NotEqual=0
  LPSTR
  lpString1 LPSTR
  lpString2 LPSTR

func lstrcpy bothCharset
  success NotEqual=0
  LPTSTR
  lpString1 LPTSTR
  lpString2 LPTSTR

func lstrcpyn
  success NotEqual=0
  LPSTR
  lpString1 LPSTR
  lpString2 LPCSTR
  iMaxLength int

func lstrcpyn bothCharset
  success NotEqual=0
  LPTSTR
  lpString1 LPTSTR
  lpString2 LPCTSTR
  iMaxLength int

func lstrlen
  int
  lpString LPCSTR

func lstrlen bothCharset
  int
  lpString LPCTSTR

func AddVectoredContinueHandler
  success NotEqual=0
  PVOID
  FirstHandler ULONG
  VectoredHandler PVECTORED_EXCEPTION_HANDLER

func AddVectoredExceptionHandler
  success NotEqual=0
  PVOID
  FirstHandler ULONG
  VectoredHandler PVECTORED_EXCEPTION_HANDLER

func RemoveVectoredContinueHandler
  success NotEqual=0
  ULONG
  Handler PVOID

func RemoveVectoredExceptionHandler
  success NotEqual=0
  ULONG
  Handler PVOID

func SetUnhandledExceptionFilter
  LPTOP_LEVEL_EXCEPTION_FILTER
  lpTopLevelExceptionFilter LPTOP_LEVEL_EXCEPTION_FILTER

func UnhandledExceptionFilter
  success NotEqual=0
  LONG
  ExceptionInfo EXCEPTION_POINTERS*

func RtlAddFunctionTable
  BOOLEAN
  FunctionTable PRUNTIME_FUNCTION count=EntryCount
  EntryCount DWORD
  BaseAddress DWORD64

func RtlCaptureContext
  VOID
  ContextRecord PCONTEXT

func RtlDeleteFunctionTable
  BOOLEAN
  FunctionTable PRUNTIME_FUNCTION

func RtlInstallFunctionTableCallback
  BOOLEAN
  TableIdentifier DWORD64
  BaseAddress DWORD64
  Length DWORD
  Callback PGET_RUNTIME_FUNCTION_CALLBACK
  Context PVOID
  OutOfProcessCallbackDll PCWSTR

func RtlRestoreContext
  VOID
  ContextRecord PCONTEXT
  ExceptionRecord PEXCEPTION_RECORD

func GetOverlappedResult
  BOOL
  hFile HANDLE
  lpOverlapped LPOVERLAPPED
  lpNumberOfBytesTransferred LPDWORD
  bWait BOOL

func GetOverlappedResultEx
  BOOL
  hFile HANDLE
  lpOverlapped LPOVERLAPPED
  lpNumberOfBytesTransferred LPDWORD
  dwMilliseconds DWORD
  bAlertable BOOL

func QueueUserAPC
  success NotEqual=0
  DWORD
  pfnAPC PAPCFUNC
  hThread [ThreadHandle]
  dwData ULONG_PTR

func AcquireSRWLockExclusive
  VOID
  SRWLock PSRWLOCK

func AcquireSRWLockShared
  VOID
  SRWLock PSRWLOCK

func InitializeConditionVariable
  VOID
  ConditionVariable PCONDITION_VARIABLE

func InitializeSRWLock
  VOID
  SRWLock PSRWLOCK

func ReleaseSRWLockExclusive
  VOID
  SRWLock PSRWLOCK

func ReleaseSRWLockShared
  VOID
  SRWLock PSRWLOCK

func SleepConditionVariableCS
  BOOL
  ConditionVariable PCONDITION_VARIABLE
  CriticalSection PCRITICAL_SECTION
  dwMilliseconds [WaitTimeout]

func SleepConditionVariableSRW
  BOOL
  ConditionVariable PCONDITION_VARIABLE
  SRWLock PSRWLOCK
  dwMilliseconds [WaitTimeout]
  Flags [CONDITION_VARIABLE_FLAGS]

func TryAcquireSRWLockExclusive
  BOOLEAN
  SRWLock PSRWLOCK

func TryAcquireSRWLockShared
  BOOLEAN
  SRWLock PSRWLOCK

func WakeAllConditionVariable
  VOID
  ConditionVariable PCONDITION_VARIABLE

func WakeConditionVariable
  VOID
  ConditionVariable PCONDITION_VARIABLE

func DeleteCriticalSection
  void
  lpCriticalSection LPCRITICAL_SECTION

func EnterCriticalSection
  void
  lpCriticalSection LPCRITICAL_SECTION

func InitializeCriticalSection
  void
  lpCriticalSection LPCRITICAL_SECTION

func InitializeCriticalSectionAndSpinCount
  BOOL
  lpCriticalSection LPCRITICAL_SECTION
  dwSpinCount DWORD

func InitializeCriticalSectionEx
  BOOL
  lpCriticalSection LPCRITICAL_SECTION
  dwSpinCount DWORD
  Flags [CRITICAL_SECTION_FLAGS]

func LeaveCriticalSection
  void
  lpCriticalSection LPCRITICAL_SECTION

func SetCriticalSectionSpinCount
  DWORD
  lpCriticalSection LPCRITICAL_SECTION
  dwSpinCount DWORD

func TryEnterCriticalSection
  BOOL
  lpCriticalSection LPCRITICAL_SECTION

func CreateEvent bothCharset
  success NotEqual=0
  HANDLE
  lpEventAttributes LPSECURITY_ATTRIBUTES
  bManualReset BOOL
  bInitialState BOOL
  lpName LPCTSTR

func CreateEventEx bothCharset
  success NotEqual=0
  HANDLE
  lpEventAttributes LPSECURITY_ATTRIBUTES
  lpName LPCTSTR
  dwFlags [CREATE_EVENT_FLAGS]
  dwDesiredAccess [EventAccessRights]

func OpenEvent bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess [EventAccessRights]
  bInheritHandle BOOL
  lpName LPCTSTR

func PulseEvent
  BOOL
  hEvent HANDLE

func ResetEvent
  BOOL
  hEvent HANDLE

func SetEvent
  BOOL
  hEvent HANDLE

func InitOnceBeginInitialize
  BOOL
  lpInitOnce LPINIT_ONCE
  dwFlags [INIT_ONCE_FLAGS]
  fPending PBOOL
  lpContext LPVOID*

func InitOnceComplete
  BOOL
  lpInitOnce LPINIT_ONCE
  dwFlags [INIT_ONCE_FLAGS]
  lpContext LPVOID

func InitOnceExecuteOnce
  BOOL
  InitOnce PINIT_ONCE
  InitFn PINIT_ONCE_FN
  Parameter PVOID
  Context LPVOID*

func InitOnceInitialize
  VOID
  InitOnce PINIT_ONCE

func InterlockedCompareExchange
  LONG
  Destination "LONG volatile*"
  Exchange LONG
  Comparand LONG

func InterlockedCompareExchange64
  LONGLONG
  Destination "LONGLONG volatile*"
  Exchange LONGLONG
  Comparand LONGLONG

func InterlockedDecrement
  LONG
  Addend "LONG volatile*"

func InterlockedExchange
  LONG
  Target "LONG volatile*"
  Value LONG

func InterlockedExchangeAdd
  LONG
  Addend "LONG volatile*"
  Value LONG

func InterlockedIncrement
  LONG
  Addend "LONG volatile*"

func CreateMutex bothCharset
  success NotEqual=0
  HANDLE
  lpMutexAttributes LPSECURITY_ATTRIBUTES
  bInitialOwner BOOL
  lpName LPCTSTR

func CreateMutexEx bothCharset
  success NotEqual=0
  HANDLE
  lpMutexAttributes LPSECURITY_ATTRIBUTES
  lpName LPCTSTR
  dwFlags [CREATE_MUTEX_FLAGS]
  dwDesiredAccess [MutexAccessRights]

func OpenMutex bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess [MutexAccessRights]
  bInheritHandle BOOL
  lpName LPCTSTR

func ReleaseMutex
  BOOL
  hMutex HANDLE

func AddSIDToBoundaryDescriptor
  BOOL
  BoundaryDescriptor HANDLE*
  RequiredSid PSID

func AddIntegrityLabelToBoundaryDescriptor
  BOOL
  BoundaryDescriptor HANDLE*
  IntegrityLabel PSID

func ClosePrivateNamespace
  BOOLEAN
  Handle HANDLE
  Flags [PrivateNamespaceFlag]

func CreateBoundaryDescriptor bothCharset
  success NotEqual=0
  HANDLE
  Name LPCTSTR
  Flags ULONG

func CreatePrivateNamespace bothCharset
  success NotEqual=0
  HANDLE
  lpPrivateNamespaceAttributes LPSECURITY_ATTRIBUTES
  lpBoundaryDescriptor LPVOID
  lpAliasPrefix LPCTSTR

func DeleteBoundaryDescriptor
  VOID
  BoundaryDescriptor HANDLE

func OpenPrivateNamespace bothCharset
  success NotEqual=0
  HANDLE
  lpBoundaryDescriptor LPVOID
  lpAliasPrefix LPCTSTR

func CreateSemaphore bothCharset
  success NotEqual=0
  HANDLE
  lpSemaphoreAttributes LPSECURITY_ATTRIBUTES
  lInitialCount LONG
  lMaximumCount LONG
  lpName LPCTSTR

func CreateSemaphoreEx bothCharset
  success NotEqual=0
  HANDLE
  lpSemaphoreAttributes LPSECURITY_ATTRIBUTES
  lInitialCount LONG
  lMaximumCount LONG
  lpName LPCTSTR
  dwFlags DWORD
  dwDesiredAccess [SemaphoreAccessRights]

func OpenSemaphore bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess [SemaphoreAccessRights]
  bInheritHandle BOOL
  lpName LPCTSTR

func ReleaseSemaphore
  BOOL
  hSemaphore HANDLE
  lReleaseCount LONG
  lpPreviousCount LPLONG

func InitializeSListHead
  void
  ListHead PSLIST_HEADER

func InterlockedFlushSList
  PSLIST_ENTRY
  ListHead PSLIST_HEADER

func InterlockedPopEntrySList
  PSLIST_ENTRY
  ListHead PSLIST_HEADER

func InterlockedPushEntrySList
  PSLIST_ENTRY
  ListHead PSLIST_HEADER
  ListEntry PSLIST_ENTRY

func InterlockedPushListSList
  success NotEqual=0
  PSLIST_ENTRY
  ListHead PSLIST_HEADER
  List PSLIST_ENTRY
  ListEnd PSLIST_ENTRY
  Count ULONG

func InterlockedPushListSListEx
  success NotEqual=0
  PSLIST_ENTRY
  ListHead PSLIST_HEADER
  List PSLIST_ENTRY
  ListEnd PSLIST_ENTRY
  Count ULONG

func QueryDepthSList
  USHORT
  ListHead PSLIST_HEADER

func DeleteSynchronizationBarrier
  BOOL
  lpBarrier LPSYNCHRONIZATION_BARRIER

func EnterSynchronizationBarrier
  BOOL
  lpBarrier LPSYNCHRONIZATION_BARRIER
  dwFlags [SYNCHRONIZATION_BARRIER_FLAGS]

func InitializeSynchronizationBarrier
  BOOL
  lpBarrier LPSYNCHRONIZATION_BARRIER
  lTotalThreads LONG
  lSpinCount LONG

func ChangeTimerQueueTimer
  BOOL
  TimerQueue HANDLE
  Timer HANDLE
  DueTime ULONG
  Period ULONG

func CreateTimerQueue
  success NotEqual=0
  HANDLE

func CreateTimerQueueTimer
  BOOL
  phNewTimer PHANDLE
  TimerQueue HANDLE
  Callback WAITORTIMERCALLBACK
  Parameter PVOID
  DueTime DWORD
  Period DWORD
  Flags [WorkItemFlags]

func DeleteTimerQueue
  BOOL
  TimerQueue HANDLE

func DeleteTimerQueueEx
  BOOL
  TimerQueue HANDLE
  CompletionEvent HANDLE

func DeleteTimerQueueTimer
  BOOL
  TimerQueue HANDLE
  Timer HANDLE
  CompletionEvent HANDLE

func RegisterWaitForSingleObject
  BOOL
  phNewWaitObject PHANDLE
  hObject HANDLE
  Callback WAITORTIMERCALLBACK
  Context PVOID
  dwMilliseconds [WaitTimeout] display=ULONG
  dwFlags [WorkItemFlags]

func SignalObjectAndWait
  success NotEqual=0
  DWORD
  hObjectToSignal HANDLE
  hObjectToWaitOn HANDLE
  dwMilliseconds [WaitTimeout]
  bAlertable BOOL

func UnregisterWait
  BOOL
  WaitHandle HANDLE

func UnregisterWaitEx
  BOOL
  WaitHandle HANDLE
  CompletionEvent HANDLE

func WaitForMultipleObjects
  [WAIT_RESULT]
  nCount DWORD
  lpHandles "const HANDLE*" count=nCount
  bWaitAll BOOL
  dwMilliseconds [WaitTimeout]

func WaitForMultipleObjectsEx
  [WAIT_RESULT]
  nCount DWORD
  lpHandles "const HANDLE*" count=nCount
  bWaitAll BOOL
  dwMilliseconds [WaitTimeout]
  bAlertable BOOL

func WaitForSingleObject
  [WAIT_RESULT]
  hHandle HANDLE
  dwMilliseconds [WaitTimeout]

func WaitForSingleObjectEx
  [WAIT_RESULT]
  hHandle HANDLE
  dwMilliseconds [WaitTimeout]
  bAlertable BOOL

func WaitOnAddress
  BOOL
  Address "VOID volatile*"
  CompareAddress PVOID
  AddressSize SIZE_T
  dwMilliseconds DWORD

func WakeByAddressAll
  VOID
  Address PVOID

func WakeByAddressSingle
  VOID
  Address PVOID

func CancelWaitableTimer
  BOOL
  hTimer HANDLE

func CreateWaitableTimer bothCharset
  success NotEqual=0
  HANDLE
  lpTimerAttributes LPSECURITY_ATTRIBUTES
  bManualReset BOOL
  lpTimerName LPCTSTR

func CreateWaitableTimerEx bothCharset
  success NotEqual=0
  HANDLE
  lpTimerAttributes LPSECURITY_ATTRIBUTES
  lpTimerName LPCTSTR
  dwFlags [CREATE_WAITABLE_TIMER_FLAGS]
  dwDesiredAccess [TimerAccessRights]

func OpenWaitableTimer bothCharset
  success NotEqual=0
  HANDLE
  dwDesiredAccess [TimerAccessRights]
  bInheritHandle BOOL
  lpTimerName LPCTSTR

func SetWaitableTimer
  BOOL
  hTimer HANDLE
  pDueTime "const LARGE_INTEGER*"
  lPeriod LONG
  pfnCompletionRoutine PTIMERAPCROUTINE
  lpArgToCompletionRoutine LPVOID
  fResume BOOL

func SetWaitableTimerEx
  BOOL
  hTimer HANDLE
  lpDueTime "const LARGE_INTEGER*"
  lPeriod LONG
  pfnCompletionRoutine PTIMERAPCROUTINE
  lpArgToCompletionRoutine LPVOID
  WakeContext PREASON_CONTEXT
  TolerableDelay ULONG

func DnsHostnameToComputerName bothCharset
  BOOL
  Hostname LPCTSTR
  ComputerName LPTSTR
  nSize LPDWORD

func EnumSystemFirmwareTables
  success NotEqual=0
  UINT
  FirmwareTableProviderSignature DWORD
  pFirmwareTableBuffer PVOID
  BufferSize DWORD

func ExpandEnvironmentStrings bothCharset
  success NotEqual=0
  DWORD
  lpSrc LPCTSTR
  lpDst LPTSTR outputOnly
  nSize DWORD

func GetComputerName bothCharset
  BOOL
  lpBuffer LPTSTR outputOnly
  lpnSize LPDWORD

func GetComputerNameEx bothCharset
  BOOL
  NameType COMPUTER_NAME_FORMAT
  lpBuffer LPTSTR outputOnly
  lpnSize LPDWORD

func GetFirmwareEnvironmentVariable bothCharset
  success NotEqual=0
  DWORD
  lpName LPCTSTR
  lpGuid LPCTSTR
  pBuffer PVOID
  nSize DWORD

func GetFirmwareEnvironmentVariableEx bothCharset
  success NotEqual=0
  DWORD
  lpName LPCTSTR
  lpGuid LPCTSTR
  pBuffer PVOID
  nSize DWORD
  pdwAttribubutes PDWORD

func GetFirmwareType
  BOOL
  FirmwareType PFIRMWARE_TYPE

func GetNativeSystemInfo
  void
  lpSystemInfo LPSYSTEM_INFO

func GetProductInfo
  BOOL
  dwOSMajorVersion DWORD
  dwOSMinorVersion DWORD
  dwSpMajorVersion DWORD
  dwSpMinorVersion DWORD
  pdwReturnedProductType [ProductType*]

func GetSystemDirectory bothCharset
  success NotEqual=0
  UINT
  lpBuffer LPTSTR outputOnly
  uSize UINT

func GetSystemFirmwareTable
  success NotEqual=0
  UINT
  FirmwareTableProviderSignature DWORD
  FirmwareTableID DWORD
  pFirmwareTableBuffer PVOID
  BufferSize DWORD

func GetSystemInfo
  void
  lpSystemInfo LPSYSTEM_INFO

func GetSystemRegistryQuota
  BOOL
  pdwQuotaAllowed PDWORD
  pdwQuotaUsed PDWORD

func GetSystemWindowsDirectory bothCharset
  success NotEqual=0
  UINT
  lpBuffer LPTSTR outputOnly
  uSize UINT

func GetSystemWow64Directory bothCharset
  success NotEqual=0
  UINT
  lpBuffer LPTSTR outputOnly
  uSize UINT

func GetVersion
  success NotEqual=0
  DWORD

func GetVersionEx bothCharset
  BOOL
  lpVersionInfo LPOSVERSIONINFO

func GetWindowsDirectory bothCharset
  success NotEqual=0
  UINT
  lpBuffer LPTSTR outputOnly
  uSize UINT

func IsProcessorFeaturePresent
  BOOL
  ProcessorFeature [ProcessorFeatureEnum]

func SetComputerName bothCharset
  BOOL
  lpComputerName LPCTSTR

func SetComputerNameEx bothCharset
  BOOL
  NameType COMPUTER_NAME_FORMAT
  lpBuffer LPCTSTR

func SetFirmwareEnvironmentVariable bothCharset
  BOOL
  lpName LPCTSTR
  lpGuid LPCTSTR
  pBuffer PVOID
  nSize DWORD

func VerifyVersionInfo bothCharset
  BOOL
  lpVersionInfo LPOSVERSIONINFOEX
  dwTypeMask [NtVerType]
  dwlConditionMask DWORDLONG

func VerSetConditionMask
  success NotEqual=0
  ULONGLONG
  dwlConditionMask ULONGLONG
  dwTypeBitMask [NtVerType]
  dwConditionMask [VerOperator]

func BackupRead
  BOOL
  hFile HANDLE
  lpBuffer LPBYTE
  nNumberOfBytesToRead DWORD
  lpNumberOfBytesRead LPDWORD
  bAbort BOOL
  bProcessSecurity BOOL
  lpContext LPVOID*

func BackupSeek
  BOOL
  hFile HANDLE
  dwLowBytesToSeek DWORD
  dwHighBytesToSeek DWORD
  lpdwLowByteSeeked LPDWORD
  lpdwHighByteSeeked LPDWORD
  lpContext LPVOID*

func BackupWrite
  BOOL
  hFile HANDLE
  lpBuffer LPBYTE
  nNumberOfBytesToWrite DWORD
  lpNumberOfBytesWritten LPDWORD
  bAbort BOOL
  bProcessSecurity BOOL
  lpContext LPVOID*

func CreateTapePartition
  [ERROR_CODE]
  hDevice HANDLE
  dwPartitionMethod DWORD
  dwCount DWORD
  dwSize DWORD

func EraseTape
  [ERROR_CODE]
  hDevice HANDLE
  dwEraseType DWORD
  bImmediate BOOL

func GetTapeParameters
  [ERROR_CODE]
  hDevice HANDLE
  dwOperation DWORD
  lpdwSize LPDWORD
  lpTapeInformation LPVOID

func GetTapePosition
  [ERROR_CODE]
  hDevice HANDLE
  dwPositionType DWORD
  lpdwPartition LPDWORD
  lpdwOffsetLow LPDWORD
  lpdwOffsetHigh LPDWORD

func GetTapeStatus
  [ERROR_CODE]
  hDevice HANDLE

func PrepareTape
  [ERROR_CODE]
  hDevice HANDLE
  dwOperation DWORD
  bImmediate BOOL

func SetTapeParameters
  [ERROR_CODE]
  hDevice HANDLE
  dwOperation DWORD
  lpTapeInformation LPVOID

func SetTapePosition
  [ERROR_CODE]
  hDevice HANDLE
  dwPositionMethod DWORD
  dwPartition DWORD
  dwOffsetLow DWORD
  dwOffsetHigh DWORD
  bImmediate BOOL

func WriteTapemark
  [ERROR_CODE]
  hDevice HANDLE
  dwTapemarkType DWORD
  dwTapemarkCount DWORD
  bImmediate BOOL

func ProcessIdToSessionId
  BOOL
  dwProcessId DWORD
  pSessionId DWORD*

func WTSGetActiveConsoleSessionId
  success NotEqual=0
  DWORD

func GetSystemTime
  void
  lpSystemTime LPSYSTEMTIME

func GetSystemTimeAdjustment
  BOOL
  lpTimeAdjustment PDWORD
  lpTimeIncrement PDWORD
  lpTimeAdjustmentDisabled PBOOL

func SetSystemTime
  BOOL
  lpSystemTime "const SYSTEMTIME*"

func SetSystemTimeAdjustment
  BOOL
  dwTimeAdjustment DWORD
  bTimeAdjustmentDisabled BOOL

func FileTimeToLocalFileTime
  BOOL
  lpFileTime "const FILETIME*"
  lpLocalFileTime LPFILETIME

func GetDynamicTimeZoneInformation
  success NotEqual=0
  DWORD
  pTimeZoneInformation PDYNAMIC_TIME_ZONE_INFORMATION

func GetLocalTime
  void
  lpSystemTime LPSYSTEMTIME

func GetTimeZoneInformation
  success NotEqual=0
  DWORD
  lpTimeZoneInformation LPTIME_ZONE_INFORMATION

func GetTimeZoneInformationForYear
  BOOL
  wYear USHORT
  pdtzi PDYNAMIC_TIME_ZONE_INFORMATION
  ptzi LPTIME_ZONE_INFORMATION

func SetDynamicTimeZoneInformation
  BOOL
  lpTimeZoneInformation "const DYNAMIC_TIME_ZONE_INFORMATION*"

func SetLocalTime
  BOOL
  lpSystemTime "const SYSTEMTIME*"

func SetTimeZoneInformation
  BOOL
  lpTimeZoneInformation "const TIME_ZONE_INFORMATION*"

func SystemTimeToTzSpecificLocalTime
  BOOL
  lpTimeZone LPTIME_ZONE_INFORMATION
  lpUniversalTime LPSYSTEMTIME
  lpLocalTime LPSYSTEMTIME

func TzSpecificLocalTimeToSystemTime
  BOOL
  lpTimeZoneInformation LPTIME_ZONE_INFORMATION
  lpLocalTime LPSYSTEMTIME
  lpUniversalTime LPSYSTEMTIME

func CompareFileTime
  LONG
  lpFileTime1 "const FILETIME*"
  lpFileTime2 "const FILETIME*"

func FileTimeToSystemTime
  BOOL
  lpFileTime "const FILETIME*"
  lpSystemTime LPSYSTEMTIME

func GetFileTime
  BOOL
  hFile HANDLE
  lpCreationTime LPFILETIME
  lpLastAccessTime LPFILETIME
  lpLastWriteTime LPFILETIME

func GetSystemTimeAsFileTime
  void
  lpSystemTimeAsFileTime LPFILETIME

func GetSystemTimePreciseAsFileTime
  VOID
  lpSystemTimeAsFileTime LPFILETIME

func LocalFileTimeToFileTime
  BOOL
  lpLocalFileTime "const FILETIME*"
  lpFileTime LPFILETIME

func SetFileTime
  BOOL
  hFile HANDLE
  lpCreationTime "const FILETIME*"
  lpLastAccessTime "const FILETIME*"
  lpLastWriteTime "const FILETIME*"

func SystemTimeToFileTime
  BOOL
  lpSystemTime "const SYSTEMTIME*"
  lpFileTime LPFILETIME

func DosDateTimeToFileTime
  BOOL
  wFatDate WORD
  wFatTime WORD
  lpFileTime LPFILETIME

func FileTimeToDosDateTime
  BOOL
  lpFileTime "const FILETIME*"
  lpFatDate LPWORD
  lpFatTime LPWORD

func GetSystemTimes
  BOOL
  lpIdleTime LPFILETIME
  lpKernelTime LPFILETIME
  lpUserTime LPFILETIME

func GetTickCount
  success NotEqual=0
  DWORD

func GetTickCount64
  success NotEqual=0
  ULONGLONG

func QueryPerformanceCounter
  BOOL
  lpPerformanceCount LARGE_INTEGER*

func QueryPerformanceFrequency
  BOOL
  lpFrequency LARGE_INTEGER*

func IsDBCSLeadByte
  BOOL
  TestChar BYTE

func IsDBCSLeadByteEx
  BOOL
  CodePage [CodePageEnum]
  TestChar BYTE

func MultiByteToWideChar
  success NotEqual=0
  int
  CodePage [CodePageEnum]
  dwFlags [MultiByteFlags]
  lpMultiByteStr LPCSTR
  cbMultiByte int
  lpWideCharStr LPWSTR outputOnly
  cchWideChar int

func WideCharToMultiByte
  success NotEqual=0
  int
  CodePage [CodePageEnum]
  dwFlags [WideCharFlags]
  lpWideCharStr LPCWSTR
  cchWideChar int
  lpMultiByteStr LPSTR outputOnly
  cbMultiByte int
  lpDefaultChar LPCSTR
  lpUsedDefaultChar LPBOOL

func VerLanguageName bothCharset
  success NotEqual=0
  DWORD
  wLang DWORD
  szLang LPTSTR outputOnly
  cchLang DWORD

func RaiseFailFastException
  VOID
  pExceptionRecord PEXCEPTION_RECORD
  pContextRecord PCONTEXT
  dwFlags [FAIL_FAST_EXCEPTION_FLAGS]

func WerGetFlags
  HRESULT
  hProcess [ProcessHandle]
  pdwFlags [WER_FAULT_REPORTING_FLAGS*]

func WerRegisterFile
  HRESULT
  pwzFile PCWSTR
  regFileType WER_REGISTER_FILE_TYPE
  dwFlags [WerFileFlags]

func WerRegisterMemoryBlock
  HRESULT
  pvAddress PVOID
  dwSize DWORD

func WerRegisterRuntimeExceptionModule
  HRESULT
  pwszOutOfProcessCallbackDll PCWSTR
  pContext PVOID

func WerSetFlags
  HRESULT
  dwFlags [WER_FAULT_REPORTING_FLAGS]

func WerUnregisterFile
  HRESULT
  pwzFilePath PCWSTR

func WerUnregisterMemoryBlock
  HRESULT
  pvAddress PVOID

func WerUnregisterRuntimeExceptionModule
  HRESULT
  pwszOutOfProcessCallbackDll PCWSTR
  pContext PVOID

func CreateDirectory bothCharset
  BOOL
  lpPathName LPCTSTR
  lpSecurityAttributes LPSECURITY_ATTRIBUTES

func CreateDirectoryEx bothCharset
  BOOL
  lpTemplateDirectory LPCTSTR
  lpNewDirectory LPCTSTR
  lpSecurityAttributes LPSECURITY_ATTRIBUTES

func CreateDirectoryTransacted bothCharset
  BOOL
  lpTemplateDirectory LPCTSTR
  lpNewDirectory LPCTSTR
  lpSecurityAttributes LPSECURITY_ATTRIBUTES
  hTransaction HANDLE

func FindCloseChangeNotification
  BOOL
  hChangeHandle HANDLE

func FindFirstChangeNotification bothCharset
  success NotEqual=0
  HANDLE
  lpPathName LPCTSTR
  bWatchSubtree BOOL
  dwNotifyFilter [FILE_NOTIFY_CHANGE_FLAGS]

func FindNextChangeNotification
  BOOL
  hChangeHandle HANDLE

func GetCurrentDirectory bothCharset
  success NotEqual=0
  DWORD
  nBufferLength DWORD
  lpBuffer LPTSTR outputOnly

func ReadDirectoryChangesW
  BOOL
  hDirectory HANDLE
  lpBuffer LPVOID postLength=lpBytesReturned
  nBufferLength DWORD
  bWatchSubtree BOOL
  dwNotifyFilter [FILE_NOTIFY_CHANGE_FLAGS]
  lpBytesReturned LPDWORD
  lpOverlapped LPOVERLAPPED
  lpCompletionRoutine LPOVERLAPPED_COMPLETION_ROUTINE

func RemoveDirectory bothCharset
  BOOL
  lpPathName LPCTSTR

func RemoveDirectoryTransacted bothCharset
  BOOL
  lpPathName LPCTSTR
  hTransaction HANDLE

func SetCurrentDirectory bothCharset
  BOOL
  lpPathName LPCTSTR

func GetDiskFreeSpace bothCharset
  BOOL
  lpRootPathName LPCTSTR
  lpSectorsPerCluster LPDWORD
  lpBytesPerSector LPDWORD
  lpNumberOfFreeClusters LPDWORD
  lpTotalNumberOfClusters LPDWORD

func GetDiskFreeSpaceEx bothCharset
  BOOL
  lpDirectoryName LPCTSTR
  lpFreeBytesAvailable PULARGE_INTEGER
  lpTotalNumberOfBytes PULARGE_INTEGER
  lpTotalNumberOfFreeBytes PULARGE_INTEGER

func DefineDosDevice bothCharset
  BOOL
  dwFlags [DDD_FLAGS]
  lpDeviceName LPCTSTR
  lpTargetPath LPCTSTR

func DeleteVolumeMountPoint bothCharset
  BOOL
  lpszVolumeMountPoint LPCTSTR

func FindFirstVolume bothCharset
  success NotEqual=0
  HANDLE
  lpszVolumeName LPTSTR
  cchBufferLength DWORD

func FindNextVolume bothCharset
  BOOL
  hFindVolume HANDLE
  lpszVolumeName LPTSTR
  cchBufferLength DWORD

func FindNextVolumeMountPoint bothCharset
  BOOL
  hFindVolumeMountPoint HANDLE
  lpszVolumeMountPoint LPTSTR
  cchBufferLength DWORD

func FindVolumeClose
  BOOL
  hFindVolume HANDLE

func FindVolumeMountPointClose
  BOOL
  hFindVolumeMountPoint HANDLE

func GetDriveType bothCharset
  success NotEqual=0
  [DRIVE_TYPE]
  lpRootPathName LPCTSTR

func GetLogicalDrives
  success NotEqual=0
  DWORD

func GetLogicalDriveStrings bothCharset
  success NotEqual=0
  DWORD
  nBufferLength DWORD
  lpBuffer LPTSTR

func GetVolumeInformation bothCharset
  BOOL
  lpRootPathName LPCTSTR
  lpVolumeNameBuffer LPTSTR outputOnly
  nVolumeNameSize DWORD
  lpVolumeSerialNumber LPDWORD outputOnly
  lpMaximumComponentLength LPDWORD
  lpFileSystemFlags [LPFILE_SYSTEM_FLAGS]
  lpFileSystemNameBuffer LPTSTR outputOnly
  nFileSystemNameSize DWORD

func GetVolumeInformationByHandleW
  BOOL
  hFile HANDLE
  lpVolumeNameBuffer LPTSTR outputOnly
  nVolumeNameSize DWORD
  lpVolumeSerialNumber LPDWORD
  lpMaximumComponentLength LPDWORD
  lpFileSystemFlags [LPFILE_SYSTEM_FLAGS]
  lpFileSystemNameBuffer LPTSTR outputOnly
  nFileSystemNameSize DWORD

func GetVolumeNameForVolumeMountPoint bothCharset
  BOOL
  lpszVolumeMountPoint LPCTSTR
  lpszVolumeName LPTSTR outputOnly
  cchBufferLength DWORD

func GetVolumePathName bothCharset
  BOOL
  lpszFileName LPCTSTR
  lpszVolumePathName LPTSTR outputOnly
  cchBufferLength DWORD

func GetVolumePathNamesForVolumeName bothCharset
  BOOL
  lpszVolumeName LPCTSTR
  lpszVolumePathNames LPTSTR outputOnly
  cchBufferLength DWORD
  lpcchReturnLength PDWORD

func QueryDosDevice bothCharset
  success NotEqual=0
  DWORD
  lpDeviceName LPCTSTR
  lpTargetPath LPTSTR outputOnly
  ucchMax DWORD

func SetVolumeLabel bothCharset
  BOOL
  lpRootPathName LPCTSTR
  lpVolumeName LPCTSTR

func FindFirstVolumeMountPoint bothCharset
  success NotEqual=0
  HANDLE
  lpszRootPathName LPTSTR
  lpszVolumeMountPoint LPTSTR outputOnly
  cchBufferLength DWORD

func SetVolumeMountPoint bothCharset
  BOOL
  lpszVolumeMountPoint LPCTSTR
  lpszVolumeName LPCTSTR

func CreatePipe
  BOOL
  hReadPipe PHANDLE
  hWritePipe PHANDLE
  lpPipeAttributes LPSECURITY_ATTRIBUTES
  nSize DWORD

func CallNamedPipe bothCharset
  BOOL
  lpNamedPipeName LPCTSTR
  lpInBuffer LPVOID length=nInBufferSize
  nInBufferSize DWORD
  lpOutBuffer LPVOID postLength=lpBytesRead
  nOutBufferSize DWORD
  lpBytesRead LPDWORD
  nTimeOut [NMPWAIT]

func ConnectNamedPipe
  BOOL
  hNamedPipe HANDLE
  lpOverlapped LPOVERLAPPED

func CreateNamedPipe bothCharset
  success NotEqual=0
  HANDLE
  lpName LPCTSTR
  dwOpenMode [PIPE_ACCESS]
  dwPipeMode [PIPE_MODE]
  nMaxInstances DWORD
  nOutBufferSize DWORD
  nInBufferSize DWORD
  nDefaultTimeOut DWORD
  lpSecurityAttributes LPSECURITY_ATTRIBUTES

func DisconnectNamedPipe
  BOOL
  hNamedPipe HANDLE

func GetNamedPipeClientComputerName bothCharset
  BOOL
  Pipe HANDLE
  ClientComputerName LPTSTR
  ClientComputerNameLength ULONG

func GetNamedPipeClientProcessId
  BOOL
  Pipe HANDLE
  ClientProcessId PULONG

func GetNamedPipeClientSessionId
  BOOL
  Pipe HANDLE
  ClientSessionId PULONG

func GetNamedPipeHandleState bothCharset
  BOOL
  hNamedPipe HANDLE
  lpState [PIPE_STATE*]
  lpCurInstances LPDWORD
  lpMaxCollectionCount LPDWORD
  lpCollectDataTimeout LPDWORD
  lpUserName LPTSTR
  nMaxUserNameSize DWORD

func GetNamedPipeInfo
  BOOL
  hNamedPipe HANDLE
  lpFlags [PIPE_TYPE*]
  lpOutBufferSize LPDWORD
  lpInBufferSize LPDWORD
  lpMaxInstances LPDWORD

func GetNamedPipeServerProcessId
  BOOL
  Pipe HANDLE
  ServerProcessId PULONG

func GetNamedPipeServerSessionId
  BOOL
  Pipe HANDLE
  ServerSessionId PULONG

func PeekNamedPipe
  BOOL
  hNamedPipe HANDLE
  lpBuffer LPVOID postLength=lpBytesRead
  nBufferSize DWORD
  lpBytesRead LPDWORD
  lpTotalBytesAvail LPDWORD
  lpBytesLeftThisMessage LPDWORD

func SetNamedPipeHandleState
  BOOL
  hNamedPipe HANDLE
  lpMode [PIPE_MODE*]
  lpMaxCollectionCount LPDWORD
  lpCollectDataTimeout LPDWORD

func TransactNamedPipe
  BOOL
  hNamedPipe HANDLE
  lpInBuffer LPVOID length=nInBufferSize
  nInBufferSize DWORD
  lpOutBuffer LPVOID postLength=lpBytesRead
  nOutBufferSize DWORD
  lpBytesRead LPDWORD
  lpOverlapped LPOVERLAPPED

func WaitNamedPipe bothCharset
  BOOL
  lpNamedPipeName LPCTSTR
  nTimeOut [NMPWAIT]

func DisableThreadProfiling
  [ERROR_CODE]
  PerformanceDataHandle HANDLE

func EnableThreadProfiling
  [ERROR_CODE]
  ThreadHandle [ThreadHandle]
  Flags [THREAD_PROFILING_FLAGS]
  HardwareCounters DWORD64
  PerformanceDataHandle HANDLE

func QueryThreadProfiling
  [ERROR_CODE]
  ThreadHandle [ThreadHandle]
  Enabled PBOOLEAN

func ReadThreadProfilingData
  [ERROR_CODE]
  PerformanceDataHandle HANDLE
  Flags [READ_THREAD_PROFILING_FLAGS]
  PerformanceData PPERFORMANCE_DATA

func BaseFormatTimeOut
  success NotEqual=0
  LARGE_INTEGER*
  pLITimeout LARGE_INTEGER*
  dwMillis DWORD

func BaseGetNamedObjectDirectory
  NTSTATUS
  phDir HANDLE*

func Basep8BitStringToDynamicUnicodeString
  BOOL
  pConvertedStr PUNICODE_STRING
  pszAnsiStr LPCSTR

func CheckElevationEnabled
  [ERROR_CODE]
  pResult BOOL*

func ConsoleMenuControl
  success NotEqual=0
  HMENU
  hConOut HANDLE
  cmdIdLow DWORD
  cmdIdHigh DWORD

func SetConsoleCursor
  BOOL
  hConsole HANDLE
  hCursor HCURSOR

func SetConsoleMaximumWindowSize
  BOOL
  hConsole HANDLE
  dwUnk DWORD

func SetStdHandleEx
  BOOL
  dwStdHandle [StdHandle]
  hNewHandle HANDLE
  phOldHandle HANDLE*

func ShowConsoleCursor
  success NotEqual=0
  int
  hConsoleOutput HANDLE
  bShow BOOL

func AddLocalAlternateComputerName
  [ERROR_CODE]
  lpDnsFQHostname LPCTSTR
  ulFlags ULONG

func DelayLoadFailureHook
  success NotEqual=0
  FARPROC
  pszDllName LPCSTR
  pszProcName LPCSTR

func ResolveDelayLoadedAPI
  success NotEqual=0
  PVOID
  ParentModuleBase [HMODULE-PVOID]
  DelayloadDescriptor PCIMAGE_DELAYLOAD_DESCRIPTOR
  FailureDllHook PDELAYLOAD_FAILURE_DLL_CALLBACK
  FailureSystemHook PDELAYLOAD_FAILURE_SYSTEM_ROUTINE
  ThunkAddress PIMAGE_THUNK_DATA
  Flags ULONG

func ResolveDelayLoadsFromDll
  NTSTATUS
  ParentBase [HMODULE-PVOID]
  TargetDllName LPCSTR
  Flags ULONG

func DecodePointer
  PVOID
  Ptr PVOID

func DecodeSystemPointer
  PVOID
  Ptr PVOID

func EncodePointer
  PVOID
  Ptr PVOID

func EncodeSystemPointer
  PVOID
  Ptr PVOID

func MulDiv
  success NotEqual=-1
  int
  nNumber int
  nNumerator int
  nDenominator int

func CheckTokenCapability
  BOOL
  TokenHandle HANDLE
  CapabilitySidToCheck PSID
  HasCapability PBOOL

func CheckTokenMembershipEx
  BOOL
  TokenHandle HANDLE
  SidToCheck PSID
  Flags [CTM_FLAGS]
  IsMember PBOOL

func AddResourceAttributeAce
  BOOL
  pAcl PACL
  dwAceRevision DWORD
  AceFlags [AceFlags]
  AccessMask [ACCESS_MASK_DWORD]
  pSid PSID
  pAttributeInfo PCLAIM_SECURITY_ATTRIBUTES_INFORMATION
  pReturnLength PDWORD

func AddScopedPolicyIDAce
  BOOL
  pAcl PACL
  dwAceRevision DWORD
  AceFlags [AceFlags]
  AccessMask [ACCESS_MASK_DWORD]
  pSid PSID

func ClosePackageInfo
  [ERROR_CODE_LONG]
  packageInfoReference PACKAGE_INFO_REFERENCE

func GetApplicationUserModelId
  [ERROR_CODE_LONG]
  hProcess HANDLE
  applicationUserModelIdLength UINT32*
  applicationUserModelId PWSTR

func GetCurrentApplicationUserModelId
  [ERROR_CODE_LONG]
  applicationUserModelIdLength UINT32*
  applicationUserModelId PWSTR

func GetCurrentPackageFamilyName
  [ERROR_CODE_LONG]
  packageFamilyNameLength UINT32*
  packageFamilyName PWSTR

func GetCurrentPackageFullName
  [ERROR_CODE_LONG]
  packageFullNameLength UINT32*
  packageFullName PWSTR

func GetCurrentPackageId
  [ERROR_CODE_LONG]
  bufferLength UINT32*
  buffer BYTE*

func GetCurrentPackageInfo
  [ERROR_CODE_LONG]
  flags [PACKAGE_FILTER_FLAGS]
  bufferLength UINT32*
  buffer BYTE*
  count UINT32*

func GetCurrentPackagePath
  [ERROR_CODE_LONG]
  pathLength UINT32*
  path PWSTR

func GetPackageFamilyName
  [ERROR_CODE_LONG]
  hProcess HANDLE
  packageFamilyNameLength UINT32*
  packageFamilyName PWSTR

func GetPackageFullName
  [ERROR_CODE_LONG]
  hProcess HANDLE
  packageFullNameLength UINT32*
  packageFullName PWSTR

func GetPackageId
  [ERROR_CODE_LONG]
  hProcess HANDLE
  bufferLength UINT32*
  pBuffer BYTE*

func GetPackageInfo
  [ERROR_CODE_LONG]
  packageInfoReference PACKAGE_INFO_REFERENCE
  flags [PACKAGE_CONSTANTS]
  bufferLength UINT32*
  buffer BYTE*
  count UINT32*

func GetPackagePath
  [ERROR_CODE_LONG]
  packageId "const PACKAGE_ID*"
  reserved "const UINT32"
  pathLength UINT32*
  path PWSTR

func GetPackagesByPackageFamily
  [ERROR_CODE_LONG]
  packageFamilyName PWSTR
  count UINT32*
  packageFullNames PWSTR*
  bufferLength UINT32*
  buffer WCHAR*

func OpenPackageInfoByFullName
  [ERROR_CODE_LONG]
  packageFullName PCWSTR
  reserved "const UINT32"
  packageInfoReference PACKAGE_INFO_REFERENCE*

func PackageFamilyNameFromFullName
  [ERROR_CODE_LONG]
  packageFullName PCWSTR
  packageFamilyNameLength UINT32*
  packageFamilyName PWSTR

func PackageFamilyNameFromId
  [ERROR_CODE_LONG]
  packageId "const PACKAGE_ID*"
  packageFamilyNameLength UINT32*
  packageFamilyName PWSTR

func PackageFullNameFromId
  [ERROR_CODE_LONG]
  packageId "const PACKAGE_ID*"
  packageFullNameLength UINT32*
  packageFullName PWSTR

func PackageIdFromFullName
  [ERROR_CODE_LONG]
  packageFullName PCWSTR
  flags [PACKAGE_INFORMATION_FLAGS]
  bufferLength UINT32*
  buffer BYTE*

func PackageNameAndPublisherIdFromFamilyName
  [ERROR_CODE_LONG]
  packageFamilyName PCWSTR
  packageNameLength UINT32*
  packageName PWSTR
  packagePublisherIdLength UINT32*
  packagePublisherId PWSTR

func K32EmptyWorkingSet
  BOOL
  hProcess [ProcessHandle]

func K32EnumDeviceDrivers
  BOOL
  lpImageBase LPVOID*
  cb DWORD
  lpcbNeeded LPDWORD

func K32EnumPageFiles bothCharset
  BOOL
  pCallbackRoutine PENUM_PAGE_CALLBACK
  lpContext LPVOID

func K32EnumProcesses
  BOOL
  pProcessIds DWORD* postLength=pBytesReturned
  cb DWORD
  pBytesReturned DWORD*

func K32EnumProcessModules
  BOOL
  hProcess [ProcessHandle]
  lphModule HMODULE*
  cb DWORD
  lpcbNeeded LPDWORD

func K32EnumProcessModulesEx
  BOOL
  hProcess [ProcessHandle]
  lphModule HMODULE*
  cb DWORD
  lpcbNeeded LPDWORD
  dwFilterFlag DWORD

func K32GetDeviceDriverBaseName bothCharset
  success NotEqual=0
  DWORD
  ImageBase LPVOID
  lpBaseName LPTSTR outputOnly
  nSize DWORD

func K32GetDeviceDriverFileName bothCharset
  success NotEqual=0
  DWORD
  ImageBase LPVOID
  lpFilename LPTSTR outputOnly
  nSize DWORD

func K32GetMappedFileName bothCharset
  success NotEqual=0
  DWORD
  hProcess [ProcessHandle]
  lpv LPVOID
  lpFilename LPTSTR outputOnly
  nSize DWORD

func K32GetModuleBaseName bothCharset
  success NotEqual=0
  DWORD
  hProcess [ProcessHandle]
  hModule HMODULE
  lpBaseName LPTSTR outputOnly
  nSize DWORD

func K32GetModuleFileNameEx bothCharset
  success NotEqual=0
  DWORD
  hProcess [ProcessHandle]
  hModule HMODULE
  lpFilename LPTSTR outputOnly
  nSize DWORD

func K32GetModuleInformation
  BOOL
  hProcess [ProcessHandle]
  hModule HMODULE
  lpmodinfo LPMODULEINFO
  cb DWORD

func K32GetPerformanceInfo
  BOOL
  pPerformanceInformation PPERFORMANCE_INFORMATION
  cb DWORD

func K32GetProcessImageFileName bothCharset
  success NotEqual=0
  DWORD
  hProcess [ProcessHandle]
  lpImageFileName LPTSTR outputOnly
  nSize DWORD

func K32GetProcessMemoryInfo
  BOOL
  Process HANDLE
  ppsmemCounters PPROCESS_MEMORY_COUNTERS
  cb DWORD

func K32GetWsChanges
  BOOL
  hProcess [ProcessHandle]
  lpWatchInfo PPSAPI_WS_WATCH_INFORMATION
  cb DWORD

func K32GetWsChangesEx
  BOOL
  hProcess [ProcessHandle]
  lpWatchInfoEx PPSAPI_WS_WATCH_INFORMATION_EX
  cb DWORD

func K32InitializeProcessForWsWatch
  BOOL
  hProcess [ProcessHandle]

func K32QueryWorkingSet
  BOOL
  hProcess [ProcessHandle]
  pv PVOID
  cb DWORD

func K32QueryWorkingSetEx
  BOOL
  hProcess [ProcessHandle]
  pv PVOID
  cb DWORD

func EnumUILanguages bothCharset
  BOOL
  lpUILanguageEnumProc UILANGUAGE_ENUMPROC
  dwFlags [EnumUILanguages_FLAGS]
  lParam LONG_PTR

func GetFileMUIInfo
  BOOL
  dwFlags [GetFileMUIInfo_FLAGS]
  pcwszFilePath PCWSTR
  pFileMUIInfo PFILEMUIINFO
  pcbFileMUIInfo DWORD*

func GetFileMUIPath
  BOOL
  dwFlags DWORD
  pcwszFilePath PCWSTR
  pwszLanguage PWSTR
  pcchLanguage PULONG
  pwszFileMUIPath PWSTR outputOnly
  pcchFileMUIPath PULONG
  pululEnumerator PULONGLONG

func GetProcessPreferredUILanguages
  BOOL
  dwFlags [MUI_LANGUAGE_FORMAT_FLAGS]
  pulNumLanguages PULONG
  pwszLanguagesBuffer PZZWSTR outputOnly
  pcchLanguagesBuffer PULONG

func GetSystemDefaultUILanguage
  success NotEqual=0
  LANGID

func GetSystemPreferredUILanguages
  BOOL
  dwFlags [GetSystemPreferredUILanguages_FLAGS]
  pulNumLanguages PULONG
  pwszLanguagesBuffer PZZWSTR outputOnly
  pcchLanguagesBuffer PULONG

func GetThreadPreferredUILanguages
  BOOL
  dwFlags [GetThreadPreferredUILanguages_FLAGS]
  pulNumLanguages PULONG
  pwszLanguagesBuffer PZZWSTR outputOnly
  pcchLanguagesBuffer PULONG

func GetThreadUILanguage
  success NotEqual=0
  LANGID

func GetUILanguageInfo
  BOOL
  dwFlags [MUI_LANGUAGE_FORMAT_FLAGS]
  pwmszLanguage PCZZWSTR
  pwszFallbackLanguages PZZWSTR outputOnly
  pcchFallbackLanguages PDWORD
  pdwAttributes [MUI_LANGUAGE_ATTRIBUTES*]

func GetUserDefaultUILanguage
  success NotEqual=0
  LANGID

func GetUserPreferredUILanguages
  BOOL
  dwFlags [MUI_LANGUAGE_FORMAT_FLAGS]
  pulNumLanguages PULONG
  pwszLanguagesBuffer PZZWSTR outputOnly
  pcchLanguagesBuffer PULONG

func SetProcessPreferredUILanguages
  BOOL
  dwFlags [MUI_LANGUAGE_FORMAT_FLAGS]
  pwszLanguagesBuffer PCZZWSTR outputOnly
  pulNumLanguages PULONG

func SetThreadPreferredUILanguages
  BOOL
  dwFlags [SetThreadPreferredUILanguages_FLAGS]
  pwszLanguagesBuffer PCZZWSTR outputOnly
  pulNumLanguages PULONG

func SetThreadUILanguage
  success NotEqual=0
  LANGID
  LangId LANGID

func CopyContext
  BOOL
  Destination PCONTEXT
  ContextFlags DWORD
  Source PCONTEXT

func GetEnabledXStateFeatures
  [XSTATE_FEATURE_64]

func GetXStateFeaturesMask
  BOOL
  Context PCONTEXT
  FeatureMask [XSTATE_MASK*]

func InitializeContext
  BOOL
  Buffer PVOID
  ContextFlags DWORD
  Context PCONTEXT*
  ContextLength PWORD

func LocateXStateFeature
  success NotEqual=0
  PVOID
  Context PCONTEXT
  FeatureId [XSTATE_FEATURE]
  Length PDWORD

func SetXStateFeaturesMask
  BOOL
  Context PCONTEXT
  FeatureMask [XSTATE_MASK]

func CheckElevation
  [ERROR_CODE]
  lpApplicationName LPCWSTR
  pdwFlags PDWORD
  hChildToken HANDLE
  pdwRunLevel PDWORD
  pdwReason PDWORD

