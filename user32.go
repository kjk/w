// THIS FILE WAS AUTO-GENERATED BY https://github.com/kjk/w/cmd/gengo
package w

import (
	"golang.org/x/sys/windows"
	"syscall"
	"unsafe"
)

var (
	libuser32 *windows.LazyDLL

	drawTextExW              *windows.LazyProc
	getWindowThreadProcessId *windows.LazyProc
	monitorFromRect          *windows.LazyProc
	getMonitorInfoW          *windows.LazyProc
	getSystemMetrics         *windows.LazyProc
	systemParametersInfoW    *windows.LazyProc
	getDesktopWindow         *windows.LazyProc
	findWindowW              *windows.LazyProc
	updateWindow             *windows.LazyProc
	setParent                *windows.LazyProc
	setWindowLongW           *windows.LazyProc
	getWindowLongW           *windows.LazyProc
	getWindowRect            *windows.LazyProc
	setFocus                 *windows.LazyProc
	setWindowPos             *windows.LazyProc
)

func init() {
	libuser32 = windows.NewLazySystemDLL("user32.dll")
	drawTextExW = libuser32.NewProc("DrawTextExW")
	getWindowThreadProcessId = libuser32.NewProc("GetWindowThreadProcessId")
	monitorFromRect = libuser32.NewProc("MonitorFromRect")
	getMonitorInfoW = libuser32.NewProc("GetMonitorInfoW")
	getSystemMetrics = libuser32.NewProc("GetSystemMetrics")
	systemParametersInfoW = libuser32.NewProc("SystemParametersInfoW")
	getDesktopWindow = libuser32.NewProc("GetDesktopWindow")
	findWindowW = libuser32.NewProc("FindWindowW")
	updateWindow = libuser32.NewProc("UpdateWindow")
	setParent = libuser32.NewProc("SetParent")
	setWindowLongW = libuser32.NewProc("SetWindowLongW")
	getWindowLongW = libuser32.NewProc("GetWindowLongW")
	getWindowRect = libuser32.NewProc("GetWindowRect")
	setFocus = libuser32.NewProc("SetFocus")
	setWindowPos = libuser32.NewProc("SetWindowPos")
}

const (
	MONITOR_DEFAULTTONULL    = 0x00000000
	MONITOR_DEFAULTTOPRIMARY = 0x00000001
	MONITOR_DEFAULTTONEAREST = 0x00000002
)

type MONITORINFO struct {
	CbSize    uint32
	RcMonitor RECT
	RcWork    RECT
	DwFlags   uint32
}

const (
	SM_CXSCREEN                    = 0
	SM_CYSCREEN                    = 1
	SM_CXVSCROLL                   = 2
	SM_CYHSCROLL                   = 3
	SM_CYCAPTION                   = 4
	SM_CXBORDER                    = 5
	SM_CYBORDER                    = 6
	SM_CXDLGFRAME                  = 7
	SM_CYDLGFRAME                  = 8
	SM_CYVTHUMB                    = 9
	SM_CXHTHUMB                    = 10
	SM_CXICON                      = 11
	SM_CYICON                      = 12
	SM_CXCURSOR                    = 13
	SM_CYCURSOR                    = 14
	SM_CYMENU                      = 15
	SM_CXFULLSCREEN                = 16
	SM_CYFULLSCREEN                = 17
	SM_CYKANJIWINDOW               = 18
	SM_MOUSEPRESENT                = 19
	SM_CYVSCROLL                   = 20
	SM_CXHSCROLL                   = 21
	SM_DEBUG                       = 22
	SM_SWAPBUTTON                  = 23
	SM_RESERVED1                   = 24
	SM_RESERVED2                   = 25
	SM_RESERVED3                   = 26
	SM_RESERVED4                   = 27
	SM_CXMIN                       = 28
	SM_CYMIN                       = 29
	SM_CXSIZE                      = 30
	SM_CYSIZE                      = 31
	SM_CXFRAME                     = 32
	SM_CYFRAME                     = 33
	SM_CXMINTRACK                  = 34
	SM_CYMINTRACK                  = 35
	SM_CXDOUBLECLK                 = 36
	SM_CYDOUBLECLK                 = 37
	SM_CXICONSPACING               = 38
	SM_CYICONSPACING               = 39
	SM_MENUDROPALIGNMENT           = 40
	SM_PENWINDOWS                  = 41
	SM_DBCSENABLED                 = 42
	SM_CMOUSEBUTTONS               = 43
	SM_SECURE                      = 44
	SM_CXEDGE                      = 45
	SM_CYEDGE                      = 46
	SM_CXMINSPACING                = 47
	SM_CYMINSPACING                = 48
	SM_CXSMICON                    = 49
	SM_CYSMICON                    = 50
	SM_CYSMCAPTION                 = 51
	SM_CXSMSIZE                    = 52
	SM_CYSMSIZE                    = 53
	SM_CXMENUSIZE                  = 54
	SM_CYMENUSIZE                  = 55
	SM_ARRANGE                     = 56
	SM_CXMINIMIZED                 = 57
	SM_CYMINIMIZED                 = 58
	SM_CXMAXTRACK                  = 59
	SM_CYMAXTRACK                  = 60
	SM_CXMAXIMIZED                 = 61
	SM_CYMAXIMIZED                 = 62
	SM_NETWORK                     = 63
	SM_CLEANBOOT                   = 67
	SM_CXDRAG                      = 68
	SM_CYDRAG                      = 69
	SM_SHOWSOUNDS                  = 70
	SM_CXMENUCHECK                 = 71
	SM_CYMENUCHECK                 = 72
	SM_SLOWMACHINE                 = 73
	SM_MIDEASTENABLED              = 74
	SM_MOUSEWHEELPRESENT           = 75
	SM_XVIRTUALSCREEN              = 76
	SM_YVIRTUALSCREEN              = 77
	SM_CXVIRTUALSCREEN             = 78
	SM_CYVIRTUALSCREEN             = 79
	SM_CMONITORS                   = 80
	SM_SAMEDISPLAYFORMAT           = 81
	SM_IMMENABLED                  = 82
	SM_CXFOCUSBORDER               = 83
	SM_CYFOCUSBORDER               = 84
	SM_TABLETPC                    = 86
	SM_MEDIACENTER                 = 87
	SM_STARTER                     = 88
	SM_SERVERR2                    = 89
	SM_MOUSEHORIZONTALWHEELPRESENT = 91
	SM_CXPADDEDBORDER              = 92
)

const (
	GWL_WNDPROC    = -4
	GWL_HINSTANCE  = -6
	GWL_HWNDPARENT = -8
	GWL_ID         = -12
	GWL_STYLE      = -16
	GWL_EXSTYLE    = -20
	GWL_USERDATA   = -21
	DWL_MSGRESULT  = 0
	DWL_DLGPROC    = 4
	DWL_USER       = 8
)

const (
	HWND_TOP       = 0
	HWND_BOTTOM    = 1
	HWND_TOPMOST   = -1
	HWND_NOTOPMOST = -2
)

const (
	SWP_NOSIZE         = 0x0001
	SWP_NOMOVE         = 0x0002
	SWP_NOZORDER       = 0x0004
	SWP_NOREDRAW       = 0x0008
	SWP_NOACTIVATE     = 0x0010
	SWP_FRAMECHANGED   = 0x0020
	SWP_SHOWWINDOW     = 0x0040
	SWP_HIDEWINDOW     = 0x0080
	SWP_NOCOPYBITS     = 0x0100
	SWP_NOSENDCHANGING = 0x0400
	SWP_NOREPOSITION   = 0x0200
	SWP_DEFERERASE     = 0x2000
	SWP_ASYNCWINDOWPOS = 0x4000
)

func DrawTextExWSys(hdc HDC, lpchText *WCHAR, cchText int32, lprc *RECT, dwDTFormat uint32, lpDTParams *DRAWTEXTPARAMS) int32 {
	ret, _, _ := syscall.Syscall6(drawTextExW.Addr(), 6,
		uintptr(hdc),
		uintptr(unsafe.Pointer(lpchText)),
		uintptr(cchText),
		uintptr(unsafe.Pointer(lprc)),
		uintptr(dwDTFormat),
		uintptr(unsafe.Pointer(lpDTParams)),
	)
	return int32(ret)
}

func GetWindowThreadProcessIdSys(hWnd HWND, lpdwProcessId *uint32) uint32 {
	ret, _, _ := syscall.Syscall(getWindowThreadProcessId.Addr(), 2,
		uintptr(hWnd),
		uintptr(unsafe.Pointer(lpdwProcessId)),
		0,
	)
	return uint32(ret)
}

func MonitorFromRectSys(lprc *RECT, dwFlags uint32) HMONITOR {
	ret, _, _ := syscall.Syscall(monitorFromRect.Addr(), 2,
		uintptr(unsafe.Pointer(lprc)),
		uintptr(dwFlags),
		0,
	)
	return HMONITOR(ret)
}

func GetMonitorInfoWSys(hMonitor HMONITOR, lpmi *MONITORINFO) int32 {
	ret, _, _ := syscall.Syscall(getMonitorInfoW.Addr(), 2,
		uintptr(hMonitor),
		uintptr(unsafe.Pointer(lpmi)),
		0,
	)
	return int32(ret)
}

func GetSystemMetricsSys(nIndex int32) int32 {
	ret, _, _ := syscall.Syscall(getSystemMetrics.Addr(), 1,
		uintptr(nIndex),
		0,
		0,
	)
	return int32(ret)
}

func SystemParametersInfoWSys(uiAction uint32, uiParam uint32, pvParam unsafe.Pointer, fWinIni uint32) int32 {
	ret, _, _ := syscall.Syscall6(systemParametersInfoW.Addr(), 4,
		uintptr(uiAction),
		uintptr(uiParam),
		uintptr(pvParam),
		uintptr(fWinIni),
		0,
		0,
	)
	return int32(ret)
}

func GetDesktopWindowSys() HWND {
	ret, _, _ := syscall.Syscall(getDesktopWindow.Addr(), 0,
		0,
		0,
		0,
	)
	return HWND(ret)
}

func FindWindowWSys(lpClassName *uint16, lpWindowName *uint16) HWND {
	ret, _, _ := syscall.Syscall(findWindowW.Addr(), 2,
		uintptr(unsafe.Pointer(lpClassName)),
		uintptr(unsafe.Pointer(lpWindowName)),
		0,
	)
	return HWND(ret)
}

func UpdateWindowSys(hWnd HWND) int32 {
	ret, _, _ := syscall.Syscall(updateWindow.Addr(), 1,
		uintptr(hWnd),
		0,
		0,
	)
	return int32(ret)
}

func SetParentSys(hWndChild HWND, hWndNewParent HWND) HWND {
	ret, _, _ := syscall.Syscall(setParent.Addr(), 2,
		uintptr(hWndChild),
		uintptr(hWndNewParent),
		0,
	)
	return HWND(ret)
}

func SetWindowLongWSys(hWnd HWND, nIndex int32, dwNewLong int32) int32 {
	ret, _, _ := syscall.Syscall(setWindowLongW.Addr(), 3,
		uintptr(hWnd),
		uintptr(nIndex),
		uintptr(dwNewLong),
	)
	return int32(ret)
}

func GetWindowLongWSys(hWnd HWND, nIndex int32) int32 {
	ret, _, _ := syscall.Syscall(getWindowLongW.Addr(), 2,
		uintptr(hWnd),
		uintptr(nIndex),
		0,
	)
	return int32(ret)
}

func GetWindowRectSys(hWnd HWND, lpRect *RECT) int32 {
	ret, _, _ := syscall.Syscall(getWindowRect.Addr(), 2,
		uintptr(hWnd),
		uintptr(unsafe.Pointer(lpRect)),
		0,
	)
	return int32(ret)
}

func SetFocusSys(hWnd HWND) HWND {
	ret, _, _ := syscall.Syscall(setFocus.Addr(), 1,
		uintptr(hWnd),
		0,
		0,
	)
	return HWND(ret)
}

func SetWindowPosSys(hWnd HWND, hWndInsertAfter HWND, X int32, Y int32, cx int32, cy int32, uFlags uint32) int32 {
	ret, _, _ := syscall.Syscall9(setWindowPos.Addr(), 7,
		uintptr(hWnd),
		uintptr(hWndInsertAfter),
		uintptr(X),
		uintptr(Y),
		uintptr(cx),
		uintptr(cy),
		uintptr(uFlags),
		0,
		0,
	)
	return int32(ret)
}
